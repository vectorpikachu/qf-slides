[
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)   \n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\cG}{\\mathcal{G} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\def\\Cov{{ \\text{Cov} }}\n\\def\\Var{{ \\text{Var} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\renewcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\renewcommand{\\underbar}{\\underline}\n\\newcommand{\\mbA}{\\mathbf A}\n\\newcommand{\\mbB}{\\mathbf B}\n\\newcommand{\\mbP}{\\mathbf P}\n\\newcommand{\\mbQ}{\\mathbf Q}\n\\newcommand{\\mbR}{\\mathbf R}\n\\newcommand{\\mbS}{\\mathbf S}\n\\newcommand{\\bA}{\\boldsymbol A}\n\\newcommand{\\bB}{\\boldsymbol B}\n\\newcommand{\\bu}{\\boldsymbol u}\n\\newcommand{\\bq}{\\boldsymbol q}\n\\newcommand{\\bW}{\\boldsymbol W}\n\\newcommand{\\bX}{\\boldsymbol X}\n\\newcommand{\\bx}{\\boldsymbol x}\n\\newcommand{\\bSigma}{\\boldsymbol \\Sigma}\n\\newcommand{\\tS}{\\tilde S}\n\\newcommand{\\inn}[2]{\\left\\langle #1, #2 \\right\\rangle}\n\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#lecture-6-optimal-execution-under-price-impact",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#lecture-6-optimal-execution-under-price-impact",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)   \n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\cG}{\\mathcal{G} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\def\\Cov{{ \\text{Cov} }}\n\\def\\Var{{ \\text{Var} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\renewcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\renewcommand{\\underbar}{\\underline}\n\\newcommand{\\mbA}{\\mathbf A}\n\\newcommand{\\mbB}{\\mathbf B}\n\\newcommand{\\mbP}{\\mathbf P}\n\\newcommand{\\mbQ}{\\mathbf Q}\n\\newcommand{\\mbR}{\\mathbf R}\n\\newcommand{\\mbS}{\\mathbf S}\n\\newcommand{\\bA}{\\boldsymbol A}\n\\newcommand{\\bB}{\\boldsymbol B}\n\\newcommand{\\bu}{\\boldsymbol u}\n\\newcommand{\\bq}{\\boldsymbol q}\n\\newcommand{\\bW}{\\boldsymbol W}\n\\newcommand{\\bX}{\\boldsymbol X}\n\\newcommand{\\bx}{\\boldsymbol x}\n\\newcommand{\\bSigma}{\\boldsymbol \\Sigma}\n\\newcommand{\\tS}{\\tilde S}\n\\newcommand{\\inn}[2]{\\left\\langle #1, #2 \\right\\rangle}\n\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#agenda",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#agenda",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Agenda",
    "text": "Agenda\n\nMarket impact of meta orders\n\nImpact profile\n\nEmpirical market impact profiles\nOptimal execution as variational and control problems\n\nrisk neutral\nmean-qv optimization\n\nThe Almgren-Chriss model and the Almgren-Chriss optimal liquidation strategy\nThe Obizhaeva-Wang model\nCombining Almgren-Chriss and Obizhaeva-Wang: the ACOW model\n\nNumerical examples"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#what-is-market-or-price-impact",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#what-is-market-or-price-impact",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "What is market or price impact?",
    "text": "What is market or price impact?\nEmpirically, in average a buy order pushes the price up whereas a sell order sends the price down. This empirically observed market phenomenon is referred to as price impact of transaction or trading.\nA price impact model is a model aiming at quantify the relationship between the transacted volume and price."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-square-root-formula-for-market-impact",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-square-root-formula-for-market-impact",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The square-root formula for market impact",
    "text": "The square-root formula for market impact\n\nFor many years, traders have used the simple sigma-root-liquidity model described for example by Grinold and Kahn in 1994.\nSoftware incorporating this model includes:\n\nSalomon Brothers, StockFacts Pro since around 1991\nBarra, Market Impact Model since around 1998\nBloomberg, TCA function since 2005\n\nThe model is always of the rough form\n\\[\\Delta P = \\text{Spread cost} +\\alpha\\,\\sigma\\,\\sqrt{\\frac Q V}\\] where \\(\\sigma\\) is daily dollar volatility, \\(V\\) is daily volume, \\(Q\\) is the number of shares to be traded and \\(\\alpha\\) is a constant pre-factor of order one."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#commonly-applied-algorithms",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#commonly-applied-algorithms",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Commonly applied algorithms",
    "text": "Commonly applied algorithms\n\nVWAP “Volume weighted average price”\n\nTrades at constant rate in volume time\n\nPOV “Percentage of volume”\n\nParticipate at a certain percentage of market volume\n\nTWAP “Time weighted average price”\n\nTrades at constant rate in wall clock time\n\nIS “Implementation shortfall”\n\nTrades faster at the beginning and more slowly at the end\nTo balance the risk of a worse price against the benefit of better execution from being patient."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#terminology",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#terminology",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Terminology",
    "text": "Terminology\n\nMetaorder means that a sufficiently large order that cannot be filled immediately without eating into the order book.\n\nSuch orders need to be split.\nEach component of a metaorder is referred to as a child order.\n\nThe  impact profile  refers to the average path of the stock price during and after execution of a metaorder.\nCompletion refers to the timestamp of the last executed child order."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#schematic-of-impact-profile",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#schematic-of-impact-profile",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Schematic of impact profile",
    "text": "Schematic of impact profile\n\n\n\nThe impact profile"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#stylized-features-of-impact-profile",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#stylized-features-of-impact-profile",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Stylized features of impact profile",
    "text": "Stylized features of impact profile\n\nWhen a buy metaorder of length \\(T\\) is sent, its immediate effect is to move the price upwards (to \\(S_T\\) say).\nAfter completion, the price reverts to some price \\(S_{\\infty}\\) (which may be the starting price \\(S_0\\)).\nMarket impact thus has two components: one transient and one permanent.\nKnowledge of the metaorder impact profile is key to the derivation of optimal execution strategies."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#empirical-market-impact-profiles-from-bacry2014marketimpactslifecycle",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#empirical-market-impact-profiles-from-bacry2014marketimpactslifecycle",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Empirical market impact profiles from (Bacry et al. 2014)",
    "text": "Empirical market impact profiles from (Bacry et al. 2014)"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#empirical-market-impact-profiles-from-zarinelli2014squarerootevidencelogarithmic",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#empirical-market-impact-profiles-from-zarinelli2014squarerootevidencelogarithmic",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Empirical market impact profiles from (Zarinelli et al. 2014)",
    "text": "Empirical market impact profiles from (Zarinelli et al. 2014)"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#notations",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#notations",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Notations",
    "text": "Notations\nThe following notations will be used throughout.\n\n\\(S_t\\): mid or efficient price\n\\(\\tilde S_t\\): transaction price. Thus, \\(\\tilde S_t = S_t + \\text{spread}\\).\n\\(\\sigma\\): volatility of stock.\n\\(Z_t\\): Brownian motions\n\\(v_t\\): trading rate at time \\(t\\)\n\\(X_t\\): remaining orders to be executed at time \\(t\\)"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#almgren-and-chriss",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#almgren-and-chriss",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Almgren and Chriss",
    "text": "Almgren and Chriss\n\nAlmgren and Chriss treats the execution of a meta order as a tradeoff between risk and execution cost.\nAccording to their formulation:\n\nThe faster an order is executed, the higher the execution cost\nThe faster an order is executed, the lower the risk (which is increasing in position size).\n\nNote that this is inconsistent with the empirical success of the square-root formula in describing the cost of meta orders."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-price-impact-model-of-almgren-and-chriss",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-price-impact-model-of-almgren-and-chriss",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The price impact model of Almgren and Chriss",
    "text": "The price impact model of Almgren and Chriss\nFor simplicity, we consider liquidation of an existing position \\(X\\). Denote the position at time \\(t\\) by \\(x_t\\) with \\(x_0=X\\) and \\(x_T=0\\).\nAlmgren and Chriss model market impact and slippage as follows.\n\\[\n\\tilde{S}_t = S_t + \\eta v_t = s_0 + \\sigma_S Z_t + \\gamma(X_t - x_0) + \\eta v_t,\n\\]\nwhere \\(X_t = x_0 + \\int_0^t v_s ds\\).\n\nNote\n\n\\(\\eta v_t\\): temporary impact\n\\(\\gamma (X_t - x_0)\\): permanenty impact\n\\(X_t = x_0 + v t\\) if \\(v_t \\equiv v\\), a constant."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#impact-profile-in-the-almgren-and-chriss-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#impact-profile-in-the-almgren-and-chriss-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Impact profile in the Almgren and Chriss model",
    "text": "Impact profile in the Almgren and Chriss model\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\nT = 1\nvwap_AC = lambda t: t/T*(t &lt;= T) + T*(t &gt; T)\nt = np.linspace(0, 2, 200)\n#plt.figure(figsize=(8, 6))\nplt.plot(t, vwap_AC(t), color='orange', label='Almgren-Chriss')\nplt.vlines(x=1, ymin=0, ymax=2, linewidth=0.5, ls='dotted')\nplt.ylim([0, 1.5])\nplt.xlabel(r'$t$', fontsize=15)\nplt.ylabel(r'$\\mathbb{E}|S_t - S_0|$', fontsize=15)\nplt.title('Almgren-Chriss price path', fontsize=18);"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#inconsistency-with-empirical-observation",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#inconsistency-with-empirical-observation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Inconsistency with empirical observation",
    "text": "Inconsistency with empirical observation\n\nThis price path is inconsistent with empirical observation:\n\nThe average price path during execution is linear.\nThere is no price reversion after completion of the order."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#pl-and-cost-of-trading-of-a-trading-strategy",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#pl-and-cost-of-trading-of-a-trading-strategy",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "P&L and cost of trading of a trading strategy",
    "text": "P&L and cost of trading of a trading strategy\nLet \\(x_t\\) be a trading strategy. The corresponding P&L (up to time \\(t\\)), denoted by \\(\\Pi_t(x)\\), is identified as\n\\[\n\\Pi_t(x) := x_t (S_t - S_0) + \\int_0^t (S_0 - \\tilde S_\\tau) d x_\\tau.\n\\]\n\nThe first term represents the (fair) value of stock shares that are yet to be transacted.\nThe second term corresponds to the monetary value collected from the shares that have been transacted up to time t.\nObviously, should there be no trade in the time interval \\([0,t]\\), i.e., \\(x_s = X\\) for all \\(s \\in [0,t]\\), the P&L reads \\(\\Pi_t(x) = X (S_t - S_0)\\); reflecting the P&L from the price movement of the stock.\n\n\nImplementation shortfall as cost of trading \nNegative P&L is also referred to as the implementation shortfall, which will be used as the cost of trading, denoted by \\(C\\) hereafter."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#pl-in-almgren-chriss-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#pl-in-almgren-chriss-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "P&L in Almgren-Chriss model",
    "text": "P&L in Almgren-Chriss model\nNote that, at the end of execution period \\(T\\), the P&L reads \\[\n  \\Pi_T(x) = x_T (S_T - S_0) + \\int_0^T (S_0 - \\tilde S_u) d x_u,\n\\] should there be \\(x_T\\) shares yet to be transacted. Hence, in Almgren-Chriss model\n\\[\\begin{align*}\n\\Pi_T(x) &= x_T (S_T - S_0) + \\int_0^T (S_0 - \\tilde S_u) d x_u \\\\\n&= \\int_0^T [- \\gamma (x_u - X) - \\sigma Z_u - \\eta v_u] d x_u \\quad (\\text{note that } x_T = 0) \\\\\n&= -\\frac\\gamma2 X^2 + \\sigma \\int_0^T x_u d Z_u - \\eta \\int_0^T v_u^2 du \\quad (\\text{Integration by parts}).\n\\end{align*}\\] Therefore, the expected cost corresponding to the trading strategy \\(x\\) is given by\n\\[\\begin{align*}\n& \\E\\left[C_T(x)\\right] = \\E\\left[-\\Pi_T(x)\\right] = \\frac\\gamma2 X^2 + \\eta \\int_0^T \\Eof{v_u^2} du.\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#expected-cost-of-twap-in-the-almgren-and-chriss-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#expected-cost-of-twap-in-the-almgren-and-chriss-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Expected cost of TWAP in the Almgren and Chriss model",
    "text": "Expected cost of TWAP in the Almgren and Chriss model\nFor a TWAP, \\(v_t = -\\frac XT\\) where \\(X\\) is the total trade size and \\(T\\) is the duration of the order.\n\\[\\begin{align*}\n\\E[C_T(x)] &= \\frac\\gamma2 X^2 + \\eta \\int_0^T \\left(\\frac XT\\right)^2 du \\\\\n&= \\frac\\gamma2 X^2 + \\eta \\frac{X^2}T \\\\\n&= \\left(\\frac\\gamma2 + \\frac\\eta{T}\\right)X^2.\n\\end{align*}\\]\nThe cost per share \\(\\hat C\\) of executing an order using TWAP is therefore\n\\[\\hat{C}=\\left(\\frac\\gamma2 + \\frac\\eta{T}\\right)X\\]\nwhich is linear in the trade size \\(X\\) and inversely proportional to the duration of the order."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#optimal-strategy-of-a-risk-neutral-trader",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#optimal-strategy-of-a-risk-neutral-trader",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Optimal strategy of a risk neutral trader",
    "text": "Optimal strategy of a risk neutral trader\nFor a risk neutral trader whose objective is to minimize the cost of trading, the optimal control problem reads\n\\[\\begin{align*}\n& \\min_{v} \\E\\left[C_T(x)\\right] \\\\\n&= \\min_{v} \\left\\{\\frac\\gamma2 X^2 + \\eta \\int_0^T \\Eof{v_u^2} du \\right\\} \\\\\n&= \\frac\\gamma2 X^2 + \\eta \\min_v \\int_0^T \\Eof{v_u^2} du,\n\\end{align*}\\]\nwhere the state variable \\(x_t\\) is driven by \\(dx_t = v_t dt\\) with the constraints \\(x_0 = X\\) and \\(x_T = 0\\).\nNote that, since \\(S_t\\) is not involved in the last expression, we end up with a deterministic control problem which can be solved by the solution to its assocated HJB equation or, due to the simplicity of the dynamics of \\(x_t\\), further reduced to a variational problem."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#variational-problem",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#variational-problem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Variational problem",
    "text": "Variational problem\n\\[\\min_x \\int_0^T\\,\\dot x_t^2\\,dt\\]\nwith \\(v_t=\\dot x_t\\) and \\(x_0 = X\\), \\(x_T = 0\\).\nThe Euler-Lagrange equation is then\n\\[\\partial_t v_t=\\partial_t^2 x_t=0\\]\nwith boundary conditions \\(x_0=X\\) and \\(x_T=0\\) and the solution is obviously\n\\[v_t = -\\frac{X}{T}; \\, x_t=X\\,\\left(1-\\frac{t}{T}\\right)\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#risk-neutral-trader-twap-is-optimal-in-almgren-chriss",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#risk-neutral-trader-twap-is-optimal-in-almgren-chriss",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Risk neutral trader: TWAP is optimal in Almgren-Chriss",
    "text": "Risk neutral trader: TWAP is optimal in Almgren-Chriss\nAs naive as the TWAP strategy may look, it is indeed optimal for a risk neutral trader in the Almgren-Chriss model."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#penalty-by-quadratric-variation",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#penalty-by-quadratric-variation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Penalty by quadratric variation",
    "text": "Penalty by quadratric variation\nAlmgren and Chriss[2] add a risk term that penalizes the approximate variance of the trading cost. They claim\n\\[ \\text{Var} \\left[\\int_0^T\\,x_t\\,dS_t\\right] \\approx \\sigma^2\\,\\int_0^T\\,x_t^2\\,dt. \\]\nIn fact, by Itô’s isomety, it is an equality if \\(x_t\\) is deterministic.\nThe expected risk-adjusted cost is then given by (temporarily ignore the path independent term \\(\\frac\\gamma2 X^2\\))\n\\[\\eta\\,\\int_0^T\\,{\\dot x}_t^2\\,dt + \\lambda\\,\\sigma^2\\,\\int_0^T\\,x_t^2\\,dt\\]\nfor some price of risk \\(\\lambda\\).\n\nNote the analogies to physics and portfolio theory.\n\nThe first term looks like kinetic energy and the second term like potential energy.\nThe expression looks like the objective in mean-variance portfolio optimization.\n\n\nThe Euler-Lagrange equation becomes\n\\[\\ddot x- \\kappa^2\\,x=0\\]\nwith\n\\[\\kappa^2=\\frac{\\lambda\\,\\sigma^2}{\\eta}.\\]\nThe solution is a linear combination of terms of the form \\(e^{\\pm \\kappa t}\\) that satisfies the boundary conditions \\(x_0=X\\), \\(x_T=0\\)."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#mean-qv-trader-the-almgren-chriss-strategy",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#mean-qv-trader-the-almgren-chriss-strategy",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Mean-QV trader: The Almgren-Chriss strategy",
    "text": "Mean-QV trader: The Almgren-Chriss strategy\nFor risk averse traders, by using the quadratic vartion of P&L during execution to penalize the terminal P&L/trading cost, the following strategy, referred to as the Almgren-Chriss strategy, is optimal.\n\\[\nx(t) = X\\,\\frac{\\sinh \\kappa (T-t)}{\\sinh \\kappa T},\n\\]\nwhere \\(\\kappa = \\sqrt{\\frac{\\lambda\\sigma_S^2}\\eta}\\), \\(\\lambda\\) is the parameter that proxies the trader’s risk aversion.\n\nNote\n\nThe strategy is deterministic.\nAlmgren-Chriss strategy gives an example of Implementation Shortfall type: trade fast at the beginning and more slowly towards the end.\n\n\n# order execution horizon\nT = 1\n\n# number of shares to execute\nX = 10_000\n\n# the Almgren-Chriss strategy\nopt_AC = lambda t, kappa: X*np.sinh(kappa*(T - t))/np.sinh(kappa*T)\n\n# plot\nt = np.linspace(0, T, 100)\nplt.figure(figsize=(8, 5))\nfor kappa in np.arange(1, 6):\n    plt.plot(t, opt_AC(t, kappa), label=f'$\\kappa$={kappa}')\n    \nplt.title('Almgren-Chriss strategy for various $\\kappa$')\nplt.xlabel(r'$t$')\nplt.ylabel(r'$x$')\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#applications-of-the-almgren-chriss-framework",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#applications-of-the-almgren-chriss-framework",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Applications of the Almgren-Chriss framework",
    "text": "Applications of the Almgren-Chriss framework\n\nAlthough the Almgren and Chriss price process is not particularly realistic, it leads to a tractable framework for solving a number of interesting practical problems.\nApplications include:\n\nPortfolio liquidation\nOptimal liquidation with a dark pool (e.g. [Kratz and Schöneborn][7])\nOptimal delta-hedging of options under transactions costs (e.g. [Li and Almgren][8])\nOptimal liquidation in the presence of a trading signal (e.g. [Almgren(2012)][3])"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#summary-on-the-almgren-chriss-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#summary-on-the-almgren-chriss-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Summary on the Almgren-Chriss model",
    "text": "Summary on the Almgren-Chriss model\n\nThe Almgren-Chriss price process is in practice the most widely-used.\nIt forms the basis for many of the algorithms and most of the thinking in algorithmic execution.\n\ndespite the fact that it is unrealistic: market impact decays instantaneously and it is completely incompatible with the square-root law.\n\nBecause of the analytical tractability of the Almgren-Chriss framework, there are closed-form or quasi-closed-form solutions for many problems of practical interest."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#transient-impact-models",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#transient-impact-models",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Transient impact models",
    "text": "Transient impact models\nThe price process assumed in transient impact model is\n\\[S_t = S_0 + \\int_0^t\\,h(v_s)\\,G(t-s)\\,ds+M_t, \\quad \\text{ where } M_t \\text{ is a zero mean martingale/noise.}\\]\n\n\\(h(v_s)\\) is referred to as the instantaneous market impact function, which represents the impact of trading at time \\(s\\), and \\(G(t-s)\\) is a decay factor. Note that \\(h(v) &gt; 0\\) if \\(v &gt; 0\\); whereas \\(h(v) &lt; 0\\) if \\(v &lt; 0\\).\nThe cumulative impact of (others’) trading is implicitly in \\(S_0\\) and the noise term.\nThe model is a generalization of processes due to Almgren, Bouchaud, and Obizhaeva and Wang."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#pl-and-cost-of-trading-in-transient-impact-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#pl-and-cost-of-trading-in-transient-impact-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "P&L and cost of trading in transient impact model",
    "text": "P&L and cost of trading in transient impact model\nNote that, at the end of execution period \\(T\\), the P&L reads \\[\n  \\Pi_T(x) = x_T (S_T - S_0) + \\int_0^T (S_0 - \\tilde S_u) d x_u,\n\\] should there be \\(x_T\\) shares yet to be transacted. Hence, in transient impact model (note that \\(\\tilde S_t = S_t\\))\n\\[\\begin{align*}\n\\Pi_T(x) &= x_T (S_T - S_0) + \\int_0^T (S_0 - \\tilde S_u) d x_u \\\\\n&= - \\int_0^T \\int_0^t h(v_u)G(t-u) du d x_t - \\int_0^T M_t d x_t \\quad (\\text{since } x_T = 0) \\\\\n&= - \\int_0^T \\int_0^t h(v_u)G(t-u) du d x_t - (M_T x_T - M_0 x_0) + \\int_0^T x_t d M_t \\quad (\\text{Integration by parts}) \\\\\n&= - \\int_0^T \\int_0^t h(v_u)G(t-u) du d x_t + \\int_0^T x_t d M_t \\quad (\\text{since } x_T = 0 \\text{ and } M_0 = 0).\n\\end{align*}\\] Therefore, the expected cost corresponding to the trading strategy \\(x\\) is given by\n\\[\\begin{align*}\n& \\E\\left[C_T(x)\\right] = \\E\\left[-\\Pi_T(x)\\right] = \\Eof{\\int_0^T \\int_0^t h(v_u)G(t-u) du d x_t}.\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-optimal-strategy-of-a-risk-neutral-trader",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-optimal-strategy-of-a-risk-neutral-trader",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The optimal strategy of a risk neutral trader",
    "text": "The optimal strategy of a risk neutral trader\nFor a risk neutral trader whose objective is to minimize the expected cost of trading, the optimal control problem reads\n\\[\\begin{align*}\n& \\min_{v} \\E\\left[C_T(x)\\right] = \\min_v \\int_0^T \\int_0^t h(v_u)G(t-u) du d x_t,\n\\end{align*}\\]\nwhere the state variable \\(x_t\\) is driven by \\(dx_t = v_t dt\\) with the constraints \\(x_0 = X\\) and \\(x_T = 0\\). It is equivalent to a variational problem.\n\\[\\begin{align*}\n& \\min_{v} \\E\\left[C_T(x)\\right] = \\min_v \\left\\{\\int_0^T \\int_0^t h(v_u)G(t-u) du v_t dt\\right\\},\n\\end{align*}\\]\nsubject to the constraint \\(\\int_0^T v_t dt = X\\)."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#lagrange-multiplier",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#lagrange-multiplier",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Lagrange multiplier",
    "text": "Lagrange multiplier\nTo derive the Euler-Lagrange equation, consider the Lagrangian\n\\[\\begin{align*}\n  & L(v,\\lambda) = \\int_0^T\\int_0^t v_t G(t-s) h(v_s) ds dt - \\lambda \\left( \\int_0^T v_t dt - X \\right) \\\\\n  &= \\int_0^T \\left[ \\int_0^t G(t-s) h(v_s) ds - \\lambda \\right] v_t dt + \\lambda X,\n\\end{align*}\\]\nwhere \\(\\lambda\\) is the Lagrange multiplier."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#euler-lagrange-equation",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#euler-lagrange-equation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Euler-Lagrange equation",
    "text": "Euler-Lagrange equation\nLet \\(\\varphi\\) be a perturbation. Consider the first order criterion for the Lagrangian \\(L\\):\n\\[\\begin{align*}\n  0 &= \\left.\\frac{d}{d\\epsilon}\\right|_{\\epsilon=0} L( v_t + \\epsilon \\varphi_t,\\lambda) \\\\\n  &= \\left.\\frac{d}{d\\epsilon}\\right|_{\\epsilon=0} \\int_0^T \\left[ \\int_0^t G(t-s) h(v_s + \\epsilon \\varphi_s) ds - \\lambda \\right] (v_t + \\epsilon \\varphi_t ) dt  \\\\\n  &= \\int_0^T \\left[ \\int_0^t G(t-s) h'(v_s) \\varphi_s ds \\right] v_t dt\n   + \\int_0^T \\left[ \\int_0^t G(t-s) h(v_s) ds - \\lambda \\right] \\varphi_t dt  \\\\\n  &= \\int_0^T \\int_0^t G(t-s) h'(v_s) \\varphi_s v_t ds dt + \\int_0^T \\left[ \\int_0^t G(t-s) h(v_s) ds - \\lambda \\right] \\varphi_t dt  \\\\\n%  &= \\int_0^T \\int_s^T G(t-s) h'(v_s) \\varphi_s v_t dt ds + \\int_0^T \\left[ \\int_0^t G(t-s) h(v_s) ds + \\lambda \\right] \\varphi_t dt  \\\\\n  &= \\int_0^T \\left[ \\int_t^T G(s-t) h'(v_t) v_s ds + \\int_0^t G(t-s) h(v_s) ds - \\lambda \\right] \\varphi_t dt.\n\\end{align*}\\]\nSince \\(\\varphi_t\\) is arbitrary (because the first order criterion must hold for any perturbation), we must have\n(2) \\[\n  \\int_t^T G(s-t) h'(v_t) v_s ds + \\int_0^t G(t-s) h(v_s) ds = \\lambda\n\\]\nfor all \\(0\\leq t\\leq T\\). This is a generalized Fredholm integral equation of the first kind. The Lagrange multiplier \\(\\lambda\\) is determined by the constraint \\(\\int_0^T v_t dt = -X\\)."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-obizhaeva-and-wang-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#the-obizhaeva-and-wang-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Obizhaeva and Wang model",
    "text": "The Obizhaeva and Wang model\nThe model in [Obizhaeva and Wang][7] is given by\n(1) \\[S_t = S_0 + \\eta\\,\\int_0^t\\,v_s\\,e^{-\\rho\\,(t-s)}\\,ds + \\sigma_S Z_t\\]\nwith \\(v_t=\\dot x_t\\).\n\nMarket impact decays exponentially, i.e., \\(G(\\tau) = e^{-\\rho\\tau}\\)\nInstantaneous market impact is linear in the rate of trading, \\(h(v) = \\eta v\\).\n\nThe expected cost of trading becomes: \\[\\mathcal{C} =\\eta\\,\\int_0^T\\int_0^t\\,{v}_s\\,e^{-\\rho\\,(t-s)}\\,ds\\, v_tdt\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#impact-profile-in-the-obizhaeva-and-wang-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#impact-profile-in-the-obizhaeva-and-wang-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Impact profile in the Obizhaeva and Wang model",
    "text": "Impact profile in the Obizhaeva and Wang model\n\nrhos = [0.6, 1, 1.4]\ndef twap_ow(t, rho):\n    term1 = (1 - np.exp(-rho*t))*(t &lt;= T) \n    term2 = (1 - np.exp(-rho*T))*np.exp(rho*(T-t))*(t &gt; T) \n    return (term1 + term2)/rho\n\nt = np.linspace(0, 2, 200)\n#plt.figure(figsize=(8, 5))\nfor rho in rhos:\n    plt.plot(t, twap_ow(t, rho), label=fr'$\\rho$={rho}')\nplt.vlines(x=1, ymin=0, ymax=2, linewidth=0.5, ls='dotted')\nplt.ylim([0, 1])\nplt.xlabel(r'$t$', fontsize=15)\nplt.ylabel(r'$\\tilde S_t$', fontsize=15)\nplt.title('Impact profile in Obizhaeva-Wang model', fontsize=18)\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#optimal-strategy-in-obizhaeva-wang",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#optimal-strategy-in-obizhaeva-wang",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Optimal strategy in Obizhaeva-Wang",
    "text": "Optimal strategy in Obizhaeva-Wang\nThe Euler-Lagrange equation in this case reads:\n\\[\n\\eta \\int_t^T\\,v_s\\,e^{-\\rho\\,(s-t)}\\,ds + \\eta \\int_0^t\\,v_s\\,e^{-\\rho\\,(t-s)}\\,ds  = \\lambda.\n\\]\nwhich may be rewritten as\n\\[\\int_0^T\\,v_s\\,e^{-\\rho\\,|t-s|}\\,ds = \\frac\\lambda\\eta\\]\nwhich is a Fredholm integral equation of the first kind.\nThe solution is\n\\[v_t = \\frac\\lambda\\eta \\,\\left\\{\\delta(t)+\\rho+\\delta(T-t)\\right\\}\\]\nThe Lagrange multiplier \\(\\lambda\\) is determined by\n\\[-X = x_T - x_0 = \\int_0^T\\, v_t \\,dt = \\frac\\lambda\\eta \\, \\left(2+\\rho\\,T\\right)\\]\nThus, \\(\\frac\\lambda\\eta = -\\frac X{2 + \\rho T}\\) and\n\\[\nv_t = -\\frac X{2 + \\rho T}\\left\\{\\delta(t)+\\rho+\\delta(T-t)\\right\\}.\n\\]\nThe optimal strategy consists of block trades at \\(t=0\\) and \\(t=T\\) and continuous trading at the constant rate \\(\\rho\\) between these two times.\n\nNote\n\nThe case \\(\\rho = 0\\) corresponds to the Almgren-Chriss model with only permanent impact. In this case, the strategy suggests a block trade of half of the total shares at the beginning and a block trade of the other in the end. In fact, in this case all strategies are optimal since the expected cost is a constant, independent of the strategies!"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#obizhaeva-wang-as-a-control-problem",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#obizhaeva-wang-as-a-control-problem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Obizhaeva-Wang as a control problem",
    "text": "Obizhaeva-Wang as a control problem\nWe may recast the optimal execution problem in the Obizhaeva-Wang model as a control problem as follows.\nLet\n\\[\nY_t = \\eta \\int_0^t e^{-\\rho(t-s)} v_s ds.\n\\]\nThus, we can rewrite the dynamic for \\(S_t\\) as \\(S_t = s_0 + Y_t + \\sigma_S Z_t\\). It follows that the state equations are given by\n\\[\\begin{align*}\n& dX_t = v_t dt, \\quad X_0 = X \\\\\n& dY_t = \\left\\{\\eta v_t - \\rho Y_t \\right\\}dt, \\quad Y_0 = 0 \\\\\n\\end{align*}\\]\nObjective functional (the expected cost)\n\\[\\begin{align*}\n& \\int_0^T y_t v_t dt.\n\\end{align*}\\]\nNotice that we end up with a deterministic control problem."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#value-function",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#value-function",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Value function",
    "text": "Value function\nAs always, the value function \\(J\\) is defined as\n\\[\nJ(t, x, y) = \\min_v \\int_t^T y_s v_s ds.\n\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#hjb-equation",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#hjb-equation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "HJB equation",
    "text": "HJB equation\nThe value function will satisfy the following HJB equation.\n\\[\\begin{align*}\n& J_t + \\min_v\\{yv + v J_x + (\\eta v - \\rho y)J_y \\} \\\\\n&= J_t - \\rho y J_y + \\min_v\\{(y + J_x + \\eta J_y) v\\} \\\\\n&= 0\n\\end{align*}\\]\nTurns out the control theory formulation of the optimal execution problem under Obizhaeva-Wang model is pretty tricky since\n\\[\n\\min_v\\{(y + J_x + \\eta J_y) v\\} = \\left\\{\\begin{array}{ll}\n- \\infty & \\text{if } y + J_x + \\eta J_y \\neq 0, \\\\\n0 & \\text{if } y + J_x + \\eta J_y = 0.\n\\end{array}\\right.\n\\]\nSpecial treatment for this type of problems are required."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#combining-almgren-chriss-and-obizhaeva-wang-the-acow-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#combining-almgren-chriss-and-obizhaeva-wang-the-acow-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Combining Almgren-Chriss and Obizhaeva-Wang: the ACOW model",
    "text": "Combining Almgren-Chriss and Obizhaeva-Wang: the ACOW model\nWe add up the Almgren-Chriss model and the Obizhaeva-Wang model as\n\\[\\begin{align*}\n& S_t = s_0 + \\gamma (X_t - X_0) + Y_t + \\sigma_S W_t, \\\\\n& \\tS_t = S_t + \\eta v_t,\n\\end{align*}\\]\nwhere\n\\[\nY_t = \\int_0^t e^{-\\rho(t - s)} \\phi v_s ds + \\sigma \\int_0^t e^{-\\rho(t-s)} dZ_s\n\\]\nbe the price impact (due to trading). Then \\(Y_t\\) satisfies the ODE\n\\[\nd Y_t = \\{\\phi v_t - \\rho Y_t\\}dt + \\sigma dZ_t, \\quad Y_0 = 0.\n\\]\n\n\\(S_t\\): efficient/mid price\n\\(\\tilde S_t\\): traded price\n\\(Y_t\\): (stochastic) impact to the efficient/mid price due to trading as in Obizhaeva-Wang\n\\(\\phi v_t\\): linear instantaneous impact\n\\(\\eta v_t\\): linear temporary impact\n\\(\\gamma (X_t - X_0)\\): linear permanent impact\n\n\nNote\n\nWithout the \\(Y\\) term, the model reduces to Almgren-Chriss.\nIf \\(\\gamma = \\eta = \\sigma = 0\\), the model reduces to Obizhaeva-Wang.\nThe rationale is that Almgren-Chriss takes care of the permanent impact component whereas the trasient impact component for Obizhaeva-Wang."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#impact-profile-under-the-model",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#impact-profile-under-the-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Impact profile under the model",
    "text": "Impact profile under the model\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport scipy.stats as ss\n\n\nT = 1\ntwap_AC = lambda t: t/T*(t &lt;= T) + T*(t &gt; T)\nrho = 1.5\nm = 2/3\ndef twap_model(t):\n    term1 = (1 - np.exp(-rho*t))*(t &lt;= T) \n    term2 = (1 - np.exp(-rho*T))*np.exp(rho*(T-t))*(t &gt; T) \n    invent = m*(term1 + term2)/rho\n    return invent + twap_AC(t)\n\nt = np.linspace(0, 2, 200)\n#plt.figure(figsize=(8, 6))\nplt.plot(t, twap_AC(t), ls='dotted', color='blue', label='Almgren-Chriss')\nplt.plot(t, twap_model(t), ls='dashed', color='blue', label='ACOW')\nplt.vlines(x=1, ymin=0, ymax=2, linewidth=0.5, ls='dotted')\nplt.ylim([0, 1.8])\nplt.xlabel(r'$t$', fontsize=15)\nplt.ylabel(r'$\\tilde S_t$', fontsize=15)\nplt.title('Impact profile under TWAP', fontsize=18)\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#control-problem",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#control-problem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Control problem",
    "text": "Control problem\nState equations \\[\\begin{align*}\n& dX_t = v_t dt, \\quad X_0 = X \\\\\n& dY_t = \\left\\{\\phi v_t - \\rho Y_t \\right\\}dt + \\sigma dZ_t, \\quad Y_0 = 0, \\\\\n& S_t = s_0 + \\gamma (X_t - X_0) + Y_t + \\sigma_S W_t \\\\\n& s_0 - \\tS_t = -\\gamma (X_t - X_0) - Y_t - \\sigma_S W_t - \\eta v_t\n\\end{align*}\\]\nObjective functional (the expected P&L, marked to the price \\(s_0\\))\n\\[\\begin{align*}\n& \\Eof{X_T(S_T - s_0) + \\int_0^T (s_0 - \\tS_t) dX_t} \\\\\n&= \\Eof{X_T \\{\\gamma (X_T - X_0) + Y_T + \\sigma_S W_T\\} - \\int_0^T \\left\\{\\gamma (X_t - X_0) + Y_t + \\sigma_S W_t + \\eta v_t \\right\\} dX_t}\n\\end{align*}\\]\nNote that, by applying integration by parts, we have\n\\[\\begin{align*}\n& -\\gamma \\int_0^T (X_t - X_0) dX_t -\\int_0^T (Y_t + \\sigma_S W_t) dX_t - \\eta \\int_0^T v_t^2 dt \\\\\n&= -\\frac\\gamma2 (X_T - X_0)^2 - X_T (Y_T + \\sigma_S W_T) + X_0 (Y_0 + \\sigma_S W_0) + \\int_0^T X_t dY_t + \\sigma_S \\int_0^T X_t dW_t - \\eta \\int_0^T v_t^2 dt \\\\\n&= -\\frac\\gamma2 (X_T - X_0)^2 -X_T (Y_T + \\sigma_S W_T) + \\int_0^T X_t \\left\\{\\phi v_t - \\rho Y_t \\right\\} dt + \\sigma \\int_0^T X_t dZ_t + \\sigma_S \\int_0^T X_t dW_t - \\eta \\int_0^T v_t^2 dt\n\\end{align*}\\]\nThus,\n\\[\\begin{align*}\n& \\Eof{X_T \\{\\gamma (X_T - X_0) + Y_T + \\sigma_S W_T)\\} - \\int_0^T \\{\\gamma (X_t - X_0) + Y_t + \\sigma_S W_t + \\eta v_t\\} v_t dt} \\\\\n&= \\Eof{ \\frac\\gamma2 (X_T^2 + X_0^2) + \\int_0^T X_t \\left\\{\\phi v_t - \\rho Y_t \\right\\} - \\eta v_t^2 dt}\n\\end{align*}\\]\nPenalize the final block trade by \\(-\\beta X_T^2\\). The objective functional reads\n\\[\\begin{align*}\n&= \\frac\\gamma2 X_0^2 + \\Eof{\\left(\\frac\\gamma2 - \\beta\\right) X_T^2 + \\phi \\int_0^T X_s dX_s - \\int_0^T \\left(\\rho X_s Y_s + \\eta v_s^2\\right) ds} \\\\\n&= \\frac{\\gamma - \\phi}2 X_0^2 + \\Eof{\\left(\\frac{\\gamma + \\phi}2 -\\beta\\right) X_T^2 - \\int_0^T \\left(\\rho X_s Y_s + \\eta v_s^2\\right) ds}.\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#matrix-notations",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#matrix-notations",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Matrix notations",
    "text": "Matrix notations\nRewrite the equation in matrix notations.\n\\[\\begin{align*}\n& \\bX = \\left[\\begin{array}{c} x \\\\ y \\end{array}\\right], \\\\\n& \\mbP = \\left[\\begin{array}{cc}\n\\frac{\\gamma + \\phi}2 - \\beta & 0 \\\\\n0 & 0\n\\end{array}\\right],\n\\qquad\n\\mbQ = \\left[\\begin{array}{cc}\n0 & -\\frac\\rho2 \\\\\n-\\frac\\rho2 & 0\n\\end{array}\\right],\n\\qquad\n\\mbS = \\left[0 \\quad 0\\right],\n\\qquad\n\\mbR = -\\eta, \\\\\n& \\mbA = \\left[\\begin{array}{cc}\n0 & 0 \\\\\n0 & -\\rho\n\\end{array}\\right],\n\\qquad\n\\mbB = \\left[\\begin{array}{c}\n1 \\\\\n\\phi\n\\end{array}\\right],\n\\qquad\n\\bSigma = \\left[\\begin{array}{c}\n0 \\\\\n\\sigma\n\\end{array}\\right].\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#lq-problem",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#lq-problem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "LQ problem",
    "text": "LQ problem\nWe obtain the following LQ control problem\n\\[\n\\max_u \\Eof{\\bX_T' \\mbP \\bX_T + \\int_0^T \\left(\\bX_t' \\mbQ \\bX_t + \\bu_t' \\mbR \\bu_t \\right) dt},\n\\]\nwith the controlled SDE given by\n\\[\nd\\bX_t = (A \\bX_t + \\mbB v_t)dt + \\bSigma dZ_t\n\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#value-function-and-hjb-equation",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#value-function-and-hjb-equation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Value function and HJB equation",
    "text": "Value function and HJB equation\nLet \\(V\\) be the value function\n\\[\nV(t, \\bx) = \\max_{\\bu} \\Eof{\\left. \\bX_T' \\mbP \\bX_T + \\int_t^T \\left(\\bX_s' \\mbQ \\bX_s + \\bu_s' \\mbR \\bu_s \\right) ds\\right|\\bX_t = \\bx}.\n\\]\n\\(V\\) satisfies the following HJB equation\n\\[\nV_t + \\frac12\\tr(\\bSigma\\bSigma'\\nabla^2 V) + \\max_{\\bu}\\left\\{(\\mbA \\bx + \\mbB \\bu)' \\nabla V + \\bx'\\mbQ\\bx + \\bu_t' \\mbR \\bu_t \\right\\} = 0\n\\]\nwith terminal condition \\(V(T, \\bx) = \\bx'\\mbP\\bx\\).\n\nNote\n\n\\(\\mbR = -\\eta\\) is negative definite since we have a maximization problem."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#optimal-control",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#optimal-control",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Optimal control",
    "text": "Optimal control\n\\[\n\\bu = - \\frac12 \\mbR^{-1} \\mbB'\\nabla V.\n\\]\n\\[\\begin{align*}\n& V_t + \\frac12\\tr(\\bSigma\\bSigma'\\nabla^2 V) + \\max_{\\bu}\\left\\{(\\mbA \\bx + \\mbB \\bu)' \\nabla V + \\bx'\\mbQ\\bx + \\bu'\\mbR\\bu \\right\\} \\\\\n&= V_t + \\frac12\\tr(\\bSigma\\bSigma'\\nabla^2 V) + \\bx'\\mbA' \\nabla V + \\bx'\\mbQ\\bx - \\frac14 \\nabla V' \\mbB \\mbR^{-1} \\mbB' \\nabla V\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#ansatz",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#ansatz",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Ansatz",
    "text": "Ansatz\nAssume the ansatz for value function \\(V(t, \\bx) = \\bx' H_1 \\bx + H_0\\).\nThe optimal (feedback) control \\(\\bu^*\\) becomes\n\\[\n\\bu^* = - \\frac12 \\mbR^{-1} \\mbB'\\nabla V = \\frac1{\\eta} \\mbB' H_1 \\bx\n\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#matrix-riccati-equation",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#matrix-riccati-equation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Matrix Riccati equation",
    "text": "Matrix Riccati equation\nCompare the coefficients and obtain the matrix Riccati equation\n\\[\\begin{align*}\n& \\dot H_1 - H_1\\mbB\\mbR^{-1}\\mbB'H_1 + \\mbA' H_1 + H_1 \\mbA + \\mbQ = 0 \\\\\n& \\dot H_0 + \\tr(\\bSigma\\bSigma'H_1) = 0\n\\end{align*}\\]\nwith terminal condition \\(H_1(T) = \\mbP\\) and \\(H_0(T) = 0\\).\n\\[\\begin{align*}\n& \\dot H_1 + \\frac1\\eta H_1\\mbB\\mbB'H_1 + \\mbA' H_1 + H_1 \\mbA + \\mbQ = 0 \\\\\n& \\dot H_0 + \\tr(\\bSigma\\bSigma'H_1) = 0\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#numerical-examples",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#numerical-examples",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Numerical examples",
    "text": "Numerical examples\n\nfrom scipy.linalg import expm\nfrom scipy.integrate import odeint\n\n\n# liquidation horizon\nT = 1\n\n# number of shares to liquidate\nx0 = 20_000\n\n# mean reverting rate rho\n# rho in the exponential decay kernel\nrho = 10 # 1e-3\n\n# parameters for market impact from Almgren-Chriss\neta = 2.5*1e-6 # temporary impact coefficient\ngamma = 2.5*1e-7 # permanent impact coefficient\n\n# final block trade penalty\nbeta = 1000*eta #, 100*eta, 1000*eta, 10_000*eta\n\n# coefficient for inventory cost\n# coefficient for linear instantaneous impact function\nphi = 50*eta # eta, 5*eta, 10*eta, 100*eta\n\nprint(f'(gamma + phi)/2 - beta is {(gamma+phi)/2 - beta}.')\n\n(gamma + phi)/2 - beta is -0.0024373749999999994.\n\n\n\n# matrices\nA = np.array([0, 0, 0, -rho]).reshape(2, 2)\nP = np.array([(gamma + phi)/2 - beta, 0, 0, 0]).reshape(2, 2)\nQ = np.array([0, -rho/2, -rho/2, 0]).reshape(2, 2)\nB = np.array([1, phi]).reshape(2, 1)\n\n# Psi\nPsi = np.array([[0, 0, 0, rho/2], [0, rho, rho/2, 0], [1/eta, phi/eta, 0, 0], \n                [phi/eta, phi**2/eta, 0, -rho]])\n\n\n# solution H1\ndef H1(t):\n    # Matrix [P I]'\n    PI = np.concatenate([P.reshape(4), np.identity(2).reshape(4)]).reshape(4, 2)\n    # exponential Psi times [P I]'\n    ePsiPI = lambda t: expm(-(T-t)*Psi).dot(PI)    \n    M, N = ePsiPI(t)[:2], ePsiPI(t)[2:]\n    return M.dot(np.linalg.inv(N))\n\n# first order criterion for v\ndef v_opt(bx, t):\n    BtH = B.transpose().dot(H1(t))\n    return BtH.dot(bx)/eta\n\n# ODE for x and y\ndef f(bx, t):\n    x = bx[0]\n    y = bx[1]\n    dx = v_opt(bx, t)\n    dy = phi*v_opt(bx, t) - rho*y\n    return np.array([dx, dy]).reshape(2)\n\n# solve optimal x and y numerically\ndef solve_opt_xy(n_steps=500): \n    t = np.linspace(0, T, n_steps+1)\n    bx0 = np.array([x0, 0])\n    soln1 = odeint(f, bx0, t)\n    x_opt = soln1[:, 0]\n    y_opt = soln1[:, 1]\n    return x_opt, y_opt\n\n\nn_steps = 200\nt = np.linspace(0, 1, n_steps+1)\nx, y = solve_opt_xy(n_steps)\n\n\n# plot optimal trajectory for x\n#plt.figure(figsize=(8, 6))\nplt.plot(t, x)\nplt.xlabel(r'$t$', fontsize=15)\nplt.ylabel(r'$x$', fontsize=15)\nplt.hlines(y=0, xmin=0, xmax=1, ls='dotted');\n\n\n\n\n\n\n\n\n\n# plot trajectory for y under optimal policy\n#plt.figure(figsize=(8, 6))\nplt.plot(t, y)\nplt.xlabel(r'$t$', fontsize=15)\nplt.ylabel(r'$y$', fontsize=15)\nplt.hlines(y=0, xmin=0, xmax=1, ls='dotted', color='k');\n\n\n\n\n\n\n\n\n\n# the optimal trading rate v\nv =np.array([])\nfor i in range(len(t)):\n    BtH = B.transpose().dot(H1(t[i]))\n    v = np.concatenate([v, BtH.dot([x[i], y[i]])/eta])\n\n# plot optimal trajectory for v\n#plt.figure(figsize=(8, 6))\nplt.plot(t, v)\nplt.xlabel(r'$t$', fontsize=15)\nplt.ylabel(r'$v$', fontsize=15);\n\n\n\n\n\n\n\n\n\n# in fact, v = dx/dt\nplt.plot(t[1:], np.diff(x)/np.diff(t));"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#value-distribution",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#value-distribution",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Value distribution",
    "text": "Value distribution\nLet’s compare the performance of optimal trading strategy to TWAP and Almgren-Chriss in this setting."
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#create-a-python-class-for-evaluating-value-function-by-simulation",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#create-a-python-class-for-evaluating-value-function-by-simulation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Create a python class for evaluating value function by simulation",
    "text": "Create a python class for evaluating value function by simulation\n\nimport numpy as np\nfrom scipy.stats import norm \nimport seaborn as sns\n\nclass ValueDistribution:\n    '''\n    x0: number of shares to liquidate/acquire\n    T: liquidation/acquistion horizon\n    gamma: permanent impact coefficient\n    eta: temporary impact coefficient\n    rho: mean reverting rate\n    beta: final block trade penalty\n    phi: transient impact coefficient\n    sigma: volatility of transient impact\n    '''\n    \n    def __init__(self, params, strategy, n_steps=100):\n        self.T = params['T']\n        self.x0 = params['x0']\n        self.eta = params['eta']\n        self.gamma = params['gamma']\n        self.beta = params['beta']\n        self.phi = params['phi']\n        self.rho = params['rho']\n        self.sigma = params['sigma']\n        self.n_steps = n_steps\n        \n        # strategy v as a function of x, y, t\n        self.strategy = strategy\n        \n#        self.alpha = 2*self.eta/(2*self.beta - self.gamma)\n        \n    def simulate(self, n_sim=10_000):\n        n_steps = self.n_steps\n        v = self.strategy\n        dt = self.T/self.n_steps\n        gamma, phi, eta, beta, rho = self.gamma, self.phi, self.eta, self.beta, self.rho\n        \n        # initialize \n        y = np.zeros([n_sim, n_steps+1])\n        x = np.ones([n_sim, n_steps+1])*self.x0\n        V0 = np.zeros([n_sim, n_steps+1])\n\n        for step in range(self.n_steps):\n            dz = norm.rvs(size=n_sim)*np.sqrt(dt)\n            dy = (phi*v(x[:,step], y[:,step], step*dt) - rho*y[:,step])*dt + sigma*dz\n            dx = v(x[:,step], y[:,step], step*dt)*dt \n            dV0 = -(rho*x[:,step]*y[:,step] + eta*v(x[:,step], y[:,step], step*dt)**2)*dt\n            x[:,step+1] = x[:,step] + dx\n            y[:,step+1] = y[:,step] + dy\n            V0[:,step+1] = V0[:,step] + dV0\n\n        self.x, self.y, self.V0 = x, y, V0\n        self.V = ((gamma + phi)/2 - beta)*x[:,-1]**2 + V0[:,-1]\n        return self.V.mean()\n    \n    def V_hist(self, bins=50, kde=True, stat='density', element='step'):\n        sns.histplot(self.V, bins=bins, kde=kde, stat=stat, element=element)\n        plt.title('Histogram of V', fontsize=20);\n        return None\n    \n    def __call__(self):\n        pass        \n\n\nPolicy 1: TWAP\n\n# parameters\nsigma = 0.1\nparams = {'T': T, 'x0': x0, 'eta': eta, 'gamma': gamma, 'rho': rho, 'beta': beta, 'phi': phi, 'sigma':sigma}\n\n# A version of TWAP strategy\nalpha = 2*eta/(2*beta - gamma)\nv_twap = lambda x, y, t: -x/(T - t + alpha)\n\n# instantiate the class and simulate\nvd_twap = ValueDistribution(params=params, strategy=v_twap, n_steps=n_steps)\nvd_twap.simulate()\n\n19608.269295580816\n\n\n\n\nSample path of running reward\n\nn_sim, n_steps = 10_000, 200\ndt = T/n_steps\nt = np.arange(0, T+dt, dt)\nn_path = np.random.choice(n_sim)\nplt.plot(t, vd_twap.V0[n_path,:]);\nprint(n_path)\n\n3666\n\n\n\n\n\n\n\n\n\n\nvd_twap.V_hist()\n\n\n\n\n\n\n\n\n\n\nOptimal policy\n\ndef v_opt(x, y, t):\n    bx = np.column_stack([x, y])\n    HB = H1(t).dot(B)\n    return bx.dot(HB).flatten()/eta\n\n\nvd_opt = ValueDistribution(params=params, strategy=v_opt, n_steps=n_steps)\nvd_opt.simulate()\n\n19744.088225206633\n\n\n\nvd_opt.V_hist()\n\n\n\n\n\n\n\n\n\n\nPut together the histograms\n\nsns.histplot(vd_twap.V, bins=50, stat='density', element='step', kde=True);\nsns.histplot(vd_opt.V, bins=50, stat='density', color='orange', element='step', kde=True);\n\n\n\n\n\n\n\n\n\n\nSample path of liquidation\n\nn_path = np.random.choice(n_sim)\nplt.plot(t, vd_opt.x[n_path,:])\nplt.plot(t, vd_twap.x[n_path,:], color='orange');\nn_path\n\n6185\n\n\n\n\n\n\n\n\n\n\n\nSample path of transient impact\n\n#plt.figure(figsize=(12,6))\nplt.subplot(1, 2, 1)\nplt.plot(t, vd_opt.y[n_path,:])\nplt.title('Transient impact under optimal strategy', fontsize=15)\nplt.subplot(1, 2, 2)\nplt.title('Transient impact under TWAP', fontsize=15)\nplt.plot(t, vd_twap.y[n_path,:]);"
  },
  {
    "objectID": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#references",
    "href": "NSD_Lec06-OptimalOrderExecution_Summer2025.html#references",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "References",
    "text": "References\n\n\n\n\nRobert Almgren and Neil Chriss, Optimal execution of portfolio transactions, Journal of Risk, 3, 5–40, (2001).\n\n\nEmanuel Bacry, Adrian Iuga, Matthieu Lasnier, and Charles-Albert Lehalle, Market impacts and the life cycle of investors orders, Market Microstructure and Liquidity, 1(2), 1550009, (2015).\n\n\nJim Gatheral, Lecture notes on market microstructure models, Baruch MFE course .\n\n\nAnna Obizhaeva and Jiang Wang, Optimal trading strategy and supply/demand dynamics, Journal of Financial Markets, 16(1), 1–32, (2013).\n\n\nElia Zarinelli, Michele Treccani, J. Doyne Farmer, and Fabrizio Lillo, Beyond the square root: Evidence for logarithmic dependence of market impact on size and participation rate, Market Microstructure and Liquidity, 1(2), 1550004, (2015)."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F}}\n\\newcommand{\\cF}{\\mathcal{F}}\n\\newcommand{\\E}{\\mathbb{E}}\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\newcommand{\\Sdof}[1]{\\mathbb{Sd}\\left[ #1 \\right]}\n\\newcommand{\\Cov}{\\text{Cov}}\n\\newcommand{\\Var}{\\text{Var}}\n\\newcommand{\\1}{\\mathbf{1}}\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P}}\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q}}\n\\renewcommand{\\R}{\\mathbb{R}}\n\\newcommand{\\DD}{\\mathbb{D}}\n\\newcommand{\\HH}{\\mathbb{H}}\n\\newcommand{\\spn}{\\mathrm{span}}\n\\newcommand{\\cov}{\\mathrm{cov}}\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}}}\n\\newcommand{\\Hess}{\\mathrm{Hess}}\n\\newcommand{\\trace}{\\mathrm{trace}}\n\\newcommand{\\LL}{\\mathcal{L}}\n\\newcommand{\\s}{\\mathcal{S}}\n\\newcommand{\\ee}{\\mathcal{E}}\n\\newcommand{\\ff}{\\mathcal{F}}\n\\newcommand{\\hh}{\\mathcal{H}}\n\\newcommand{\\bb}{\\mathcal{B}}\n\\newcommand{\\dd}{\\mathcal{D}}\n\\newcommand{\\g}{\\mathcal{G}}\n\\newcommand{\\half}{\\frac{1}{2}}\n\\newcommand{\\T}{\\mathcal{T}}\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\newcommand{\\inn}[2]{\\left\\langle #1, #2 \\right\\rangle}\n\\newcommand{\\bmx}{\\boldsymbol{x}}\n\\newcommand{\\bmy}{\\boldsymbol{y}}\n\\newcommand{\\bmu}{\\boldsymbol{\\mu}}\n\\newcommand{\\bmsigma}{\\boldsymbol{\\Sigma}}\n\\newcommand{\\bmepsilon}{\\boldsymbol{\\epsilon}}\n\\newcommand{\\xii}{\\boldsymbol{\\xi}}\n\\renewcommand{\\bm}{\\boldsymbol{m}}\n\\]"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#lecture-4-the-black-merton-scholes-model-and-beyond-ii",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#lecture-4-the-black-merton-scholes-model-and-beyond-ii",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F}}\n\\newcommand{\\cF}{\\mathcal{F}}\n\\newcommand{\\E}{\\mathbb{E}}\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\newcommand{\\Sdof}[1]{\\mathbb{Sd}\\left[ #1 \\right]}\n\\newcommand{\\Cov}{\\text{Cov}}\n\\newcommand{\\Var}{\\text{Var}}\n\\newcommand{\\1}{\\mathbf{1}}\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P}}\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q}}\n\\renewcommand{\\R}{\\mathbb{R}}\n\\newcommand{\\DD}{\\mathbb{D}}\n\\newcommand{\\HH}{\\mathbb{H}}\n\\newcommand{\\spn}{\\mathrm{span}}\n\\newcommand{\\cov}{\\mathrm{cov}}\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}}}\n\\newcommand{\\Hess}{\\mathrm{Hess}}\n\\newcommand{\\trace}{\\mathrm{trace}}\n\\newcommand{\\LL}{\\mathcal{L}}\n\\newcommand{\\s}{\\mathcal{S}}\n\\newcommand{\\ee}{\\mathcal{E}}\n\\newcommand{\\ff}{\\mathcal{F}}\n\\newcommand{\\hh}{\\mathcal{H}}\n\\newcommand{\\bb}{\\mathcal{B}}\n\\newcommand{\\dd}{\\mathcal{D}}\n\\newcommand{\\g}{\\mathcal{G}}\n\\newcommand{\\half}{\\frac{1}{2}}\n\\newcommand{\\T}{\\mathcal{T}}\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\newcommand{\\inn}[2]{\\left\\langle #1, #2 \\right\\rangle}\n\\newcommand{\\bmx}{\\boldsymbol{x}}\n\\newcommand{\\bmy}{\\boldsymbol{y}}\n\\newcommand{\\bmu}{\\boldsymbol{\\mu}}\n\\newcommand{\\bmsigma}{\\boldsymbol{\\Sigma}}\n\\newcommand{\\bmepsilon}{\\boldsymbol{\\epsilon}}\n\\newcommand{\\xii}{\\boldsymbol{\\xi}}\n\\renewcommand{\\bm}{\\boldsymbol{m}}\n\\]"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#agenda",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#agenda",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Agenda",
    "text": "Agenda\n\nBlack-Merton-Scholes model revisited\nImplied volatility\n\nGaussian process regression (GPR) fit for implied volatility curve\n\nLocal volatility model\nStochastic volatility model\n\nHeston models"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#the-black-scholes-world",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#the-black-scholes-world",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Black-Scholes world",
    "text": "The Black-Scholes world\nThe Black–Scholes model assumes that the market consists of at least one risky asset, usually called the stock, and one riskless asset, usually called the money market, cash, or bond.\nAssumptions on the assets:\n\n(riskless rate) The rate of return on the riskless asset is constant and thus called the risk-free interest rate.\n(Brownian motion) The instantaneous log return of stock price is a Brownian motion with drift; and we will assume its drift and volatility are constant (if they are time-varying, we can deduce a suitably modified Black–Scholes formula quite simply, as long as the volatility is not random). As a result, the stock price follows a geometric Brownian motion.\nThe stock does not pay dividend.\n\nAssumptions on the market:\n\nThere exists no arbitrage opportunity.\nIt is possible to borrow and lend any amount, even fractional, of cash at the riskless rate.\nIt is possible to buy and sell any amount, even fractional, of the stock, including short selling.\nFrictionless market: the transactions do not incur any fees or costs."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#black-scholes-model",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#black-scholes-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Black-Scholes model",
    "text": "Black-Scholes model\nAssume the price of the underlying asset follows the stochastic differential equation\n\\[\n\\frac{\\text{d}S_t}{S_t} = \\mu \\text{d}t + \\sigma \\text{d}W_t,\n\\]\nwhere\n\n\\(\\mu\\): (constant) expected return\n\\(\\sigma\\): (constant) volatility\n\\(W_t\\): standard Brownian motion\n\nFor each time \\(t\\), \\(S_t\\) is log-normally distributed. More precisely,\n\\[\nS_t \\sim S_0 \\exp\\left[\\left(\\mu - \\frac{\\sigma^2}{2}\\right)t + \\sigma \\sqrt t Z \\right]\n\\]\nwhere \\(Z\\) is a standard normal random variable.\n\nNote\n\\(S_t\\) has the closed form expression\n\\[\nS_t = S_0 e^{\\left(\\mu - \\frac{\\sigma^2}2 \\right) t+ \\sigma W_t}\n\\]\nand is also referred to as a geometric Brownian motion."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#black-scholes-pde",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#black-scholes-pde",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Black-Scholes PDE",
    "text": "Black-Scholes PDE\nWe conclude that the price \\(C\\) of a call option satisfies\n\\[\\begin{equation}\n\\begin{aligned}\n   \\frac{\\partial C}{\\partial t} + \\frac{\\sigma^2}{2} S^2 \\frac{\\partial^2 C}{\\partial S^2} + rS \\frac{\\partial C}{\\partial S} - rC = 0,\n   \\quad \\text{for } 0 &lt; S &lt; \\infty, \\quad 0 \\leq t &lt; T\n\\end{aligned}\n\\end{equation}\\]\nwith terminal condition\n\\[\nC(T,S) = (S - K)^+\n\\]\nand boundary conditions\n\\[\\begin{equation}\n\\begin{aligned}\n   C(t, 0) &= 0,  \\\\\n   C(t, S) &\\sim S - K e^{-r(T - t)} \\quad \\text{as } S \\to \\infty, \\\\\n   &\\text{or more specifically} \\quad \\lim_{S \\to \\infty} \\frac{C(t, S)}{S} = 1.\n\\end{aligned}\n\\end{equation}\\]\n\nNote\nThe Black-Scholes pricing PDE does not depend on the drift \\(\\mu\\)."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#the-black-scholes-formula",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#the-black-scholes-formula",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Black-Scholes formula",
    "text": "The Black-Scholes formula\nFor call\n\\[\nC = S e^{-d\\tau} N(d_1) - K e^{-r\\tau} N(d_2)\n\\]\nwhere \\(\\tau\\) is time to expiry, \\(N(\\cdot)\\) denotes the cdf for standard normal, and\n\\[\nd_1 = \\frac{\\log\\left(\\frac{Se^{-d\\tau}}{Ke^{-r\\tau}}\\right)}{\\sigma\\sqrt\\tau}+ \\frac{\\sigma\\sqrt\\tau}2, \\qquad d_2 = d_1 - \\sigma \\sqrt\\tau\n\\]\nFor put\n\\[\nP = K e^{-r\\tau} N(-d_2) - S e^{-d\\tau} N(-d_1).\n\\]\n\nNote\n\nPut-call parity\n\\[\n  C - P = S e^{-d\\tau} - K e^{-r\\tau}.\n  \\]\nFinancial meaning of \\(N(d_1)\\) and \\(N(d_2)\\)\n\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom numpy import exp, log, sqrt\nfrom scipy.stats import norm\n\n\n# Black-Scholes formulas\n# call\ndef bs_call(s, K, sigma, t, r=0, d=0):\n    d1 = (log(s/K) + (r - d)*t)/(sigma*sqrt(t)) + sigma*sqrt(t)/2\n    d2 = d1 - sigma*sqrt(t)\n    \n    c = s*exp(-d*t)*norm.cdf(d1) - K*exp(-r*t)*norm.cdf(d2)\n    delta = exp(-d*t)*norm.cdf(d1)\n    gamma = exp(-d*t)*norm.pdf(d1)/s/sigma/sqrt(t)\n    \n    return {'c': c, 'delta': delta, 'gamma': gamma}\n\n# put\ndef bs_put(s, K, sigma, t, r=0, d=0):\n    d1 = (log(s/K) + (r - d)*t)/(sigma*sqrt(t)) + sigma*sqrt(t)/2\n    d2 = d1 - sigma*sqrt(t)\n    \n    p = K*exp(-r*t)*norm.cdf(-d2) - s*exp(-d*t)*norm.cdf(-d1)\n    delta = -exp(-d*t)*norm.cdf(-d1)\n    gamma = exp(-d*t)*norm.pdf(d1)/s/sigma/sqrt(t)\n    \n    return {'p': p, 'delta': delta, 'gamma': gamma}\n\n\nbs_call(100,101, 0.3, 1), bs_put(100,101, 0.3, 1)['p']\n\n({'c': 11.489697553016399,\n  'delta': 0.5465034987964444,\n  'gamma': 0.013207627175872894},\n 12.489697553016399)"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#implied-volatility",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#implied-volatility",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Implied volatility",
    "text": "Implied volatility\n“A wrong number to a wrong formula for a correct answer.”\n\nIn the Black-Scholes model there is a one-to-one correspondence between the price of the option and the volatility parameter \\(\\sigma\\) (Why?). The option prices are often quoted by stating this specific volatility, called the implied volatility.\nIn Black-Scholes world, the volatility is assumed constant. But in reality, options of different strike require different volatilities to match their market prices. This is referred to as the volatility smile."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#volatility-smile-of-spx-on-sep-15-2011",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#volatility-smile-of-spx-on-sep-15-2011",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Volatility smile of SPX on Sep-15, 2011",
    "text": "Volatility smile of SPX on Sep-15, 2011"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#gaussian-process-revisited",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#gaussian-process-revisited",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Gaussian process revisited",
    "text": "Gaussian process revisited\nA stochastic “process” \\(f_{\\boldsymbol{x}}\\), (multi-)indexed by \\(\\boldsymbol{x}\\in\\R^d\\), is called a Gaussian process if all its finite dimensional distributions are jointly Gaussian. Precisely, given any finite set of (multi-)indices \\(\\boldsymbol{x}_1, \\cdots, \\boldsymbol{x}_n\\), the random variables \\(f_{\\boldsymbol{x}_1}, \\cdots, f_{\\boldsymbol{x}_n}\\) are jointly Gaussian. As a result, the distribution of a Gaussian process is fully characterized by the mean function \\(m(\\boldsymbol{x})\\) and the autocovariance function, a.k.a., the kernel, \\(k(\\boldsymbol{x}, \\boldsymbol{y})\\). For example, the \\(n\\)-dimensional random vector \\((f_{\\boldsymbol{x}_1}, \\cdots, f_{\\boldsymbol{x}_n})\\) is multivariate normally distribtuted \\(N(\\boldsymbol\\mu, \\boldsymbol \\Sigma)\\) with\n\\[\n\\boldsymbol\\mu = \\left[\\begin{array}{c}\nm(\\boldsymbol{x}_1) \\\\\n\\vdots \\\\\nm(\\boldsymbol{x}_n)\n\\end{array}\\right], \\qquad\n\\boldsymbol \\Sigma = \\left[\\begin{array}{ccc}\nk(\\boldsymbol{x}_1, \\boldsymbol{x}_1) & \\cdots & k(\\boldsymbol{x}_1, \\boldsymbol{x}_n) \\\\\n\\vdots & \\ddots & \\vdots \\\\\nk(\\boldsymbol{x}_n, \\boldsymbol{x}_1) & \\cdots & k(\\boldsymbol{x}_n, \\boldsymbol{x}_n)\n\\end{array}\\right].\n\\]\n\nNote\n\nCommonly used kernels are the radial basis functions (RBFs) \\[\nk(\\boldsymbol{x},\\boldsymbol{y}) = A e^{-\\frac{|\\boldsymbol{x} - \\boldsymbol{y}|^\\alpha}{2\\ell^2}},\n\\] where \\(A\\), \\(\\alpha\\), and \\(\\ell\\) are (hyper)parameters to be estimated.\nThe smoothness of the kernel \\(k\\) determines the smoothess of the process \\(f_{\\boldsymbol{x}}\\).\nBrownian motion is when \\(d=1\\), \\(m(x) = 0\\), and \\(k(x,y) = \\min\\{x, y\\}\\)."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#regression-in-multivariate-normal",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#regression-in-multivariate-normal",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Regression in multivariate normal",
    "text": "Regression in multivariate normal\nLet \\((\\boldsymbol{x}, \\boldsymbol{y})\\) be multivariate normal random variables.\nRecall the following regression equations for the multivariate normal random variables \\((\\boldsymbol{x}, \\boldsymbol{y})\\).\n\\[\n\\boldsymbol{x}|\\boldsymbol{y} = \\Eof{\\boldsymbol{x}} + \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}}\\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}^{-1}(\\boldsymbol{y} - \\Eof{\\boldsymbol{y}})+ \\boldsymbol\\epsilon,\n\\]\nwhere \\(\\boldsymbol{y}\\), \\(\\boldsymbol\\epsilon\\) are independent and\n\\[\n\\Sigma_{\\boldsymbol\\epsilon} = \\Sigma_{\\boldsymbol{x}} - \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}} \\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}^{-1} \\Sigma_{\\boldsymbol{y}\\boldsymbol{x}}.\n\\]\nHence,\n\\[\n\\Eof{\\boldsymbol{X}|\\boldsymbol{y}} = \\Eof{\\boldsymbol{x}} + \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}} \\Sigma_{\\boldsymbol{y}}^{-1}(\\boldsymbol{y} - \\Eof{\\boldsymbol{y}}), \\qquad\n\\Sigma_{\\boldsymbol{x}|\\boldsymbol{y}} = \\Sigma_{\\boldsymbol{x}} - \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}} \\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}^{-1} \\Sigma_{\\boldsymbol{y}\\boldsymbol{x}}.\n\\]"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#gaussian-process-regression-gpr",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#gaussian-process-regression-gpr",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Gaussian process regression (GPR)",
    "text": "Gaussian process regression (GPR)\nThe “regression” is performed in a Baysian style. The underlying regression model is\n\\[\ny = f_{\\boldsymbol{x}} + u,\n\\]\nwhere \\(f_{\\boldsymbol{x}}\\) is a Gaussian process and \\(u\\) is normally distributed with mean zero and variance \\(\\sigma^2\\), independent of \\(f_{\\boldsymbol{x}}\\).\nFor a given prior mean function \\(m^{pr}(\\boldsymbol{x})\\), a prior kerel \\(k^{pr}(\\boldsymbol{x},\\boldsymbol{y})\\), and a given set of observations \\(\\{y_1, \\cdots, y_n\\}\\), the posterior mean function \\(m^{po}(\\boldsymbol{x})\\) and the posterior kernel \\(k^{po}(\\boldsymbol{x}, \\boldsymbol{y})\\) are inferred by applying the regression equation provided in the last cell.\nLet\n\\[\n\\boldsymbol{y} = [y_1 \\cdots y_n]' \\qquad \\text{ and } \\qquad \\boldsymbol{x} = [\\boldsymbol{x}_1 \\cdots \\boldsymbol{x}_n],\n\\]\nwhere \\(y_i = f_{\\boldsymbol{x}_i} + u_i\\) for \\(i = 1, 2, \\cdots, n\\).\nNote that\n\\[\n\\text{Var}(y_i, y_j) = k(\\boldsymbol{x}_i, \\boldsymbol{x}_j) + \\sigma^2, \\quad \\text{cov}(f_{\\boldsymbol{x}}, y_i) = k(\\boldsymbol{x}, \\boldsymbol{x}_i).\n\\]\nBy the regression formula, the posterior distribution of \\(f_{\\boldsymbol{x}}\\) conditioned on \\(\\boldsymbol{y}\\) is\n\\[\nf_{\\boldsymbol{x}}|\\boldsymbol{y} = \\Eof{f_{\\boldsymbol{x}}} + \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}} \\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}^{-1}(\\boldsymbol{y} - \\Eof{\\boldsymbol{y}}) + \\varepsilon,\n\\]\nwhere \\(\\Sigma_{\\boldsymbol{x}\\boldsymbol{y}}\\) is the row vector of covariances between \\(f_{\\boldsymbol{x}}\\) and \\(\\boldsymbol{y}\\), and \\(\\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}\\) the \\(n\\times n\\) covariance matrix of \\(\\boldsymbol{y}\\). Their entries are given respectively by\n\\[\n(\\Sigma_{\\boldsymbol{x}\\boldsymbol{y}})_i = k^{pr}(\\boldsymbol{x}, \\boldsymbol{x}_i), \\quad (\\Sigma_{\\boldsymbol{y}\\boldsymbol{y}})_{ij} = k^{pr}(\\boldsymbol{x}_i, \\boldsymbol{x}_j) + \\sigma^2\\delta_{ij}.\n\\]\n\\(\\varepsilon\\) is normally distributed with mean zero and variance given by\n\\[\n\\Var(\\varepsilon) = k(\\boldsymbol{x}, \\boldsymbol{x}) - \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}} \\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}^{-1} \\Sigma_{\\boldsymbol{y}\\boldsymbol{x}}.\n\\]\nThe posterior mean function \\(m^{po}(\\boldsymbol{x})\\) is thus obtained as\n\\[\nm^{po}(\\boldsymbol{x}) = m^{pr}(\\boldsymbol{x}) + \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}} \\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}^{-1}(\\boldsymbol{y} - m^{pr}(\\boldsymbol{x}))\n\\]\nand the posterior kernel \\(k^{po}\\)\n\\[\nk^{po}(\\boldsymbol{x}, \\tilde{\\boldsymbol{x}}) = k^{pr}(\\boldsymbol{x}, \\tilde{\\boldsymbol{x}}) - \\Sigma_{\\boldsymbol{x}\\boldsymbol{y}} \\Sigma_{\\boldsymbol{y}\\boldsymbol{y}}^{-1} \\Sigma_{\\boldsymbol{y}\\tilde{\\boldsymbol{x}}}\n\\]\n\nNote\n\nThe posterior mean function can be used as a point estimator\nThe posterior kernel for confidence interval\n\n\n# hyperparameters by guessing\nsigma, A, l = 0.3, 0.2, 0.3\n\n# target function\nmu = lambda x: 2*x**2 - x\n\n# observations\n# set seed for reproducing the result\nnp.random.seed(seed=2718)\n\nx_is = np.linspace(-1, 1, 21)\nn = len(x_is)\ny_is = mu(x_is) + sigma*norm.rvs(size=n)\n\n# prior mean function\n# set as the sample mean of observations\ny_mean = y_is.mean()\nm = lambda x: y_mean\n\n# prior kernel\nk = lambda x, y: A*exp(-abs(x-y)**2/2/l**2)\n\n# calculate the covariance matrices\ntmp, _ = np.meshgrid(x_is, x_is)\nSigma_YY = k(tmp, _)\nSigma_YY = Sigma_YY + sigma**2*np.identity(n)\n\n# determine Sigma_YY_inv(Y - EY) by solving the linear system Sigma_YY x = Y - EY\nSigma_YY_inv_Y_EY = np.linalg.solve(Sigma_YY, y_is - m(x_is))\n\n# posterior mean function\nmpo = lambda x: m(x) + sum(k(x, x_is)*Sigma_YY_inv_Y_EY)\n# vectorize\nmpo = np.vectorize(mpo)\n\n# fitted values\nyhat = mpo(x_is)\n\n# absolute errors\nabs_errs = abs(y_is - yhat)\n\n\nprint(max(abs_errs))\npd.DataFrame({'y': y_is, 'yhat': yhat, 'abs_errs': abs_errs})\n\n1.1358253459151362\n\n\n\n\n\n\n\n\n\ny\nyhat\nabs_errs\n\n\n\n\n0\n3.516755\n2.380930\n1.135825\n\n\n1\n2.332123\n2.222288\n0.109835\n\n\n2\n1.019894\n1.974779\n0.954885\n\n\n3\n1.895070\n1.707121\n0.187948\n\n\n4\n1.725995\n1.448850\n0.277145\n\n\n5\n1.480932\n1.189129\n0.291803\n\n\n6\n0.870354\n0.908513\n0.038160\n\n\n7\n0.704656\n0.610133\n0.094523\n\n\n8\n-0.257049\n0.324002\n0.581051\n\n\n9\n0.279927\n0.087312\n0.192615\n\n\n10\n0.247570\n-0.077739\n0.325309\n\n\n11\n-0.758467\n-0.172100\n0.586367\n\n\n12\n-0.108623\n-0.212834\n0.104212\n\n\n13\n-0.305841\n-0.218536\n0.087306\n\n\n14\n-0.150473\n-0.195562\n0.045090\n\n\n15\n-0.030276\n-0.132750\n0.102473\n\n\n16\n-0.229478\n-0.010076\n0.219402\n\n\n17\n-0.173393\n0.181518\n0.354910\n\n\n18\n0.514295\n0.422797\n0.091498\n\n\n19\n0.818159\n0.666638\n0.151521\n\n\n20\n1.001742\n0.858620\n0.143122\n\n\n\n\n\n\n\n\n# plot\nplt.figure(figsize=(9, 6))\nplt.plot(x_is, y_is, 'ro', label='observed')\nplt.plot(x_is, mu(x_is), ls='dashed', label='target')\nplt.plot(x_is, yhat, 'o--', label='GPR fit')\nplt.xlabel(r'$x$', fontsize=15)\nplt.ylabel(r'$y$', fontsize=15)\nplt.legend();\n\n\n\n\n\n\n\n\n\n# posterior kernel\ndef kpo(x, xp):\n    Sigma_YY_inv_Yxp = np.linalg.solve(Sigma_YY, k(xp, x_is))\n    Sigma_xY = k(x, x_is)\n    return k(x, xp) - sum(Sigma_xY*Sigma_YY_inv_Yxp)\n\n\n# wrap everthing up as functions\n\n# The posterior mean function from GPR\n# inputs: \n# m: prior mean function \n# k: prior kernel\n# y: observations\n# x: indices\n# \n# output: the posterior mean function\n\ndef pos_mean(m, k, y, x, sigma=0.001):\n    n = len(x)\n    \n    # calculate the covariance matrices\n    tmp, _ = np.meshgrid(x_is, x_is)\n    Sigma_YY = k(tmp, _)\n    Sigma_YY = Sigma_YY + sigma**2*np.identity(n)\n    \n    # determine Sigma_YY_inv(Y - EY) by solving the linear system Sigma_YY x = Y - EY\n    Sigma_YY_inv_Y_EY = np.linalg.solve(Sigma_YY, y - m(x))\n    \n    # return the posterior mean function\n    return lambda xx: m(xx) + sum(k(xx, x)*Sigma_YY_inv_Y_EY)\n\n\n# The posterior kernel from GPR\n# inputs: \n# k: prior kernel\n# x: indices\n# \n# output: the posterior kernel\n\ndef pos_kernel(k, x, sigma=0.1):\n    n = len(x)\n    \n    # calculate the covariance matrices\n    tmp, _ = np.meshgrid(x_is, x_is)\n    Sigma_YY = k(tmp, _)\n    Sigma_YY = Sigma_YY + sigma**2*np.identity(n)\n    \n    # return the posterior kernel\n    def _(xx, xp):\n        # determine Sigma_YY_inv Sigma_Yxp by solving the linear system Sigma_YY x = Sigma_Yxp\n        Sigma_YY_inv_Yxp = np.linalg.solve(Sigma_YY, k(xp, x))\n        Sigma_xY = k(xx, x)\n        return k(xx, xp) - sum(Sigma_xY*Sigma_YY_inv_Yxp)\n        \n    return _\n\n\n# an example of overfitting\nmpo = pos_mean(m, k, y_is, x_is, sigma=0.001)\nmpo = np.vectorize(mpo)\nmpo(x_is)\n\narray([ 3.54621538,  2.19815658,  1.28890099,  1.60897726,  1.85557559,\n        1.50339612,  0.92003406,  0.41076722,  0.14251242,  0.11383494,\n        0.00924226, -0.29950277, -0.45034976, -0.24524099, -0.036229  ,\n       -0.11867752, -0.25938903, -0.07346743,  0.42936134,  0.85544179,\n        0.99444426])\n\n\n\n# plot\nplt.figure(figsize=(9, 6))\nplt.plot(x_is, y_is, 'ro', label='observed')\nplt.plot(x_is, mu(x_is), ls='dashed', label='target')\nplt.plot(x_is, mpo(x_is), 'o--', label='GPR fit')\nplt.xlabel(r'$x$', fontsize=15)\nplt.ylabel(r'$y$', fontsize=15)\nplt.legend();\n\n\n\n\n\n\n\n\n\n# effect of sigma\nplt.figure(figsize=(15, 6))\nsigmas = [0.001, 0.1, 10]\nfor i, sigma in zip(range(len(sigmas)), sigmas):\n    mpo = pos_mean(m, k, y_is, x_is, sigma=sigma)\n    mpo = np.vectorize(mpo)\n    plt.subplot(1, 3, i+1)\n    plt.plot(x_is, y_is, 'ro', label='observed')\n    plt.plot(x_is, mu(x_is), ls='dashed', label='target')\n    plt.plot(x_is, mpo(x_is), 'o--', label='GPR fit')\n    plt.xlabel(r'$x$', fontsize=15)\n    plt.ylabel(r'$y$', fontsize=15)\n    plt.title(f'$\\sigma$={sigma}', fontsize=20)\n    plt.legend();"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#implied-volatility-surface-from-gpr",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#implied-volatility-surface-from-gpr",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Implied volatility surface from GPR",
    "text": "Implied volatility surface from GPR\nTo apply GPR to construct implied volatility curve for a given fixed time to expiry, the observations \\(y_1, \\cdots, y_n\\) are the implied volatilities inferred from the market traded optios whereas the index \\(\\boldsymbol{x}\\) is set as the logmoneyness, i.e., the logarithm of the ratio between strike and forward price. The authors of the paper “Machine Learning for Quantitative Finance: Fast Derivative Pricing, Hedging and Fitting” by Spiegeleer, Madan, Reyners, and Schoutens, chose the radial basis function\n\\[\nk(x, y) = A e^{-\\frac{|x-y|^2}{2\\ell^2}}\n\\]\nas the prior kernel, where \\(A\\) and \\(\\ell\\) are hyperparameters, and a quadratic function as the prior mean function.\n\nNote\n\nThere is no guarantee that the GPR interpolated/extrapolated implied volatility surface would be free of arbitrage.\nNonconvexity of call price as a function of strike indicates the existence of butterfly spread arbitrage and nonmonotonicity indicates bull spread arbitrage.\n\n\n# for example, consider a parabolic implied volatility curve in logmoneyness\n# k = logmoneyness\na, b, c = 0.5, 0, 0.3\nsig_imp = lambda k: a*k**2 + b*k + c\n\ns = 10\nks = np.linspace(-1, 1, 201)\nivs = sig_imp(ks)\n\n# plot the implied vol curve\nplt.figure(figsize=(9, 6))\nplt.plot(ks, ivs, color='red')\nplt.xlabel(r'logmoneyness', fontsize=15)\nplt.ylabel(r'implied volatility', fontsize=15);\n\n\n\n\n\n\n\n\n\n# plot the call prices vs strikes\nKs = s*exp(ks)\ncs = bs_call(s=s, K=Ks, sigma=ivs, t=1)['c']\nplt.figure(figsize=(9, 6))\nplt.plot(Ks, cs, color='blue')\nplt.xlabel('strikes', fontsize=15)\nplt.ylabel('call prices', fontsize=15);"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#resolutions-to-smile",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#resolutions-to-smile",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Resolutions to smile",
    "text": "Resolutions to smile\nApproaches to resolve the skew/smile problem\n\nLocal volatility model\n\nAssume the volatility is a function of the underlying asset and time.\nMarket is complete.\nVolatility function is recoverable from the market data (Dupire formula) - easy to calibrate.\nDupire (diffusion model), Derman-Kani(Markov chain model)\n\nStochastic volatility model\n\nAssume the volatility itself follows another stochastic process.\nIncomplete market.\nVolatility of volatility is unobservable\nHeston’s model, SABR model, Hull-White model, etc.\nFractional volatility models\n\nJump diffusion models (e.g. Merton jump diffusion), exponential Levy models (e.g. CGMY), etc."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#local-volatility-model",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#local-volatility-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Local volatility model",
    "text": "Local volatility model\nThe local volatility model assumes that the evolution of the price \\(S_t\\) of the underlying under risk neutral probability (with zero interest rate) is governed by the SDE \\[\n\\frac{\\mathrm{d}S_t}{S_t} =  \\sigma_\\ell (S_t,t) \\mathrm{d}W_t.\n\\]\n\\(\\sigma_\\ell\\) is referred to as the local volatility function. In other words, rather than taking the volatility as a constant as in the Black-Scholes model, the local volatility model allows the volatility to depend on, and only on, the underlying price \\(s\\) and time \\(t\\).\nThe associated pricing equation for the local volatility model (assume interest rate \\(r=0\\)) is given by\n\\[\n\\frac{\\p u}{\\p t} + \\frac{\\sigma_\\ell^2(s,t)}{2}s^2\\frac{\\p^2 u}{\\p s^2} = 0.\n\\]\nIn addition to being a complete market, one fascinating feature of the local volatility model is that the local volatility function \\(\\sigma_\\ell\\) ideally can be read off from the market data of vanilla calls by applying the Dupire’s formula\n\\[\n\\sigma^2_\\ell(K,T) = \\frac{\\frac{\\p C}{\\p T}}{\\frac12 K^2 \\frac{\\p^2 C}{\\p K^2}}\n\\]\nshould one observe the premia of calls for all strikes \\(K\\) and expiries \\(T\\). In practice, we have far less observed data; a method of interpolating/extrapolating the lacking call premia is required to determine the local volatility function \\(\\sigma_\\ell\\)."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#example---bachelier-model",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#example---bachelier-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Example - Bachelier model",
    "text": "Example - Bachelier model\nThe Bachelier model can be regarded as a local volatility model with the local volatility function given by \\(\\displaystyle \\sigma_\\ell(s) = \\frac{\\sigma}s\\). Hence, the model reads\n\\[\n\\mathrm{d}S_t = \\sigma \\mathrm{d}W_t \\quad \\Longleftrightarrow \\quad S_t = S_0 + \\sigma W_t.\n\\]\nIn other words, the price of the underlying evolves as a (shifted and rescaled) Brownian motion. The associated pricing equation in the Bachelier model reads\n\\[\n\\frac{\\p u}{\\p t} + \\frac{\\sigma^2}{2} \\frac{\\p^2 u}{\\p s^2} = 0,\n\\]\nwhich is the classical (backward) heat equation, and the premium \\(c\\) of call struck at \\(K\\) with time-to-expiry \\(\\tau\\) is given by\n\\[\nc = \\frac{\\sigma\\sqrt\\tau}{\\sqrt{2\\pi}} \\, e^{-\\frac{(s - K)^2}{2\\sigma^2\\tau}} + (s - K) \\, N\\left(\\frac{s - K}{\\sigma\\sqrt\\tau}\\right).\n\\]"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#louis-bachelier",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#louis-bachelier",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Louis Bachelier",
    "text": "Louis Bachelier\n\n\n\n Courtesy: Photo from Wikipedia \nQuotes from the Wikipage\n\nLouis Jean-Baptiste Alphonse Bachelier (French: [baʃəlje]; March 11, 1870 – April 28, 1946) was a French mathematician at the turn of the 20th century. He is credited with being the first person to model the stochastic process now called Brownian motion, as part of his PhD thesis The Theory of Speculation (Théorie de la spéculation, published 1900).\n\n\nBachelier’s Doctoral thesis, which introduced for the first time a mathematical model of Brownian motion and its use for valuing stock options, is historically the first paper to use advanced mathematics in the study of finance. Thus, Bachelier is considered as the forefather of mathematical finance and a pioneer in the study of stochastic processes."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#example---cev-model",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#example---cev-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Example - CEV model",
    "text": "Example - CEV model\nThe constant elasticity of variance (CEV) model is a local volatility model with the local volatility function given by a power function in the price of the underlying. Specifically, the CEV model reads\n\\[\n\\frac{\\mathrm{d}S_t}{S_t} = \\alpha S_t^\\beta \\mathrm{d}W_t\n\\]\nwith \\(\\alpha &gt; 0\\) and \\(\\beta &gt; -1\\). The associated pricing equation in the CEV model reads\n\\[\n\\frac{\\p u}{\\p t} + \\frac{\\alpha^2}2 s^{2 + 2\\beta} \\frac{\\p^2 u}{\\p s^2} = 0.\n\\]\n\nNote\n\n\\(\\beta = -1\\) is the Bachelier model.\n\\(\\beta &lt; 0\\) corresponds to leverage effect which is usually observed in equity markets.\n\\(\\beta &gt; 0\\) corresponds to reverse leverage effect often observed in commodity markets"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#stochastic-volatility-model",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#stochastic-volatility-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Stochastic volatility model",
    "text": "Stochastic volatility model\nStochastic volatility models impose that the volatility (or equivalently the variance) per se is a stochastic process which may or may not be correlated to the driving Brownian motion of the underlying. A generic stochastic volatility model is of the form\n\\[\\begin{equation}\n\\begin{aligned}\n   \\frac{\\mathrm{d}S_t}{S_t} &= \\sqrt{v_t} \\, \\mathrm{d}W_t, \\\\\n   \\mathrm{d}v_t &= a(t, v_t) \\, \\mathrm{d}t + b(t, v_t) \\, \\mathrm{d}Z_t,\n\\end{aligned}\n\\end{equation}\\]\nwhere \\(W_t\\) and \\(Z_t\\) are correlated Brownian motions with correlation \\(\\rho\\). The process \\(v_t\\) is usually referred to as the instantaneous variance and its square root \\(\\sigma_t := \\sqrt{v_t}\\) the instantaneous volatility of the underlying at time \\(t\\).\nCommonly used stochastic volatility models include\n\nHeston model\nHull-White model\nStochastic alpha-beta-rho (SABR) model\n\n\nNote\n\nIncomplete market.\nInstantaneous volatility process is latent.\nConditions on the functions \\(a\\) and \\(b\\) are required for the positivity of \\(v_t\\).\n\n\n\n\n\n\n\nComplete market\n\n\n\nIn economics, a complete market is a market with two conditions:\n\nNegligible transaction costs and therefore also perfect information,\nEvery asset in every possible state of the world has a price.\n\n\n\n为什么 Stochastic volatility models 不是 complete markets?\n\n因为 \\(\\sigma\\) 里有一个风险.\n市场上通常只有一个可交易资产 (如股票 \\(S_t\\) 和一个无风险资产 (如债券).\n但市场有两个风险源 (股票价格的风险 + 波动率的风险), 而只能交易其中一个.\n我们没有足够多的可交易资产去完全对冲所有的不确定性."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#numerical-and-approximate-solutions",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#numerical-and-approximate-solutions",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Numerical and approximate solutions",
    "text": "Numerical and approximate solutions\nAs opposed to Black-Scholes model, local volatility and stochastic volatility models generally admit no closed form expressions for vanilla options as simple as the Black-Scholes formula. One is required to resort to numerical or approximate solutions as practical applications are concerned. Commonly used methodologies include\n\nMonte Carlo simulation\n\nLess sensitive to dimensionality\nMore flexible for additional extra features for pricing problems\nUsually slower than numerical PDE though improved efficient schemes exist\n\nNumerical PDE solver\n\nFaster than simulation but still slow for calibration\nMore involved and technical in mathematics than Monte Carlo\n\nAsymptotic expansions\n\nApproximate solution, not exact\nFast enough for calibration\nSolution is up to an order of a small parameter, but in closed form\n\n\n现在: Machine learning 来解 PDE."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#example---the-heston-model",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#example---the-heston-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Example - the Heston model",
    "text": "Example - the Heston model\nThe dynamic of Heston’s model under risk neutral probability with zero interest rate reads\n\\[\\begin{equation}\n\\begin{aligned}\n   \\frac{\\mathrm{d} S_t}{S_t} &= \\sqrt{v_t} \\, \\mathrm{d}B_t,  \\\\\n   \\mathrm{d}v_t &= \\lambda(m - v_t) \\, \\mathrm{d}t + \\eta \\sqrt{v_t} \\, \\mathrm{d}Z_t, \\\\\n   \\mathbb{E}[\\mathrm{d}B_t \\, \\mathrm{d}Z_t] &= \\rho \\, \\mathrm{d}t.\n\\end{aligned}\n\\end{equation}\\]\nThe pricing equation in Heston’s model reads\n\\[\n\\frac{\\p u}{\\p t} + \\frac{s^2 v}{2}\\frac{\\p^2 u}{\\p s^2} + \\rho \\eta s v \\frac{\\p^2 u}{\\p s \\p v} +  \\frac{\\eta^2 v}{2}\\frac{\\p^2 u}{\\p v^2} + \\lambda(m - v) \\frac{\\p u}{\\p v} = 0\n\\]\nand the premium \\(c\\) of a call struck at \\(K\\) has the following quasi-closed form (modulo a one-dimensional integral) expression\n\\[\nc = K \\,\\left\\{ e^x \\,P_1(x,v,\\tau ) - P_0(x ,v ,\\tau)\\right\\},\n\\]\nwhere \\(x = \\log s - \\log K\\) and\n\\[\n    P_j (x,v,\\tau ) =\\frac{1}{2} + \\frac{1}{\\pi }\\,\\int_0^\\infty \\,\\mathop{Re} \\left\\{ {\\frac{{\\exp \\{ C_j (u,\\tau )\\,\\bar v + D_j(u,\\tau )\\,v + i\\,u\\,x\\} }}{{i\\,u}}} \\right\\} \\, \\mathrm{d}u, \\quad j = 0,1.\n\\]\n\nNote\n\nThe condition on the coefficients \\(2\\lambda m \\geq \\eta^2\\) guarantees that the variance process \\(v_t\\) never hit zero. In practice, the condition is at times not met.\nTechnical note: call premium from characteristic function\n\n\\[\nc = S - \\frac{\\sqrt{SK}}\\pi \\, \\int_0^\\infty Re\\left\\{ e^{-iuk} \\phi\\left(u - \\frac i2 \\right) \\right\\} \\frac{\\mathrm{d}u}{u^2 + \\frac14},\n\\]\nwhere \\(\\phi\\) is the characteristic function of \\(\\log(S_T/S_0)\\), \\(k = \\log(K/S_0)\\) denotes the logmoneyness, and \\(i = \\sqrt{-1}\\).\n\n# numerical integration in python\nfrom scipy.integrate import quad\n\n\nf = lambda x: np.sin(x)\nquad(f, a=0, b=np.pi)\n\n(2.0, 2.220446049250313e-14)\n\n\n\n# complex number in python\n1j*2j, (3+2j).real, (5+7j).imag\n\n((-2+0j), 3.0, 7.0)\n\n\n\n# Heston characteristic function\ndef phi_heston(lmda, rho, eta, vbar, v):\n    def _(u, t):\n        al = -u*u/2 - 1j*u/2\n        bet = lmda - rho*eta*1j*u\n        gam = eta**2/2\n        d = sqrt(bet*bet - 4*al*gam)\n        rp = (bet + d)/(2*gam)\n        rm = (bet - d)/(2*gam)\n        g = rm/rp\n        D = rm*(1 - exp(-d*t))/ (1 - g*exp(-d*t))\n        C = lmda * (rm * t - 2/eta**2 * log( (1 - g*exp(-(d*t)))/(1 - g) ) )\n        return exp(C*vbar + D*v)\n    return _\n\n\n# call price from chf \ndef call_option(phi, k, t):\n    integrand = lambda u: (exp(-1j*u*k)*phi(u - 1j/2, t)/(u**2 + 1/4)).real\n    tmp = quad(integrand, a=0, b=np.inf)[0]\n    return 1 - exp(k/2)/np.pi*tmp\n\n\n# parameters for Heston model\nlmda, rho, eta, vbar, v = 0.6067, -0.7571, 0.2928, 0.0707, .0654\ncall_option(phi_heston(lmda, rho, eta, vbar, v), 0, 1)\n\n0.09701405804263008\n\n\n\n# plot\nx = np.linspace(-1, 1, 201)\n_ = lambda xx: call_option(phi_heston(lmda, rho, eta, vbar, v), xx, 1)\n_ = np.vectorize(_)\ny = _(x)\n\nplt.figure(figsize=(15, 6))\nplt.subplot(1, 2, 1)\nplt.plot(x, y)\nplt.xlabel('logmoneyness', fontsize=15)\nplt.ylabel('call price', fontsize=15)\nplt.subplot(1, 2, 2)\nplt.plot(exp(x), y)\nplt.xlabel('moneyness', fontsize=15);"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#heston-model-in-log-return",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#heston-model-in-log-return",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Heston model in log return",
    "text": "Heston model in log return\nDenote by \\(X_t = \\log S_t - \\log S_0\\) the logarithmic return. Then the Heston model can be recast as\n\\[\\begin{equation}\n\\begin{aligned}\n   \\mathrm{d}X_t &= \\sqrt{v_t} \\, \\mathrm{d}B_t - \\frac{1}{2} v_t \\, \\mathrm{d}t, \\\\\n   \\mathrm{d}v_t &= \\lambda(m - v_t) \\, \\mathrm{d}t + \\eta \\sqrt{v_t} \\, \\mathrm{d}Z_t,\n\\end{aligned}\n\\end{equation}\\]\nwhere \\(B_t = \\rho Z_t + \\bar\\rho W_t\\) and \\(W_t\\), \\(Z_t\\) are independent Brownian motions. \\(\\bar\\rho = \\sqrt{1 - \\rho^2}\\)."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#joint-characteristic-function-for-log-return-and-integrated-variance",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#joint-characteristic-function-for-log-return-and-integrated-variance",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Joint characteristic function for log return and integrated variance",
    "text": "Joint characteristic function for log return and integrated variance\nWe are interested in determining the joint characteristic function for the logarithmic return \\(X_T\\) and the integrated variance \\(\\int_0^T v_t \\mathrm{d}t\\). Namely,\n\\[\n\\Eof{e^{iu_1 X_T + iu_2 \\int_0^T v_t \\mathrm{d}t}},\n\\]\nwhere \\(u_1, u_2 \\in \\R\\) are parameters.\nNotice that we have\n\\[\\begin{equation}\n\\begin{aligned}\n   X_T &= X_t + \\rho \\int_t^T \\sqrt{v_\\tau} \\, \\mathrm{d}Z_\\tau + \\bar{\\rho} \\int_t^T \\sqrt{v_\\tau} \\, \\mathrm{d}W_\\tau - \\frac{1}{2} \\int_t^T v_\\tau \\, \\mathrm{d}\\tau  \\\\\n       &= X_t + \\frac{\\rho}{\\eta} \\left\\{v_T - v_t - \\int_t^T \\lambda(m - v_\\tau) \\, \\mathrm{d}\\tau \\right\\} + \\bar{\\rho} \\int_t^T \\sqrt{v_\\tau} \\, \\mathrm{d}W_\\tau - \\frac{1}{2} \\int_t^T v_\\tau \\, \\mathrm{d}\\tau \\\\\n       &= X_t - \\frac{\\rho}{\\eta} \\{v_t + \\lambda m (T - t)\\} + \\frac{\\rho}{\\eta} v_T + \\int_t^T \\left(\\frac{\\lambda \\rho}{\\eta} - \\frac{1}{2}\\right) v_\\tau \\, \\mathrm{d}\\tau + \\bar{\\rho} \\int_t^T \\sqrt{v_\\tau} \\, \\mathrm{d}W_\\tau.\n\\end{aligned}\n\\end{equation}\\]\nThus,\n\\[\\begin{equation}\n\\begin{aligned}\n   &\\mathbb{E}\\left[ \\left. e^{iu_1 X_T + iu_2\\int_t^T v_\\tau \\, \\mathrm{d}\\tau} \\right| X_t = x, v_t = v \\right] \\\\\n   &= \\mathbb{E}\\left[ \\left. e^{iu_1 \\left\\{ X_t - \\frac{\\rho}{\\eta} \\{v_t + \\lambda m (T - t)\\} + \\frac{\\rho}{\\eta} v_T + \\int_t^T \\left(\\frac{\\lambda \\rho}{\\eta} - \\frac{1}{2}\\right) v_\\tau \\, \\mathrm{d}\\tau + \\bar{\\rho} \\int_t^T \\sqrt{v_\\tau} \\, \\mathrm{d}W_\\tau \\right\\} + iu_2 \\int_t^T v_\\tau \\, \\mathrm{d}\\tau} \\right| v_t = v \\right] \\\\\n   &= e^{iu_1\\left(x - \\frac{\\rho}{\\eta} \\{v + \\lambda m (T - t)\\}\\right)} \\mathbb{E}\\left[ \\left. e^{iu_1 \\left\\{\\frac{\\rho}{\\eta} v_T + \\int_t^T \\left(\\frac{\\lambda \\rho}{\\eta} - \\frac{1}{2}\\right) v_\\tau \\, \\mathrm{d}\\tau + \\bar{\\rho} \\int_t^T \\sqrt{v_\\tau} \\, \\mathrm{d}W_\\tau \\right\\} + iu_2 \\int_t^T v_\\tau \\, \\mathrm{d}\\tau} \\right| v_t = v \\right] \\\\\n   &= e^{iu_1\\left(x - \\frac{\\rho}{\\eta} \\{v + \\lambda m (T - t)\\}\\right)} \\mathbb{E}\\left[ \\left. e^{iu_1 \\left\\{\\frac{\\rho}{\\eta} v_T + \\int_t^T \\left(\\frac{\\lambda \\rho}{\\eta} - \\frac{1}{2} + \\frac{\\bar{\\rho}^2}{2}\\right) v_\\tau \\, \\mathrm{d}\\tau \\right\\} + iu_2 \\int_t^T v_\\tau \\, \\mathrm{d}\\tau} \\right| v_t = v \\right] \\\\\n   &= e^{iu_1\\left(x - \\frac{\\rho}{\\eta} \\{v + \\lambda m (T - t)\\}\\right)} \\mathbb{E}\\left[ \\left. e^{ iu_1 \\frac{\\rho}{\\eta} v_T + \\int_t^T \\left\\{iu_1 \\left(\\frac{\\lambda \\rho}{\\eta} - \\frac{\\rho^2}{2}\\right) + iu_2 \\right\\} v_\\tau \\, \\mathrm{d}\\tau} \\right| v_t = v \\right]\n\\end{aligned}\n\\end{equation}\\]"
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#feynman-kac-formula-again",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#feynman-kac-formula-again",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Feynman-Kac formula again",
    "text": "Feynman-Kac formula again\nWe proceed by applying the Feynman-Kac formula to evaluate the expectation.\nLet\n\\[\nu(t, v) = \\Eof{\\left. e^{ c_1 v_T - \\int_t^T c_2 v_\\tau \\mathrm{d}\\tau} \\right|v_t=v},\n\\]\nwhere \\(c_1 = iu_1\\frac\\rho\\eta\\) and \\(c_2 = -i\\left\\{u_1\\left(\\frac{\\lambda\\rho}\\eta - \\frac{\\rho^2}2\\right) + u_2\\right\\}\\). Then \\(u\\) is a solution to the (backward) PDE\n\\[\\begin{equation}\n\\begin{aligned}\n  u_t + \\frac{\\eta^2 v}{2} u_{vv} + \\lambda(m - v) u_v = c_2 v u\n\\end{aligned}\n\\end{equation}\\]\nwith terminal condition \\(u(T, v) = e^{c_1 v}\\)."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#solving-the-terminal-value-problem",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#solving-the-terminal-value-problem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Solving the terminal value problem",
    "text": "Solving the terminal value problem\nAssume the ansatz of exponential affine\n\\[\nu(t, v) = e^{H_1 v + H_0}.\n\\]\nThe derivatives of \\(u\\) are given by\n\\[\\begin{equation}\n\\begin{aligned}\n  u_t &= (\\dot{H}_1 v + \\dot{H}_0) u, \\\\\n  u_v &= H_1 u, \\\\\n  u_{vv} &= H_1^2 u.\n\\end{aligned}\n\\end{equation}\\]\nSubstuting the derivatives into the PDE yields\n\\[\n\\dot H_1 v + \\dot H_0 + \\frac{\\eta^2}2 v H_1^2 + \\lambda(m - v) H_1 = c_2 v.\n\\]\nCompare the coefficients then we obtain the system of ODEs for \\(H_1\\) and \\(H_0\\)\n\\[\\begin{equation}\n\\begin{aligned}\n  v &: \\dot{H}_1 + \\frac{\\eta^2}{2} H_1^2 - \\lambda H_1 = c_2, \\\\\n  1 &: \\dot{H}_0 + \\lambda m H_1 = 0.\n\\end{aligned}\n\\end{equation}\\]\nwith terminal conditions \\(H_1(T) = c_1\\) and \\(H_0(T) = 0\\)."
  },
  {
    "objectID": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#solution-to-system-of-odes",
    "href": "NSD_Lec04_Summer2025/NSD_Lec04-BlackMertonScholes-2_Summer2025.html#solution-to-system-of-odes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Solution to system of ODEs",
    "text": "Solution to system of ODEs\nThe solution to the ODEs is given (formally) by\n\\[\\begin{equation}\n\\begin{aligned}\n  H_1(t) &= \\frac{\\lambda}{\\eta^2} + \\frac{\\Delta}{\\eta^2} \\tan \\left( \\arctan\\left(\\frac{c_1 \\eta^2 - \\lambda}{\\Delta}\\right) + \\frac{\\Delta}{2} (T - t) \\right), \\\\\n  H_0(t) &= \\frac{2\\lambda m}{\\eta^2} \\log \\left(\\cos \\left( \\arctan\\left(\\frac{c_1 \\eta^2 - \\lambda}{\\Delta}\\right) \\right) \\right) \\\\\n         &\\quad - \\frac{2\\lambda m}{\\eta^2} \\log \\left(\\cos \\left( \\frac{\\Delta}{2} (t - T) - \\arctan \\left(\\frac{c_1 \\eta^2 - \\lambda}{\\Delta}\\right) \\right) \\right)\n         + \\frac{\\lambda^2 m}{\\eta^2} (T - t).\n\\end{aligned}\n\\end{equation}\\]\nwhere \\(\\Delta = \\sqrt{-2 c_2 \\eta^2 - \\lambda^2}\\).\n\nNote\nNote that some of the parameters are complex, it causes some troubles when evaluating logarithm etc.\nThus, we can obtain the characteristic function for \\(X_T\\) by simply setting \\(u_2 = 0\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html",
    "href": "NSD_Lec02-StochCal_Summer2025.html",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\n\n\n\\[\n\\renewcommand{\\d}{\\text{d} }\n\\newcommand{\\bea}{\\begin{align}}\n\\newcommand{\\eea}{\\end{align}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\def\\Cov{{ \\text{Cov} }}\n\\def\\Var{{ \\text{Var} }}\n\\newcommand{\\1}{\\mathbb{1} }\n\\newcommand{\\p}{\\partial}\n\\renewcommand{\\P}{\\mathbb{P} }\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\renewcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#lecture-2-crash-course-on-stochastic-calculus",
    "href": "NSD_Lec02-StochCal_Summer2025.html#lecture-2-crash-course-on-stochastic-calculus",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\n\n\n\\[\n\\renewcommand{\\d}{\\text{d} }\n\\newcommand{\\bea}{\\begin{align}}\n\\newcommand{\\eea}{\\end{align}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\def\\Cov{{ \\text{Cov} }}\n\\def\\Var{{ \\text{Var} }}\n\\newcommand{\\1}{\\mathbb{1} }\n\\newcommand{\\p}{\\partial}\n\\renewcommand{\\P}{\\mathbb{P} }\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\renewcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#outline-of-lecture-2",
    "href": "NSD_Lec02-StochCal_Summer2025.html#outline-of-lecture-2",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Outline of Lecture 2",
    "text": "Outline of Lecture 2\n\nBrownian motion\nStochastic integral\nIto’s formula\nFeynman-Kac formula\n\nCharacteristic function for Lévy area"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#definition-of-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#definition-of-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Definition of Brownian motion",
    "text": "Definition of Brownian motion\nLet \\((\\Omega,\\cF_t,\\P)\\) be a filtered probability space.\nA stochastic process \\(B_t\\) adapted to \\(\\cF_t\\) is called a (standard) Brownian motion or a Wiener process if it satisfies the following conditions\n\n\\(\\P[\\omega: B_0(\\omega) = 0] = 1\\), i.e., the process starts at zero almost surely.\nFor any \\(0 \\leq s &lt; t\\), the random variable \\(B_t - B_s\\) is normally distributed with mean 0 and variance \\(t-s\\), i.e., for any \\(a&lt;b\\), \\[\n\\P[a \\leq B_t - B_s \\leq b] = \\frac{1}{\\sqrt{2\\pi(t-s)}}\\int_a^b e^{-\\frac{x^2}{2(t-s)}} {\\rm d} x.\n\\]\n\\(B_t\\) has independent increment, i.e., for any \\(0\\leq t_1 &lt; t_2 &lt; \\cdots &lt; t_n\\), the random variables \\[\n  B_{t_1}, \\; B_{t_2} - B_{t_1},\\; \\cdots, \\; B_{t_n} - B_{t_{n-1}}\n\\] are independent.\nAlmost all sample paths of \\(B_t\\) are continuous functions, i.e., \\[\n  \\P[\\omega:B_t(\\omega) \\text{ is continuous } ] = 1\n\\]\n\n\nRemark\n\nA Brownian motion is sometimes defined as a stochastic process satisfying only the first 3 conditions in the definition. Such a process always has continuous modification by applying Kolmogorov’s continuity criterion.\nThe standard Brownian motion starts at 0. A Brownian motion starts at \\(x\\neq 0\\) is obtain by shifting \\(x + B_t\\).\n\\(X_t = x + \\sigma B_t\\), \\(X_t\\) has mean \\(x\\) and variance \\(\\sigma^2 t\\), whereas \\(X_t - X_s\\) has mean \\(0\\) variance \\(\\sigma^2(t-s)\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#kolmogorovs-continuity-criterion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#kolmogorovs-continuity-criterion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Kolmogorov’s continuity criterion",
    "text": "Kolmogorov’s continuity criterion\n\nTheorem\nA process \\(X\\), for which there exist three constants \\(\\alpha\\), \\(\\beta\\), \\(C &gt; 0\\) such that \\[\n  \\Eof{|X_{t+h} - X_t|^{\\alpha}} \\leq C h^{1 + \\beta}\n\\] for every \\(t\\) and \\(h\\), has a modification which is almost surely continuous.\n注: Modification(修正), 设概率空间 \\((\\Omega, \\cF, \\P)\\) 上有两个指标集为 \\(T\\) 的随机过程 \\(X=\\{X_t\\}\\) 和 \\(Y=\\{Y_t\\}\\), 那么我们称 \\(Y\\) 是 \\(X\\) 的修正, 如果对于 \\(\\forall t \\in T\\) 有: \\[\n\\P[X_t = Y_t] = 1.\n\\] 之所以把上面的概念称作修正, 是因为 \\(Y\\) 相当于是把原过程 \\(X\\) 调整了极少量的点之后得来的.\nFor Brownian motion \\(B_t\\), since the random variable \\(B_{t+h} - B_t\\) is centered Gaussian with variance \\(h\\), we have\n\\[\n   \\Eof{(B_{t+h} - B_t)^4} = 3 h^2.\n\\]\nTherefore, by taking \\(\\alpha=4\\), \\(\\beta = 1\\), and \\(C=3\\), the Kolmogorov’s continuity criterion applies."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#historical-note",
    "href": "NSD_Lec02-StochCal_Summer2025.html#historical-note",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Historical note",
    "text": "Historical note\nQuotes from the Wikipage:\n\n“Brownian motion or pedesis (from Greek: πήδησις /pɛ̌ːdɛːsis/”leaping”) is the random motion of particles suspended in a fluid (a liquid or a gas) resulting from their collision with the quick atoms or molecules in the gas or liquid.”\n“This transport phenomenon is named after the botanist Robert Brown. In 1827, while looking through a microscope at particles found in pollen grains in water, he noted that the particles moved through the water but was not able to determine the mechanisms that caused this motion.”\n“The first person to describe the mathematics behind Brownian motion was Thorvald N. Thiele in a paper on the method of least squares published in 1880. This was followed independently by Louis Bachelier in 1900 in his PhD thesis”The theory of speculation”, in which he presented a stochastic analysis of the stock and option markets. Albert Einstein (in one of his 1905 papers) and Marian Smoluchowski (1906) brought the solution of the problem to the attention of physicists, and presented it as a way to indirectly confirm the existence of atoms and molecules. Their equations describing Brownian motion were subsequently verified by the experimental work of Jean Baptiste Perrin in 1908.”"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#андрей-николаевич-колмогоров",
    "href": "NSD_Lec02-StochCal_Summer2025.html#андрей-николаевич-колмогоров",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Андре́й Никола́евич Колмого́ров",
    "text": "Андре́й Никола́евич Колмого́ров\n\n\n\nCourtesy: Photo from Encyclopedia Britannica\nQuotes from the Wikipage:\n\nAndrey Nikolaevich Kolmogorov (Russian: Андре́й Никола́евич Колмого́ров), 25 April 1903 – 20 October 1987) was a Soviet mathematician who contributed to the mathematics of probability theory, topology, intuitionistic logic, turbulence, classical mechanics, algorithmic information theory and computational complexity."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#nobert-wiener",
    "href": "NSD_Lec02-StochCal_Summer2025.html#nobert-wiener",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Nobert Wiener",
    "text": "Nobert Wiener\n\n\n\nCourtesy: Photo from Encyclopedia Britannica\nQuotes from the Wikipage:\n\nNorbert Wiener, November 26, 1894 – March 18, 1964, was an American mathematician and philosopher. He was a professor of mathematics at the Massachusetts Institute of Technology. A child prodigy, Wiener later became an early researcher in stochastic and mathematical noise processes, contributing work relevant to electronic engineering, electronic communication, and control systems."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#properties-of-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#properties-of-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Properties of Brownian motion",
    "text": "Properties of Brownian motion\nThe following properties hold for Brownian motion \\(B_t\\).\n\nTime-homogeneity For any \\(s&gt;0\\), the process \\(B_{t+s} - B_s\\), \\(t\\geq 0\\) is also a Brownian motion and is independent of the \\(\\sigma\\)-algebra \\(\\sigma(B_u, u\\leq s)\\).\nSymmetry The process \\(-B_t\\), \\(t\\geq 0\\), is a Brownian motion.\nSelf-similarity For every \\(c &gt; 0\\), the process \\(cB_{t/c^2}\\), \\(t \\geq 0\\), is a Brownian motion.\nTime inversion The process \\(X\\) defined by \\(X_0=0\\), \\(X_t = tB_{1/t}\\) for \\(t&gt;0\\), is a Brownian motion."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#distributional-properties-of-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#distributional-properties-of-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Distributional properties of Brownian motion",
    "text": "Distributional properties of Brownian motion\nBrownian motion is a Gaussian process, it is fully characterized by the mean and the covariance functions.\n\n\\(\\Eof{B_t} = 0\\) for all \\(t\\)\n\\(\\cov(B_t,B_s) = \\min\\{s,t\\}\\)\n\nTo calculate the covariance, without loss of generality, we assume \\(s &lt; t\\).\n\\[\\begin{align*}\n  \\cov(B_t,B_s) &= \\Eof{B_t\\, B_s} = \\Eof{(B_t - B_s + B_s)B_s} = \\Eof{(B_t - B_s)B_s} + s \\\\\n  &= \\Eof{B_t - B_s}\\,\\Eof{B_s} + s \\quad (\\because \\text{ independent increment}) \\\\\n  &= s = \\min\\{s,t\\}.\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#review-gaussian-process",
    "href": "NSD_Lec02-StochCal_Summer2025.html#review-gaussian-process",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Review: Gaussian process",
    "text": "Review: Gaussian process\nA stochastic process \\(X_t\\) is called a Gaussian process if all its finite dimensional distributions are multivariate normally distributed. Thus, a Gaussian process is fully characterized by its mean function \\(\\mu(t) = \\Eof{X_t}\\) and (auto)covariance function \\(\\gamma(t,s) = \\cov(X_t,X_s)\\).\n\nCommonly encountered Gaussian processes\n\nBrownian motion\nBrownian motion with deterministic drift\nBrownian bridge\nOrnstein-Uhlenbeck process\nfractional Brownian motion"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#carl-friedrich-gauss",
    "href": "NSD_Lec02-StochCal_Summer2025.html#carl-friedrich-gauss",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Carl Friedrich Gauss",
    "text": "Carl Friedrich Gauss\n\n\n\nCourtesy: Wikipedia\nQuote from the Wikipage:\n\nJohann Carl Friedrich Gauss (/ɡaʊs/; German: Gauß [kaʁl ˈfʁiːdʁɪç ˈɡaʊs]; Latin: Carolus Fridericus Gauss; 30 April 1777 – 23 February 1855) was a German mathematician and physicist who made significant contributions to many fields in mathematics and science. Sometimes referred to as the Princeps mathematicorum (Latin for ‘“the foremost of mathematicians”’) and “the greatest mathematician since antiquity”, Gauss had an exceptional influence in many fields of mathematics and science, and is ranked among history’s most influential mathematicians."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#variation-of-a-function",
    "href": "NSD_Lec02-StochCal_Summer2025.html#variation-of-a-function",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Variation of a function",
    "text": "Variation of a function\nLet \\(f:[0,T] \\to \\R\\). Let \\(\\Pi_n = \\{0=t_0 &lt; t_1 &lt; \\cdots &lt; t_n = T \\}\\) be a sequence of partitions of the finite interval \\([0,T]\\) and denote \\(\\displaystyle\\|\\Pi_n\\| = \\max_n\\{ t_i - t_{i-1} \\}\\). The variation \\(V_f(T)\\) of \\(f\\) in \\([0,T]\\) is defined as \\[\n  V_f(T) = \\lim_{\\|\\Pi_n\\|\\to 0} \\sum_{i=1}^n |f(t_i) - f(t_{i-1})|\n\\] provided the limit exists.\n\nRemark\nAn important property for functions of finite variation is that it can be uniquely written as the sum of an increasing function and a decreasing function.\n实际上记录了在 \\(y\\) 轴上经历的路程.\n\n递增函数: Variation = 终值 - 初值."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#quadratic-variation-and-covariation",
    "href": "NSD_Lec02-StochCal_Summer2025.html#quadratic-variation-and-covariation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Quadratic variation and covariation",
    "text": "Quadratic variation and covariation\nLet \\(f,g:[0,T] \\to \\R\\). Let \\(\\Pi_n = \\{0=t_0 &lt; t_1 &lt; \\cdots &lt; t_n = T\\}\\) be a sequence of partitions of the finite interval \\([0,T]\\) and denote \\(\\|\\Pi_n\\| = \\max_n\\{ t_i - t_{i-1} \\}\\).\n\nQuadratic variation\nThe quadratic variation of \\(f\\), denoted by \\([f](T)\\), in \\([0,T]\\) is defined as\n\\[\n  [f](T) = \\lim_{\\|\\Pi_n\\|\\to 0} \\sum_{i=1}^n |f(t_i) - f(t_{i-1})|^2\n\\]\nprovided the limit exists.\n\n\nQuadratic covariation\nThe quadratic covariation of \\(f\\) and \\(g\\), denoted by \\([f,g](T)\\), in \\([0,T]\\) is defined as\n\\[\n  [f,g](T) = \\lim_{\\|\\Pi_n\\|\\to 0} \\sum_{i=1}^n [f(t_i) - f(t_{i-1})][g(t_i) - g(t_{i-1})]\n\\]\nprovided the limit exists.\n\n\nRemark\nOne can define even higher order variations, say, cubic variation. However, if the variation at some order is finite, all the higher order variations vanish. For example, the cubic variation of Brownian motion vanishes since it has finite quadratic variation."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#quadratic-variation-of-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#quadratic-variation-of-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Quadratic variation of Brownian motion",
    "text": "Quadratic variation of Brownian motion\nLet \\(\\Delta_n = \\{a=t_0 &lt; t_1 &lt; \\cdots &lt; t_n = b \\}\\) be a partition of a finite interval \\([a,b]\\). Then\n\\[\n  \\lim_{n\\to\\infty}\\sum_{i=1}^n (B_{t_{i}} - B_{t_{i-1}})^2 = b-a \\quad \\text{ in } L^2(\\Omega)\n\\]\nas \\(\\|\\Delta_n\\| = \\displaystyle\\max_{1\\leq i \\leq n}(t_i - t_{i-1})\\) goes to \\(0\\).\n注: \\(L^p\\) 空间实际上是 \\(p\\) 次可积函数组成的空间. \\(L^p\\) Space\nIn other words, the quadratic variation \\([B]_t\\) of Brownian motion \\(B_t\\) in \\([0,t]\\) is \\([B]_t = t\\).\n\nRemark\nAlmost sure convergence is guaranteed if the sequence \\(\\{\\Delta_n\\}\\) satisfies the condition\n\\[\n  \\Delta_1 \\subset \\Delta_2 \\subset \\cdots \\subset \\Delta_n\n  \\subset \\cdots.\n\\]\nAlmost sure convergence is also guaranteed when \\(\\{\\Delta_n\\}\\) satisfies \\(\\displaystyle\\sum_{n=1}^\\infty \\| \\Delta_n \\| &lt; \\infty\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#technical-note-convergence-in-lp",
    "href": "NSD_Lec02-StochCal_Summer2025.html#technical-note-convergence-in-lp",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Technical note: Convergence in \\(L^p\\)",
    "text": "Technical note: Convergence in \\(L^p\\)\nA sequence of random variables \\(X_n\\) defined on the probability space \\((\\Omega,\\F,\\P)\\) is called convergent to \\(X\\) in \\(L^p\\) if\n\\[\n\\lim_{n\\to\\infty} \\|X_n - X\\|_p = 0 \\quad \\text{ or equivalently } \\quad \\lim_{n\\to\\infty} \\Eof{|X_n - X|^p} = 0\n\\]\nwhere \\(\\|X\\|_p = \\sqrt[p]{\\Eof{|X|^p}}\\) is the \\(L^p\\)-norm of the random variable \\(X\\).\n\nRemark\nRecall that we have the relationship among different types of convergence\n\\[\n\\begin{array}{ccccc}\n\\text{in } L^p & \\Rightarrow & \\text{in probability} & \\Rightarrow & \\text{in distribution or weakly} \\\\\n& & \\Uparrow & & \\\\\n& & \\text{almost surely}\n\\end{array}\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#local-properties-of-brownian-paths",
    "href": "NSD_Lec02-StochCal_Summer2025.html#local-properties-of-brownian-paths",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Local properties of Brownian paths",
    "text": "Local properties of Brownian paths\nLet \\(B_t\\) be a Brownian motion.\n\n\\(B_t\\) is locally Hölder continuous of order \\(\\alpha\\) for every \\(\\alpha &lt; \\frac12\\).\nThe Brownian paths are almost surely of infinite variation on any interval.\nThe Brownian paths are almost surely nowhere locally Hölder continuous of order \\(\\alpha\\) for \\(\\alpha &gt; \\frac12\\).\nLévy’s modulus of continuity. Let \\(h(t) = \\sqrt{2 t \\log(1/t) }\\). Then\n\n\\[\n\\P\\left[ \\mathop{\\overline{\\lim}}_{\\epsilon \\to 0} \\left( \\sup_{0\\leq t_1 &lt; t_2 \\leq 1, \\\\ t_2 - t_1 \\leq \\epsilon}\\frac{|B_{t_2} - B_{t_1}|}{h(\\epsilon)} \\right) = 1 \\right] = 1\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#technical-note-lipschitz-and-hölder-continuity",
    "href": "NSD_Lec02-StochCal_Summer2025.html#technical-note-lipschitz-and-hölder-continuity",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Technical note: Lipschitz and Hölder continuity",
    "text": "Technical note: Lipschitz and Hölder continuity\n\nDefinition (Lipschitz continuous)\nA function \\(f\\) is called Lipschitz or Lipschitz continuous on the interval \\([a,b]\\) if there exists a constant \\(L\\) such that\n\\[\n|f(t) - f(s)| \\leq L|t-s|\n\\]\nfor all \\(t,s \\in [a,b]\\).\n\n\nDefinition (Hölder continuous)\nA function \\(f\\) is called Hölder continuous of order \\(\\alpha\\) on the interval \\([a,b]\\) if there exists a constant \\(K\\) such that\n\\[\n|f(t) - f(s)| \\leq K|t-s|^\\alpha\n\\]\nfor all \\(t,s \\in [a,b]\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#the-lévy-ciesielski-construction-of-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#the-lévy-ciesielski-construction-of-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Lévy-Ciesielski construction of Brownian motion",
    "text": "The Lévy-Ciesielski construction of Brownian motion\nLet \\(\\{\\psi_i\\}\\) be a complete orthonormal basis for \\(L^2[0,1]\\) and \\(\\xi_i\\), \\(i=1,2,\\cdots\\), an iid sequence of standard normal random variables defined on a probability space \\((\\Omega,\\F,\\P)\\). Define \\(\\displaystyle \\phi_i(t) = \\int_0^t \\psi_i(s) {\\rm d}s\\), for \\(t\\in[0,1]\\). Then the stochastic process \\(W\\) defined by\n\\[\n  W_t = \\sum_{i=1}^\\infty \\xi_i \\phi_i(t)\n\\]\nis a Brownian motion."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#paley-wiener-expansion-of-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#paley-wiener-expansion-of-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Paley-Wiener expansion of Brownian motion",
    "text": "Paley-Wiener expansion of Brownian motion\nThe Paley-Wiener representation of a Brownian path in terms of a random Fourier series.\nLet \\(\\xi_n\\) be an iid sequence of standard normal variables. Then\n\\[\nB_t=\\xi_0 t+ \\sqrt{2}\\sum_{n=1}^\\infty\\xi_n\\frac{\\sin( n\\pi t)}{n \\pi}\n\\]\nand\n\\[\nB_t = \\sqrt{2} \\sum_{n=1}^\\infty \\xi_n \\frac{\\sin \\left(\\left(n - \\frac{1}{2}\\right) \\pi t\\right)}{ \\left(n - \\frac{1}{2}\\right) \\pi}\n\\]\nrepresent a Brownian motion on \\([0,1]\\).\n\n# import modules \nimport numpy as np \nimport matplotlib.pyplot as plt\nfrom numpy import exp, log, sqrt\nimport pandas as pd\nfrom scipy.stats import norm\nimport scipy.stats as ss\nimport seaborn as sns\n\n\n# set seed for reproducing the same result\nnp.random.seed(1414)\n\n# the following function plots the Brownian motion path by the Paley-Wiener expansion\ndef plotBM(N, color='blue', n_steps=200):\n    \"\"\"\n    Plot the Brownian motion path using the Paley-Wiener expansion.\n\n    Parameters:\n    N (int): Number of terms in the expansion.\n        That is, the number of random variables used.\n        That is, the ksi defined in the above section.\n    color (str): Color of the plot.\n    n_steps (int): Number of steps in the time grid.\n    \"\"\"\n    xi0, xi = norm.rvs(size=1)[0], norm.rvs(size=N)\n    n = np.arange(1, N+1)\n    W = lambda t: xi0*t + (sqrt(2)*sum(xi*np.sin(n*np.pi*t)/n/np.pi))*(N&gt;0)\n    t = np.linspace(0, 1, n_steps)\n    y = [W(x) for x in t]\n    plt.plot(t, y, color=color, label=f'$N$ = {N}')\n    plt.xlabel('$t$')\n    plt.ylabel('BM');    \n    return None\n\n# plot\nplt.figure(figsize=(12, 8))\nplt.subplot(2, 2, 1)\nplotBM(20)\nplt.legend()\n\nplt.subplot(2, 2, 2)\nplotBM(200, color='red')\nplt.legend()\n\nplt.subplot(2, 2, 3)\nplotBM(20_000, color='green')\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#donskers-invariance-principle",
    "href": "NSD_Lec02-StochCal_Summer2025.html#donskers-invariance-principle",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Donsker’s invariance principle",
    "text": "Donsker’s invariance principle\n\nDonsker’s invariance principle is also referred to as the Donsker’s theorem.\n\nSuppose \\(\\{X_i\\}_{i=1}^\\infty\\) is an iid sequence of random variables with mean \\(0\\) and and variance \\(1\\). Let \\(S_n = \\sum_{i=1}^n X_i\\). Define the function \\(\\mathfrak{S}_n\\) of \\(t\\) by\n\\[\\begin{align*}\n\\mathfrak{S}_n(t) &= \\frac1{\\sqrt n}\\sum_{i=1}^n\\left[S_{i-1} + n \\left( t-\\frac{i-1}n \\right) X_i \\right]\\,\\1_{\\left(\\frac{i-1}n,\\frac in\\right]}(t).\n\\end{align*}\\]\n注: 设 \\(S_n(t)\\) 是某个离散随机过程(如简单随机游走)的归一化形式, 那么当步数 \\(n \\to \\infty\\) 时, 这个过程将弱收敛到布朗运动 \\(B(t)\\). 在数值模拟中, 我们通过高频率地取样并归一化, 让离散过程“逼近”布朗运动.\nIn fact, \\(\\mathfrak{S}_n\\) is simply the linear interpolation of the scaled random walk \\(\\left\\{\\frac{S_1}{\\sqrt n}, \\frac{S_2}{\\sqrt n}, \\cdots, \\frac{S_n}{\\sqrt n} \\right\\}\\).\n注: 我们只要求了 \\(\\Eof{X_i} = 0\\) 和 \\(\\Var[X_i] = 1\\), 而没有要求它是什么分布.\n注: 随机游走(Random Walk) 是指在每个时间点上随机选择一个方向(正或负)并移动一个单位长度的过程.\nThen, \\(\\mathfrak{S}_n\\Longrightarrow W\\) as \\(n\\to\\infty\\), where \\(W\\) denotes a Brownian motion.\nIn other words, as \\(n\\to\\infty\\), the linearly interpolated scaled random walk \\(\\mathfrak{S}_n\\) converges weakly to a Brownian motion."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#technical-note-weak-convergence-or-convergence-in-distribution",
    "href": "NSD_Lec02-StochCal_Summer2025.html#technical-note-weak-convergence-or-convergence-in-distribution",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Technical note: Weak convergence or convergence in distribution",
    "text": "Technical note: Weak convergence or convergence in distribution\nA sequence of random variables \\(X_n\\) is called convergent weakly or convergent in distribution to \\(X\\) if it satisfies one of the following equivalent conditions.\n\n\\(\\displaystyle\\lim_{n\\to\\infty} \\phi_{X_n}(u) = \\phi_X(u)\\) for every \\(u\\), where \\(\\phi\\) is the characteristic function.\n\\(\\displaystyle\\lim_{n\\to\\infty} \\Eof{f(X_n)} = \\Eof{f(X)}\\) for all bounded continuous function \\(f\\)\n\\(\\displaystyle\\lim_{n\\to\\infty} F_n(x) = F(x)\\) for every \\(x\\) at which \\(F\\) is continuous. \\(F_n\\) and \\(F\\) are cdfs of \\(X_n\\) and \\(X\\) respectively.\n\n\nRemark\nAs opposed to the definition of convergence a.s., in \\(L^p\\), and in probability, in defining weak convergence, the random variables \\(X_n\\)’s and \\(X\\) need not to be defined on the same probability space.\n\n\nRecap: \\(t\\)-distribution\n\\(X \\sim {\\cal N}(0,1)\\), \\(Y \\sim \\chi^2(n)\\), then \\(\\displaystyle Z = \\frac{X}{\\sqrt{Y/n}} \\sim t(n)\\), here, \\(n\\) is the degree of freedom (df).\n\nExpectation: \\(\\Eof{Z} = 0\\) for \\(n &gt; 1\\).\nVariance: \\(\\displaystyle \\Var[Z] = \\frac{n}{n-2}\\) for \\(n &gt; 2\\).\n\n\n\nSimulate random walk\n\n# Simulate random walk\n#np.random.seed(0)\n\nn_steps, nu = 1_000_000, 11\n# Choose t distribution with df = nu\nX = ss.t.rvs(size=n_steps, df=nu)/sqrt(nu/(nu-2))\n# Choose n_steps iid random variables from t distribution with df = nu\n\nBM = np.append(0, X.cumsum())\n# It's a random walk, 0, S_1, S_2, ..., S_n.\n\nt = np.linspace(0, 1, n_steps+1)\nplt.figure(figsize=(10, 6))\n# plot random walk\nplt.subplot(1, 2, 1)\nplt.plot(t, BM, 'g')\nplt.xlabel('$t$', fontsize=18);\n# plot scaled random walk\nplt.subplot(1, 2, 2)\n#plt.plot(t, BM/n_steps)\nplt.plot(t, BM/np.sqrt(n_steps))\nplt.xlabel('$t$', fontsize=18);"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Simulation of Brownian motion",
    "text": "Simulation of Brownian motion\n\n# Simulate BM by using the Donsker's invariance principle\n# number of samples, number of steps, terminal time\nn_sim, n_steps, T = 10_000, 1_000, 1  \ndt = T/n_steps\n\n# initialize the Brownians\n# n_sim: 几条布朗运动路径\n# n_steps+1: 每条路径的时间点个数\nB = np.zeros([n_sim, n_steps+1])\n\n# simulation step\nfor i in range(n_steps):\n    dB = norm.rvs(size=n_sim)\n#    dB = dB - dB.mean() # now dB has mean 0\n#    dB = dB/dB.std()  # now dB has variance 1\n    dB = np.sqrt(dt)*dB\n    B[:,i+1] = B[:,i] + dB \n\ndB 表示布朗运动增量, \\(\\Delta B \\sim {\\cal N}(0, \\Delta t)\\), 所以要乘以 dt 来构造满足这个条件的增量.\n上面注释的两行是为了创造一个 \\(\\Delta B \\sim {\\cal N}(0, 1)\\) 的增量. 但其实在大样本下, 自然已经接近标准正态分布了.\n最终, B 是一个大小为 (10000, 1001) 的矩阵, 表示 10,000 条布朗路径, 每条路径有 1001 个时间点.\n\n# plot\nt = np.arange(0, T+dt, dt)\n#t = np.linspace(0, T, n_steps+1)\nplt.figure(figsize=(10, 8))\n\n# sample path\npath = np.random.choice(n_sim)\nplt.subplot(2, 2, 1)\nplt.plot(t, B[path, :], label=f'sample path #{path}')\nplt.xlabel('$t$')\nplt.ylabel('$B_t$ sample path')\nplt.legend()\n\n# histograms\nplt.subplot(2, 2, 2)\ntime = 0.2\n# plot histogram of B at time t\nsns.histplot(B[:,t==time], bins=50, stat='density', label=f'$t={time}$')\n# plot histogram of B at time T\nsns.histplot(B[:,-1], bins=50, stat='density', color='orange', label=f'$t={T}$')\nx = np.linspace(B[:,-1].min(), B[:,-1].max(), 100)\nplt.plot(x, norm.pdf(x), 'r--', lw=1, label='normal pdf')\nplt.plot(x, norm.pdf(x, scale=sqrt(time)), 'y--', lw=1, label='normal pdf')\nplt.xlabel('$B$')\nplt.legend();\n\n# sample mean\nplt.subplot(2, 2, 3)\nplt.plot(t, B.mean(axis=0))\nplt.hlines(y=0, xmin=0, xmax=T, color='red', ls='dotted')\nplt.xlabel('$t$')\n\n# sample standard deviation\nplt.subplot(2, 2, 4)\nplt.plot(t, B.std(axis=0), label='sample std')\nplt.plot(t, np.sqrt(t), 'r--', label='sqrt t')\nplt.xlabel('$t$')\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#brownian-motion-with-drift",
    "href": "NSD_Lec02-StochCal_Summer2025.html#brownian-motion-with-drift",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Brownian motion with drift",
    "text": "Brownian motion with drift\nLet \\((\\Omega,\\F_t,\\P)\\) be a filtered probability space and \\(B_t\\) a Brownian motion on \\(\\Omega\\). A stochastic process \\(X\\) of the form\n\\[\nX_t = x + B_t + \\int_0^t \\mu_s \\text{d}s \\quad \\Longleftrightarrow \\quad \\text{d}X_t = \\text{d}B_t + \\mu_t \\text{d}t\n\\]\nis called a Brownian motion with drift \\(\\mu_t\\), where \\(\\mu\\) is adapted to the filtration \\(\\F_t\\).\n\\(\\mu_t\\) is the velocity of the drift at time \\(t\\) and \\(x\\) is the initial value of the process at time \\(t=0\\).\n\nRemark\n\n\\(X_t\\) is a Gaussian process if \\(\\mu_t\\) is deterministic. Apparently, the mean function is \\(\\displaystyle \\Eof{X_t} = x + \\int_0^t \\mu_s \\text{d}s\\) and the covariance function \\(\\gamma(t,s) = \\cov(X_t,X_s) = \\min\\{t,s\\}\\).\nWe can always transform a Brownian motion with drift into a standard Brownian motion by change of the underlying probability measure so long as the drift \\(\\mu_t\\) satisfies certain conditions, say, bounded."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#wiener-integral",
    "href": "NSD_Lec02-StochCal_Summer2025.html#wiener-integral",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Wiener integral",
    "text": "Wiener integral\n\nLet \\(f\\) be a (deterministic) step function defined by \\(f = \\sum_{i=1}^n a_i \\1_{[t_{i-1}, t_i)}\\), where \\(t_0 = a\\) and \\(t_n = b\\), \\(a_i \\in \\R\\). The Wiener integral \\(I(f)\\) of \\(f\\) is defined by\n\\[\n  I(f) = \\int_a^b f(t) \\text{d}B_t = \\sum_{i=1}^n a_i \\Delta B_{t_i}, \\quad \\Delta B_{t_i} = B_{t_i} - B_{t_{i-1}}.\n  \\]\nLet \\(f\\in L^2[a,b]\\) and \\(f_n\\) be a sequence of step functions such that \\(f_n \\to f\\) in \\(L^2[a,b]\\). The Wiener integral \\(I(f)\\) of \\(f\\) is defined by\n\\[\n  I(f) = \\int_a^b f(t) {\\rm d}B_t = \\lim_{n\\to\\infty} \\int_a^b f_n(t) {\\rm d}B_t, \\quad \\text{ in } L^2(\\Omega).\n  \\]\n\nA technical issue here: Is \\(I(f)\\) well-defined?\n注: \\(I(f)\\) 是一个随机变量, 因为 \\({\\rm d} B_t\\) 是一个正态分布的随机变量."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#wiener-integral-is-normally-distributed",
    "href": "NSD_Lec02-StochCal_Summer2025.html#wiener-integral-is-normally-distributed",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Wiener integral is normally distributed",
    "text": "Wiener integral is normally distributed\n\nTheorem\nFor each \\(f\\in L^2[a,b]\\), the Wiener integral \\(\\displaystyle \\int_a^b f(t)\\text{d}B_t\\) is a Gaussian random variable with mean 0 and variance \\(\\displaystyle \\|f\\|_2^2 = \\int_a^b f^2(t)\\text{d}t\\). In short,\n\\[\n   \\int_a^b f(s) \\text{d} B_s \\sim N(0,\\|f\\|_2^2).\n\\]\n\nIn particular, recall that if the integrand \\(f\\) is the step function \\(f(t) = \\sum_{i=1}^n a_i \\1_{[t_{i-1},t_i)}(t)\\), apparently the Wiener integral \\(I(f)\\) of \\(f\\) is normally distributed\n\\[\n  I(f) = \\sum_{i=1}^n a_i \\Delta B_i \\sim N\\left(0,\\sum_{i=1}^n a_i^2 \\Delta t_i \\right)\n  \\]\nsince the \\(\\Delta B_i\\)’s are independent normal random variables.\nThe proof for general \\(f\\in L^2[a,b]\\) is based on limiting process.\n\n\n\nExample\n\\[\n  \\int_0^t s \\text{d}B_s \\sim N\\left(0,\\frac{t^3}3\\right)\n\\]\n\n\nCorollary\nIf \\(f,g\\in L^2[a,b]\\), then\n\\[\n  \\E[I(f)I(g)] = \\E\\left[ \\int_a^b f(s) \\text{d}B_s \\int_a^b g(s) \\text{d}B_s\\right] = \\int_a^b f(t)g(t) \\text{d}t.\n\\]\nProof: 我们可以发现 \\(\\Eof{{\\rm d}B_s {\\rm d}B_t} = 0 (s\\neq t)\\), \\(\\Eof{({\\rm d}B_t)^2} = \\Var[{\\rm d}B_t] = {\\rm d} t\\). (这是根据布朗运动的定义, 以及布朗运动的独立增量性质.)\nThus, the Wiener integral \\(I:L^2[a,b] \\to L^2(\\Omega)\\) is an isometry(等距). In particular, if \\(f\\) and \\(g\\) are orthogonal, i.e., \\(\\displaystyle \\int_a^b f g \\text{d}x = 0\\), then the Gaussian random variables \\(I(f)\\) and \\(I(g)\\) are independent."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#properties-of-wiener-integral",
    "href": "NSD_Lec02-StochCal_Summer2025.html#properties-of-wiener-integral",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Properties of Wiener integral",
    "text": "Properties of Wiener integral\nLet \\(f\\) and \\(g\\) be deterministic \\(L^2[a,b]\\) functions, \\(\\alpha\\) and \\(\\beta\\) are constants. Then\n\n\\(\\displaystyle \\int_a^b \\left[\\alpha f(t) + \\beta g(t)\\right] {\\rm d}B_t = \\alpha \\int_a^b f(t) {\\rm d}B_t + \\beta \\int_a^b g(t) {\\rm d}B_t\\).\n\\(\\displaystyle \\int_a^b f(t) {\\rm d}B_t = \\int_a^c f(t) {\\rm d}B_t+ \\int_c^b f(t) {\\rm d}B_t\\), for \\(c\\in[a,b]\\).\n\n\nIntegration by parts formula\nLet \\(f\\) be a continuous function of bounded variation. Then almost surely\n\\[\n  \\int_a^b f(t) \\d B_t = f(t) B_t |_a^b - \\int_a^b B_t \\d f(t).\n\\]\n\nNote that the integral on the left hand side is in the sense of Wiener, whereas on the right hand side is in the sense of Riemann-Stietjes.\n\n\n\nExample\nDetermine the distribution of the random variable \\(\\displaystyle \\int_0^1 B_t \\d t\\).\n解答: \\[\\begin{align*}\n\\int_0^1 B_t \\d t &= t B_t \\Big|_0^1 - \\int_0^1 t \\d B_t = B_1 - \\int_0^1 t \\d B_t.\n\\end{align*}\\] 那么再根据 Wiener Integral 是正态分布的, 且 Variance 为 \\(\\| f \\|^2\\), 我们知道:\n\n\\(\\displaystyle \\int_0^1 t \\d B_t \\sim N(0, \\frac{1}{3})\\)\n\\(\\displaystyle B_1 \\sim N(0,1)\\)\n\n因此 \\(\\displaystyle \\int_0^1 B_t \\d t \\sim N\\left(0, 1 + \\frac{1}{3}\\right) = N\\left(0, \\frac{4}{3}\\right)\\). (布朗运动增量独立.)"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#wiener-integral-defines-a-continuous-martingale",
    "href": "NSD_Lec02-StochCal_Summer2025.html#wiener-integral-defines-a-continuous-martingale",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Wiener integral defines a continuous martingale",
    "text": "Wiener integral defines a continuous martingale\nLet \\(f\\in L^2[a,b]\\). Then the stochastic process \\(M_t\\) obtained through Wiener integral\n\\[\n  M_t = \\int_a^t f(s) \\d B_s, \\quad a \\leq t \\leq b,\n\\]\nis a martingale with respect to \\(\\F_s = \\sigma(B_s; s \\leq t)\\).\n注: 过滤 (filtration)是一组随时间“增长”的 \\(\\sigma\\)-代数, 用来描述我们在每个时间点所知道的信息. 也就是一族集合 \\(\\{\\cF_t\\}_{t \\geq 0}\\), 其中: \\[\n\\cF_s \\subseteq \\cF_t, \\quad \\text{ when } s\\leq t.\n\\] 时间越往后, 信息越多.\n\nDon’t be confused with a continuous time martingale and a continuous martinagle.\nSince Wiener integral defines a Gaussian process, continuity of the process can be obtained by applying Kolmogorov’s continuity criterion.\n\n\nTechnical note: martingale conditions\nTo show if the process \\(M_t\\) is a martingale, we need to verify the three defining conditions\n\n\\(M_t\\) is adapted\n\\(M_t\\) is integrable for every \\(t\\)\nFor every \\(s &lt; t\\), \\(\\Eof{M_t | \\F_s} = M_s\\) almost surely\n\n注: Martingale 说明了当前的期望值就是将来的条件期望, 没有“预测性”或“趋势”."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#an-illustrative-example-for-ito-integral",
    "href": "NSD_Lec02-StochCal_Summer2025.html#an-illustrative-example-for-ito-integral",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "An illustrative example for Ito integral",
    "text": "An illustrative example for Ito integral\nLet’s start with defining the simple integral as\n\\[\n  \\int_0^t B_s \\d B_s.\n\\]\nAs in the theory of Riemann-Stieltjes integral, we shall start with partitioning the interval \\([0,t]\\) into, say, \\(n\\) subintervals. Within each subinterval, we pick a point and evaluate the integrand at that point, multiply that value by the increment of the integrator in that subinterval. Then we sum up the results from each subinterval and take limit as the mesh of the partition approaches zero. Possible choices for selecting points from each subinterval may be, denoting \\(\\Delta B_{t_k} = B_{t_k} - B_{t_{k-1}}\\):\n\nThe right point rule: \\[\n  R_n = \\sum_{k=1}^n B_{t_k} \\Delta B_{t_k}\n  \\]\nThe left point rule: \\[\n  L_n = \\sum_{k=1}^n B_{t_{k-1}} \\Delta B_{t_k}\n  \\]\nThe midpoint rule: \\[\n  M_n = \\sum_{k=1}^n B_{t_*} \\Delta B_{t_k}, \\quad \\text{ where } t_* = \\frac{t_k + t_{k-1}}2\n  \\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#which-rule-rules",
    "href": "NSD_Lec02-StochCal_Summer2025.html#which-rule-rules",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Which rule rules?",
    "text": "Which rule rules?\nQuestion: Which rule yields convergent integral? in what sense? We knew that it can’t be pathwise because the integrator, in this case the Brownian motion, is not of finite variation (because it has nonzero second variation) almost surely.\nNote that the following identities hold. \\[\\begin{align*}\n  && R_n - L_n = \\sum_{k=1}^n \\left( \\Delta B_{t_k} \\right)^2,  \\qquad\n  R_n + L_n = \\sum_{k=1}^n \\Delta B_{t_k}^2 = B_t^2.  \\\\\n\\end{align*}\\] Hence, \\[\\begin{align*}\n  && R_n = \\frac{B_t^2}2 + \\frac12 \\sum_{k=1}^n \\left( \\Delta B_{t_k} \\right)^2,  \\qquad\n   L_n = \\frac{B_t^2}2 - \\frac12 \\sum_{k=1}^n \\left( \\Delta B_{t_k} \\right)^2.\n\\end{align*}\\] Notice that the first term in both expressions is independent of partitions and the second term, as we have seen in previous lecture, will converge to the quadratic variation of Brownian motion in \\(L^2\\) as the mesh approaches zero! Consequently,\n\\[\\begin{align*}\n  & \\lim_{\\|\\Pi_n\\|\\to0} R_n = \\frac{B_t^2}2 + \\frac t2,  \\qquad\n   \\lim_{\\|\\Pi_n\\|\\to0} L_n = \\frac{B_t^2}2 - \\frac t2.\n\\end{align*}\\]\nSo we learnt from this simple example that\n\nThe right point rule and the left end point rule yield different “integrals”.\nThe difference between the “right integral” and the “left integral” is exactly the quadratic variation.\nThe convergence is in \\(L^2\\) sense.\n\n\nRemark\n\nWe need to stick with one specific rule in order to have convergence.\nIto picked the left end point rule because of adaptivity and martingality.\n\\(L_n\\) is a martingale whereas \\(R_n\\) isn’t.\nThe midpoint rule leads to the Stratonovich integral."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-stochastic-integral-left-endpoint-rule",
    "href": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-stochastic-integral-left-endpoint-rule",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Simulation of stochastic integral: left endpoint rule",
    "text": "Simulation of stochastic integral: left endpoint rule\n\n# Simulate the stochastic integral int f(B) dB from 0 to t, for t in [0,1]\n# Demonstrate the effect of Ito correction/term \n\n# number of samples, number of steps, terminal time\nn_sim, n_steps, T = 10_000, 100, 1   \n\ndt = T/n_steps\n\nB = np.zeros([n_sim, n_steps+1])\ndB = np.zeros([n_sim, n_steps+1])\n\n# Simulate Browian paths\nfor i in range(n_steps):\n    db = norm.rvs(size=n_sim)\n    db = db - db.mean() # now db has mean 0\n    db = db/db.std() # now db has variance 1\n    dB[:,i] = np.sqrt(dt)*db\n    B[:,i+1] = B[:,i] + dB[:,i]\n\n# Calculate the (discretized) stochastic integral using left endpoints\nf = lambda x: x\ndX = f(B)*dB\nX = dX.cumsum(axis=1)\n\n# plots\nt = np.arange(0, T+dt, dt)\nplt.figure(figsize=(12, 8))\n\n# evolution of mean\nplt.subplot(2, 2, 1)\nplt.plot(t, X.mean(axis=0))\nplt.xlabel('$t$')\nplt.ylabel('sample mean', fontsize=12)\n    \n# evolution of variance\nplt.subplot(2, 2, 2)\nplt.plot(t,X.var(axis=0))\nplt.xlabel('$t$')\nplt.ylabel('sample variance', fontsize=12)\n    \n# histogram at terminal time\nplt.subplot(2, 2, 3)\nsns.histplot(X[:,-1], bins=50, stat='density', color='green', element='step');"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-stochastic-integral-right-endpoint-rule",
    "href": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-stochastic-integral-right-endpoint-rule",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Simulation of stochastic integral: right endpoint rule",
    "text": "Simulation of stochastic integral: right endpoint rule\n\n# What happens if we use right endpoints? \n\n# Calculate the (discretized) stochastic integral using right endpoints\nB = B[:,1:]\ndB = dB[:,:-1]\ndX = f(B)*dB\nX = dX.cumsum(axis=1)\n\n# plots\nt = np.arange(0, T, dt)\nplt.figure(figsize=(12, 8))\n\n# evolution of mean\nplt.subplot(2, 2, 1)\nplt.plot(t,X.mean(axis=0))\nplt.xlabel('$t$')\nplt.ylabel('sample mean', fontsize=12)\n    \n# evolution of variance\nplt.subplot(2, 2, 2)\nplt.plot(t,X.var(axis=0))\nplt.xlabel('$t$')\nplt.ylabel('sample variance', fontsize=12)\n    \n# histogram at terminal time\nplt.subplot(2, 2, 3)\nsns.histplot(X[:,-1], bins=50, stat='density', color='green');"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#伊藤-清-先生-itô-kiyoshi-sensei",
    "href": "NSD_Lec02-StochCal_Summer2025.html#伊藤-清-先生-itô-kiyoshi-sensei",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "伊藤 清 先生 (Itô, Kiyoshi sensei)",
    "text": "伊藤 清 先生 (Itô, Kiyoshi sensei)\n\n\n\nCourtesy: Photo from Wikipedia"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#ito-integral-of-simple-processes",
    "href": "NSD_Lec02-StochCal_Summer2025.html#ito-integral-of-simple-processes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Ito integral of simple processes",
    "text": "Ito integral of simple processes\n\nDefinition (simple process)\nA process \\(\\varphi_t\\) is called simple if it is of the form\n\\[\n\\varphi_t(\\omega) = \\sum_{k=1}^n \\xi_{k-1}(\\omega) \\1_{[t_{k-1},t_k)}(t),\n\\]\nwhere \\(\\xi_k \\in \\F_{t_k}\\) for \\(k=0,\\cdots,n\\).\n\nBasically, a simple process is simply a step function with random coefficients that are measurable with respect to the left endpoints.\nSimple process is defined as such for mimicking a) the step functions in the Wiener integral and b) the left endpoint rule in the Riemann integral.\nThe left endpoint measurability is key to the martingality of Ito integral, as we expected.\n\n注: 和 Wiener Integral 相比, 它把被积函数 \\(\\varphi_t\\) 也随机化了.\n\n\nDefinition (Ito integral of a simple process)\nThe stochastic integral of a simple process \\(\\varphi_t\\) with respect to Brownian motion \\(B_t\\) over \\([0,T]\\) is defined by\n\\[\n  \\int_0^T \\varphi_t \\d B_t = \\sum_{k=1}^n \\xi_{k-1} \\Delta B_{t_k}, \\quad \\text{ where } \\Delta B_{t_k} = B_{t_k} - B_{t_{k-1}}.\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#integrand-for-ito-integral",
    "href": "NSD_Lec02-StochCal_Summer2025.html#integrand-for-ito-integral",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Integrand for Ito integral",
    "text": "Integrand for Ito integral\n\nDefinition\nWe will use \\(L^2_{ad}(\\Omega\\times[a,b])\\) to denote the space of all stochastic processes \\(\\varphi_t(\\omega)\\), \\(a\\leq t \\leq b\\), satisfying\n\n\\(\\varphi_t\\) is adapted to the filtration \\(\\F_t\\).\n\\(\\displaystyle \\int_a^b \\Eof{|\\varphi_t|^2} \\d t &lt; \\infty\\).\n\nIn other words, \\(\\varphi_t\\) is adatped and in \\(L^2(\\Omega\\times[a,b])\\).  Note that, for notational simplicity, we usually omit the reference to the sample space \\(\\Omega\\) and deonte the space as \\(L^2_{ad}[a,b]\\).\n\n\nLemma\nAny \\(L_{ad}^2\\) process is the \\(L^2\\) limit of a sequence of simple processes. Precisely, let \\(\\varphi_t \\in L^2_{\\rm ad}([a,b])\\). Then there exists a sequence of simple processes \\(\\{\\varphi^{(n)}_t\\}\\) in \\(L^2_{\\rm ad}([a,b])\\) such that\n\\[\n  \\lim_{n\\to\\infty} \\Eof{\\int_a^b |\\varphi^{(n)}_t - \\varphi_t|^2 \\d t} = 0.\n\\]\nIn other words, \\(\\varphi^{(n)}_t \\to \\varphi_t\\) in \\(L^2_{\\rm ad}([a,b])\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#properties-of-ito-integral",
    "href": "NSD_Lec02-StochCal_Summer2025.html#properties-of-ito-integral",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Properties of Ito integral",
    "text": "Properties of Ito integral\nLet \\(\\varphi \\in L^2_{ad}\\) and, for \\(t \\in [0,T]\\),\n\\[\n  X_t = \\int_0^t \\varphi_s \\d B_s\n\\]\nbe the stochastic integral of \\(\\varphi_t\\) with respect to Brownian motion \\(B_t\\) up to time \\(t\\). Then \\(X_t\\) has the following properties.\n\nAdaptivity: \\(X_t \\in \\F_t\\) for each \\(t\\).\nMartingality: \\(X_t\\) is a martingale.\nIto isometry: \\[\n      \\E[X_t^2] = \\Eof{\\int_0^t \\varphi_s^2 \\d s}\\; \\leftrightsquigarrow \\; \\Eof{\\left[\\int_0^t \\varphi_s \\d B_s\\right]^2} = \\int_0^t \\Eof{\\varphi_s^2} \\d s.\n  \\]\nQuadratic variation: \\(\\displaystyle [X]_t = \\int_0^t \\varphi_s^2 {\\rm d} s \\leftrightsquigarrow d[X]_t = \\varphi_t^2 \\d t\\).\nContinuity: \\(X_t\\) is continuous in \\(t\\) a.s.\nLinearity: Let \\(\\psi_t\\) be another adapted process with \\(\\displaystyle \\Eof{\\int_0^T \\psi_t^2 \\d t} &lt; \\infty\\) and \\(\\alpha,\\beta \\in \\R\\). Then\n\\[\n  \\int_0^t (\\alpha \\varphi_s + \\beta \\psi_s) \\d B_s = \\alpha \\int_0^t \\varphi_s \\d B_s + \\beta \\int_0^t \\psi_s \\d B_s.\n  \\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#ito-processes",
    "href": "NSD_Lec02-StochCal_Summer2025.html#ito-processes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Ito processes",
    "text": "Ito processes\n\nDefinition\nAn adapted process \\(X_t\\) is called an Ito process if it is of the form\n\\[\n  X_t = x + \\int_0^t \\sigma_s \\d B_s + \\int_0^t b_s \\d s,\n\\]\nwhere \\(\\sigma_t\\) and \\(b_s\\) are adapted processes. We also write it in differential form as\n\\[\n  \\d X_t = \\sigma_t \\d B_t + b_t \\d t, \\quad \\text{with initial condition } X_0 = x.\n\\]\nThe coefficient \\(b_t\\) is referred to as the drift (term) and \\(\\sigma_t\\) as the diffusion (term) of the Ito process \\(X_t\\).\n注: 非正式理解 \\[\nX_t = \\text{初始值} + \\text{“随机扰动”} + \\text{“确定趋势”}\n\\]\n注: \\(\\sigma_t\\), \\(b_t\\) 是适应的过程 (adapted process). 这意味着它们在每一时刻 \\(t\\) 的值, 只能依赖于当前或过去的信息, 不能知道未来.\n\n\nLemma\nThe quadratic variation of the Ito process \\(X_t\\) is\n\\[\n  [X]_t = \\int_0^t \\sigma_s^2 \\d s \\quad \\leftrightsquigarrow \\quad \\d [X]_t = \\sigma_t^2 \\d t.\n\\]\nNote that\n\nthough the quadratic variation of Brownian motion is deterministic (recall \\([B]_t = t\\) a.s.), in general the quadratic variation of an Ito process is stochastic;\nthe proof is very similar to that of Brownian and is left as an exercise."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#ito-integral-with-respect-to-ito-processes",
    "href": "NSD_Lec02-StochCal_Summer2025.html#ito-integral-with-respect-to-ito-processes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Ito integral with respect to Ito processes",
    "text": "Ito integral with respect to Ito processes\nLet \\(X_t\\) be an Ito process with drift \\(b_t\\) and diffusion \\(\\sigma_t\\), i.e., \\(X_t\\) is defined by\n\\[\n  X_t = x + \\int_0^t \\sigma_s \\d B_s + \\int_0^t b_s \\d s \\quad \\leftrightsquigarrow \\quad \\d X_t = \\sigma_t \\d B_t + b_t \\d t, \\; X_0 = x.\n\\]\nand \\(\\varphi_t\\) be an adapted process. We define the stochastic integral of \\(\\varphi_t\\) with respect to \\(X_t\\) as\n\\[\n  \\int_0^t \\varphi_s \\d X_s = \\int_0^t \\varphi_s \\sigma_s \\d B_s + \\int_0^t \\varphi_s b_s \\d s\n\\]\nprovided the integrals on the right hand side are defined."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#itos-formula-for-brownian-motion",
    "href": "NSD_Lec02-StochCal_Summer2025.html#itos-formula-for-brownian-motion",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Ito’s formula for Brownian motion",
    "text": "Ito’s formula for Brownian motion\n\nTheorem\nLet \\(f(t,x)\\) be a function with continuous partial derivatives \\(f_t\\), \\(f_x\\), and \\(f_{xx}\\). Let \\(W_t = W_0 + B_t\\) be a Brownian motion starting at \\(W_0\\) (nonrandom). Then, for every \\(T \\geq 0\\),\n\\[\n  f(T,W_T) - f(0,W_0) = \\int_0^T f_x(t,W_t) \\d W_t + \\int_0^T \\left[f_t(t,W_t) + \\frac12 f_{xx}(t,W_t) \\right] \\d t.\n\\]\nOr equivalently in differential form\n\\[\n  \\d f(t,W_t) = f_x(t,W_t) \\d W_t + \\left[ f_t(t,W_t) + \\frac12 f_{xx}(t,W_t) \\right] \\d t.\n\\]\n\n\nRemark\nThe idea is that we Taylor expand \\(f(t,W_t)\\) to second order then formally apply the following rule:\n\\[\n(\\d B_t)^2 \\rightsquigarrow \\d t, \\quad (\\d t)^2 \\rightsquigarrow 0, \\quad \\d B_t \\d t \\rightsquigarrow 0.\n\\]\n注: Itô 引理其实说明了, 从 \\(f(0, W_0)\\) 到 \\(f(T, W_T)\\) 的变化有两个来源:\n\n随着布朗运动波动的部分, \\(\\displaystyle \\int f_x \\d W_t\\).\n时间推移和布朗运动“扩散”的影响, \\(\\displaystyle \\int \\left[ f_t + \\frac12 f_{xx} \\right] \\d t\\).\n\n注: 我们可以把 Itô 引理看成一个“随机链式法则”.\n\n\nRecap: 普通链式法则\n\\[\n\\d f = f_t \\d t + f_x \\d x.\n\\]\n推导过程:\n首先, 对 \\(f\\) 进行泰勒展开: \\[\\begin{align*}\nf(t+\\d t, x+\\d x) - f(t,x) =\\; &f_t \\d t + f_x \\d x  \\\\\n&+ \\frac12 f_{xx} (\\d x)^2 + \\frac12 f_{tt} (\\d t)^2 + f_{tx} \\d t \\d x + ...\n\\end{align*}\\]\n下面的二次项和高阶项都可以忽略, 因为它们的量级比 \\(\\d t\\) 和 \\(\\d x\\) 小得多.\n\n\nItô 引理推导\n同理, 我们进行泰勒展开: \\[\\begin{align*}\nf(t+\\d t, W_t +\\d W_t) - f(t,W_t) =\\; &f_t \\d t + f_x \\d W_t  \\\\\n&+ \\frac12 f_{xx} (\\d W_t)^2 + \\frac12 f_{tt} (\\d t)^2 + f_{tx} \\d t \\d W_t + ...\n\\end{align*}\\] 现在根据 \\((\\d B_t)^2 \\rightsquigarrow \\d t\\)(这是因为 Quadratic Variation of Brownian Motion is \\([B]_t = t\\), 那么 \\([\\d B_t]_t = \\d t\\)), 而剩下的都趋向 \\(0\\), 我们就得到了 Itô 引理."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#itos-formula-for-ito-process",
    "href": "NSD_Lec02-StochCal_Summer2025.html#itos-formula-for-ito-process",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Ito’s formula for Ito process",
    "text": "Ito’s formula for Ito process\nLet \\(f(t,x)\\) be a function with continuous partial derivatives \\(f_t\\), \\(f_x\\), and \\(f_{xx}\\). Then for every \\(T \\geq 0\\), \\[\\begin{align*}\n  f(T,X_T) - f(0,x) &= \\int_0^T f_t(t,X_t) \\d t + \\int_0^T f_x(t,X_t) \\d X_t + \\frac12 \\int_0^T f_{xx}(t,X_t) \\d [X]_t  \\\\\n  &= \\int_0^T f_x(t,X_t) \\sigma_t \\d B_t + \\int_0^T \\left[f_t + \\frac{\\sigma_t^2}2 f_{xx} + b_t f_x \\right] \\d t.\n\\end{align*}\\] Or in differential form\n\\[\\begin{align*}\n  \\d f(t,X_t) &= f_t(t,X_t) \\d t + f_x(t,X_t) \\d X_t + \\frac12 f_{xx}(t,X_t) \\d [X]_t   \\\\\n  &= \\sigma_t f_x \\d B_t + \\left[ f_t + \\frac{\\sigma_t^2}{2} f_{xx} + b_t f_x \\right] \\d t\n\\end{align*}\\]\n\nRemark\n\nIto’s formula naturally decomposes \\(f(t,X_t)\\) into a drift/finite variation part plus a diffusion/martingale part; reminiscent of the Doob decomposition. Processes consist of a finite variation part and a martingale part are also referred to as semi-martingales.\nNote that the second order differential operator \\(\\displaystyle \\frac{\\sigma_t^2}2 \\p_x^2 + b_t \\p_x\\) in the drift part is the infinitesimal generator of the process \\(X_t\\).\n\n\n\n推导\n\\(f(t, X_t)\\) 的增量为:\n\\[\\begin{align*}\n\\mathrm{d}f(t, X_t)\n&= f_t(t, X_t) \\, \\mathrm{d}t + f_x(t, X_t) \\, \\mathrm{d}X_t + \\frac{1}{2} f_{xx}(t, X_t) \\, (\\mathrm{d}X_t)^2\n\\end{align*}\\]\n注意这里我们只保留到二阶项, 是因为 \\((\\mathrm{d}X_t)^2\\) 是一阶(因为会出现 \\((\\mathrm{d}B_t)^2 = \\mathrm{d}t\\)), 而更高阶项如 \\((\\mathrm{d}t)^2\\)、\\(\\mathrm{d}t \\mathrm{d}B_t\\) 等都趋于 \\(0\\).\n接着代入 \\(\\mathrm{d}X_t\\). 由定义, Itô 过程满足:\n\\[\n\\mathrm{d}X_t = \\sigma_t \\mathrm{d}B_t + b_t \\mathrm{d}t.\n\\]\n我们代入 \\(\\mathrm{d}X_t\\) 得:\n\n一阶项: \\[\nf_x(t,X_t)\\mathrm{d}X_t = f_x(t,X_t)(\\sigma_t \\mathrm{d}B_t + b_t \\mathrm{d}t)\n\\]\n二阶项: 我们来计算 \\((\\mathrm{d}X_t)^2\\):\n\n\\[\n(\\mathrm{d}X_t)^2 = (\\sigma_t \\mathrm{d}B_t + b_t \\mathrm{d}t)^2 = \\sigma_t^2 (\\mathrm{d}B_t)^2 + 2\\sigma_t b_t \\mathrm{d}B_t \\mathrm{d}t + b_t^2 (\\mathrm{d}t)^2\n\\]\n根据 Itô 规则:\n\\[\n(\\d B_t)^2 \\rightsquigarrow \\d t, \\quad (\\d t)^2 \\rightsquigarrow 0, \\quad \\d B_t \\d t \\rightsquigarrow 0.\n\\]\n所以有:\n\\[\n(\\mathrm{d}X_t)^2 = \\sigma_t^2 \\, \\mathrm{d}t\n\\]\n最后代入 Taylor 展开式, 合并所有项:\n\\[\\begin{align*}\n\\mathrm{d}f(t, X_t)\n&= f_t(t, X_t)\\, \\mathrm{d}t\n+ f_x(t, X_t)\\, (\\sigma_t \\mathrm{d}B_t + b_t \\mathrm{d}t)\n+ \\frac{1}{2} f_{xx}(t, X_t) \\cdot \\sigma_t^2 \\mathrm{d}t \\\\\n&= f_x \\sigma_t \\, \\mathrm{d}B_t + \\left( f_t + b_t f_x + \\frac{1}{2} \\sigma_t^2 f_{xx} \\right) \\mathrm{d}t\n\\end{align*}\\]\n\\[\n\\boxed{\n\\mathrm{d}f(t, X_t) = f_x(t,X_t) \\sigma_t \\, \\mathrm{d}B_t\n+ \\left(f_t(t,X_t) + b_t f_x(t,X_t) + \\frac{1}{2} \\sigma_t^2 f_{xx}(t,X_t) \\right)\\mathrm{d}t\n}\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#review-fundamental-theorem-of-calculus-and-taylors-theorem",
    "href": "NSD_Lec02-StochCal_Summer2025.html#review-fundamental-theorem-of-calculus-and-taylors-theorem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Review: Fundamental theorem of calculus and Taylor’s theorem",
    "text": "Review: Fundamental theorem of calculus and Taylor’s theorem\n\nFundamental theorem of calculus\nLet \\(f\\) be a continuously differentiable function. Then \\[\nf(y) - f(x) = \\int_x^y f'(\\xi) \\d\\xi.\n\\]\n\n\nTaylor’s theorem\nFor a second differentiable function \\(f\\), there exists some \\(\\xi\\) between \\(y\\) and \\(x\\) such that\n\\[\\begin{align*}\n&& f(y) - f(x) = f'(x) (y - x) + \\frac{f''(\\xi)}2 (y-x)^2.\n\\end{align*}\\]\nNotice that the equation is exact, however in general it is not possible to specify what \\(\\xi\\) is.\n\n\nTaylor’s expansion up to 2nd order with 2 variables\nThe Taylor expansion of \\(f\\) (expanded about \\((x,t)=(a,b)\\)) is:\n\\[\\begin{align*}\nf(x,t) = &f(a,b) + f_x(a,b)(x-a) + f_t(a,b)(t-b) \\\\\n&+ \\frac{f_{xx}(a,b)}2 (x-a)^2 + f_{xt}(a,b)(x-a)(t-b) + \\frac{f_{tt}(a,b)}2 (t-b)^2 + \\cdots\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#applications-of-itos-formula-i-evaluating-stochastic-integral",
    "href": "NSD_Lec02-StochCal_Summer2025.html#applications-of-itos-formula-i-evaluating-stochastic-integral",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Applications of Ito’s formula I: Evaluating stochastic integral",
    "text": "Applications of Ito’s formula I: Evaluating stochastic integral\nIn classical calculus, we barely evaluate an integral from the definitioin per se, i.e., partition the integrating interval, form Riemann sum, then take limit as the mesh of the partition approaches zero. Instead, we evaluate an integral by applying the Fundamental Theorem of Calculus. Though in stochastic calculus the Fundamental Theorem of Calculus does not really exist, we evaluate stochastic integrals by applying Ito’s formula.\n\nTheorem\n\\[\n\\int_a^b f(B_t) \\d B_t = F(B_t)\\Big|_{t=a}^b - \\frac12 \\int_a^b f'(B_t) \\d t,\n\\]\nwhere \\(F\\) is an anti-derivative of \\(f\\), i.e., \\(F'=f\\).\n\n\nTheorem\n\\[\n\\int_a^b f(t,B_t) \\d B_t = F(t,B_t)\\Big|_{t=a}^b - \\int_a^b \\left[F_t(t,B_t) + \\frac12 f_x(t,B_t)\\right] \\d t,\n\\]\nwhere \\(F_x = f\\), i.e., \\(F\\) is an anti-derivative of \\(f\\) with respect to \\(x\\).\n\nThe idea is, we find an anti-derivative of \\(f\\) (with respect to \\(x\\)), say, \\(F\\); apply Ito’s formula to \\(F\\), then rearrange terms.\nHowever, the price we pay is that in general the last (Riemann) integral on the right hand side usually has no simple analytical expression."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#examples-of-stochastic-integral-evaluation",
    "href": "NSD_Lec02-StochCal_Summer2025.html#examples-of-stochastic-integral-evaluation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Examples of stochastic integral evaluation",
    "text": "Examples of stochastic integral evaluation\n\nEvaluate the stochastic integral \\(\\displaystyle \\int_0^t B_s \\d B_s\\).  Note that in this case \\(f(x) = x\\). Hence an anti-derivative of \\(f\\) is \\(\\displaystyle F(x) = \\frac{x^2}2\\).  Apply Ito’s formula to \\(F\\) we have\n\\[\\begin{align*}\n  & \\d F(B_t) = \\d\\left(\\frac{B_t^2}2\\right) = B_t \\d B_t + \\frac12 \\d t \\\\\n  &\\Longrightarrow \\frac{B_T^2}2 - \\frac{B_0^2}2 = \\int_0^T B_t \\d B_t + \\frac12 \\int_0^T \\d t \\\\\n  &\\Longrightarrow \\int_0^T B_t \\d B_t = \\frac12(B_T^2 - T)\n  \\end{align*}\\]\nEvaluate the stochastic integral \\(\\displaystyle \\int_0^t se^{B_s} \\d B_s\\).  Note that in this case \\(f(t,x) = t e^x\\). Hence an anti-derivative \\(F\\) of \\(f\\) is \\(F(t,x) = t e^x\\).  Apply Ito’s formula to \\(F\\) we have\n\\[\\begin{align*}\n  & \\d F(t,B_t) = \\d\\left(t e^{B_t} \\right) = e^{B_t} \\d t + te^{B_t} \\d B_t + \\frac12 te^{B_t} \\d t \\\\\n  &\\Longrightarrow T e^{B_T} = \\int_0^T t e^{B_t} \\d B_t + \\int_0^T e^{B_t} \\left(1 + \\frac t2 \\right) \\d t \\\\\n  &\\Longrightarrow \\int_0^T t e^{B_t} \\d B_t = T e^{B_T} - \\int_0^T e^{B_t} \\left(1 + \\frac t2 \\right) \\d t\n  \\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#applications-of-itos-formula-ii-solving-sdes",
    "href": "NSD_Lec02-StochCal_Summer2025.html#applications-of-itos-formula-ii-solving-sdes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Applications of Ito’s formula II: Solving SDEs",
    "text": "Applications of Ito’s formula II: Solving SDEs\nA stochastic differential equation (SDE) is an differential equation with random noise of the form\n\\[\n\\d X_t = \\mu(X_t,t) \\d t + \\sigma (X_t,t) \\d B_t\n\\]\n注: ODE (Ordinary Differential Equation) 是指一微分方程的未知数是单一自变量的函数.\nIn cases, we can solve SDEs by applying Ito’s formula to certain function of \\(X_t\\). We demonstrate the technique by solving the following two very important examples.\n\nGeometric Brownian motion/Black-Scholes model\n\\(\\d X_t = \\mu X_t \\d t + \\sigma X_t \\d B_t\\), where \\(\\mu\\) and \\(\\sigma\\) are constants.\n注: \\(\\sigma X_t \\d B_t\\) 表示当前的 risk. \\(\\mu X_t \\d t\\) 表示收益.\nTo solve it, we apply Ito’s formula to \\(\\log X_t\\).\nSolution: 我们可以视作: \\(f(t, X_t) = \\log X_t\\), 那么 \\(f_t = 0\\), \\(\\displaystyle f_x = \\frac{1}{x}\\), \\(\\displaystyle f_{xx} = - \\frac{1}{x^2}\\). \\[\\begin{align*}\n  \\d \\log X_t &=  \\frac{\\d X_t}{X_t} - \\frac{1}{2 X_t^2} (\\d X_t)^2 = \\mu \\d t + \\sigma \\d B_t - \\frac{1}{2 X_t^2} (\\d X_t)^2 \\\\\n  &= \\mu \\d t + \\sigma \\d B_t - \\frac{1}{2 X_t^2} (\\sigma^2 X_t^2 \\d t) = \\left(\\mu - \\frac12 \\sigma^2 \\right) \\d t + \\sigma \\d B_t \\\\\n  \\end{align*}\\] 注: 最后一步别的高阶项都被舍弃了.\n两边同时进行积分, 得到: \\[\\begin{align*}\n  \\log X_t - \\log X_0 &= \\left(\\mu - \\frac12 \\sigma^2 \\right) t + \\int_0^t \\sigma \\d B_s \\\\\n  &= \\left(\\mu - \\frac12 \\sigma^2 \\right) t + (\\sigma B_t) \\Big|_{s=0}^t - \\frac12 \\int_0^t 0 \\d s \\\\\n  &= \\left(\\mu - \\frac12 \\sigma^2 \\right) t + \\sigma B_t.\n  \\end{align*}\\]\n所以: \\[\n  X_t = X_0 \\exp\\left( \\left(\\mu - \\frac12 \\sigma^2 \\right) t + \\sigma B_t \\right).\n  \\]\n注: 设投资组合回报率为 \\(r_p\\), 基准指数回报率为 \\(r_b\\), 那么:\n\\[\n  \\text{相对回报} = \\frac{1 + r_p}{1 + r_b} \\approx r_p - r_b.\n  \\]\n\n绝对收益是指投资的费用后实际回报.\n相对收益就是绝对收益与某些基准收益之间的差. 一般在我们买入基金产品的时候, 基金产品会有一个基准作为比较, 比如上证综指、沪深300指数、中证1000指数等. 我们买入基金的绝对收益减去比较基准同样时间区间的绝对收益, 就是该基金相对于基准的相对收益.\n\nOrnstein-Uhlenbeck process/Vasicek model\n\\(\\d X_t = \\lambda(m - X_t) \\d t + \\sigma \\d B_t\\), where \\(m\\), \\(\\lambda\\), and \\(\\sigma\\) are constants.\nTo solve it, we apply Ito’s formula to \\(e^{\\lambda t} X_t\\).\nSolution: 我们可以视作: \\(f(t, X_t) = e^{\\lambda t} X_t\\), 那么 \\(f_t = \\lambda e^{\\lambda t} X_t\\), \\(f_x = e^{\\lambda t}\\), \\(f_{xx} = 0\\). \\[\\begin{align*}\n  \\d (e^{\\lambda t} X_t) &= \\lambda e^{\\lambda t} X_t \\d t + e^{\\lambda t} \\d X_t + 0 \\\\\n  &= \\lambda e^{\\lambda t} X_t \\d t + e^{\\lambda t} \\left[ \\lambda(m - X_t) \\d t + \\sigma \\d B_t \\right] \\\\\n  &= \\left[ \\lambda e^{\\lambda t} X_t + \\lambda e^{\\lambda t} (m - X_t) \\right] \\d t + e^{\\lambda t} \\sigma \\d B_t \\\\\n  &= \\lambda m e^{\\lambda t} \\d t + e^{\\lambda t} \\sigma \\d B_t.\n  \\end{align*}\\]\n两边同时进行积分, 得到: \\[\\begin{align*}\n  e^{\\lambda t} X_t - X_0 &= \\lambda m \\int_0^t e^{\\lambda s} \\d s + \\int_0^t e^{\\lambda s} \\sigma \\d B_s \\\\\n  &= \\lambda m \\frac{e^{\\lambda t} - 1}{\\lambda} + \\sigma \\int_0^t e^{\\lambda s} \\d B_s \\\\\n  &= m (e^{\\lambda t} - 1) + \\sigma \\int_0^t e^{\\lambda s} \\d B_s.\n  \\end{align*}\\]\n所以最后为: \\[\n  X_t = e^{-\\lambda t} \\left[ X_0 + m (e^{\\lambda t} - 1) + \\sigma \\int_0^t e^{\\lambda s} \\d B_s \\right].\n  \\]\n\n\nRemark\nGeometric Brownian motion and Ornstein-Uhlenbeck process are special cases of the so called linear SDEs which has the general form\n\\[\n\\d X_t = (\\mu_1 X_t + \\mu_0) \\d t + (\\sigma_1 X_t + \\sigma_0) \\d B_t.\n\\]\nSuch SDEs have “closed form” solutions.\n\n\nEuler-Maruyama Scheme\n现在我们考虑模拟 \\(\\d X_t = \\mu(X_t) \\d t + \\sigma(X_t) \\d B_t\\).\n那么模拟的方法就是:\n\\[\nX_{t_{n+1}} = X_{t_n} + \\mu(X_{t_n}) \\Delta t + \\sigma(X_{t_n}) \\Delta B_{t_n}.\n\\]\n用代码表示就是:\ndef euler_maruyama(X0, mu, sigma, T, N):\n    dt = T / N\n    X = np.zeros(N + 1)\n    X[0] = X0\n    for n in range(N):\n        dB = np.random.normal(0, np.sqrt(dt))  # simulate dB_t\n        X[n + 1] = X[n] + mu(X[n]) * dt + sigma(X[n]) * dB\n    return X\n\n丸山儀四郎\n\n\n\n当伊藤清在 1942 年发表一篇关于随机微分方程的论文时, 丸山立即认识到这项研究的重要性, 并立即发表了一系列关于随机微分方程和马尔可夫过程的论文. 丸山因其 1955 年关于随机微分方程数值解的微分近似的收敛性质的工作而闻名, 现在称为欧拉-丸山方法."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-the-ornstein-uhlenbeck-process",
    "href": "NSD_Lec02-StochCal_Summer2025.html#simulation-of-the-ornstein-uhlenbeck-process",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Simulation of the Ornstein-Uhlenbeck process",
    "text": "Simulation of the Ornstein-Uhlenbeck process\n\n##### The code simulates the OU process dX = lambda (m - X) dt + sigma dB\n# by Euler-Maruyama scheme\n\n# Parameters of the OU process \nlmbda, m, sigma = 5, 0.5, 0.2\nx0, T = -2, 1\n\n# number of paths and number of time steps\nn_sim, n_steps = 10_000, 100\n\n# initialize X\nX = np.ones([n_sim, n_steps+1])*x0\n\n# Euler-Maruyama scheme\ndt = T/n_steps\nfor i in range(n_steps):\n    db = norm.rvs(size=n_sim)\n    db = db - db.mean()\n    db = db/db.std()\n    # NOTE: db is a standard normal random variable, so we scale it by sqrt(dt)\n    X[:,i+1] = X[:,i] + lmbda*(m - X[:,i])*dt + sigma*np.sqrt(dt)*db\n\n# plot\nplt.figure(figsize=(12, 8))\nt = np.arange(0, T+dt, dt)\n\n# histograms at different times\nplt.subplot(2, 2, 1)\ntime = 0.02 # 0.5, 0.8\nsns.histplot(X[:,t==time], bins=30, stat='density', label=f'$t={time}$', element='step')\nsns.histplot(X[:,-1], bins=30, stat='density', label=f'$t={T}$', color='lightgreen', element='step')\nplt.legend()\n\n# time evolution of mean\nplt.subplot(2, 2, 2)\nplt.plot(t, X.mean(axis=0))\nplt.xlabel('$t$')\nplt.ylabel('sample mean')\n\n# time evolution of variance\nplt.subplot(2, 2, 3)\nplt.plot(t, X.var(axis=0))\nplt.xlabel('$t$')\nplt.ylabel('sample variance');\n\n\n\n\n\n\n\n\n\n(np.sin(X[:, -1]**2)).mean()\n\nnp.float64(0.23676791974798134)"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#stochastic-differential-equation",
    "href": "NSD_Lec02-StochCal_Summer2025.html#stochastic-differential-equation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Stochastic differential equation",
    "text": "Stochastic differential equation\nLet \\((\\Omega,\\cF_t,\\P)\\) be a filtered probability space and \\(W_t\\) a Brownian motion defined on it. A stochastic differential equation (SDE) driven by the Brownian motion \\(W_t\\) is an equation of the form\n\\[\n\\d X_t = \\mu(X_t,t) \\d t + \\sigma(X_t,t) \\d W_t, \\quad X_0 = x\n\\]\nor in integral form\n\\[\nX_t = x_0 + \\int_0^t \\mu(X_s,s) \\d s + \\int_0^t \\sigma(X_s,s) \\d W_s.\n\\]\nAs usual, \\(\\mu(x,t)\\) is referred to as the drift part and \\(\\sigma(x,t)\\) the diffusion part."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#connection-to-partial-differential-equation",
    "href": "NSD_Lec02-StochCal_Summer2025.html#connection-to-partial-differential-equation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Connection to partial differential equation",
    "text": "Connection to partial differential equation\nStochastic differential equation provides a way to numerically solve second order parabolic partial differential equations by Monte Carlo simulation. The key point is a stochastic representation of the solution to partial differential equations which we develop in the following.\nLet \\(X_t\\) be the diffusion process driven by\n\\[\n  \\d X_t = \\mu(X_t,t) \\d t + \\sigma(X_t,t) \\d W_t.\n\\]\nWe shall suppress the dependence on \\(x,t\\) of \\(\\mu\\) and \\(\\sigma\\) for notational simplicity.\n\nTheorem\nLet \\(u = u(x,t)\\) be the solution to the terminal value problem\n\\[\\begin{align*}\n  & u_t + \\frac{\\sigma^2}2 u_{xx} + \\mu u_x = 0, \\quad t &lt; T, \\\\\n  & u(x,T) = h(x).  \n\\end{align*}\\]\nThen \\(u\\) has the representation\n\\[\n  u(x,t) = \\E_{t,x}\\left[h(X_T)\\right],\n\\]\nwhere \\(\\E_{t,x}[\\cdot]\\) denotes the conditional expectation \\(\\E[\\cdot|X_t = x]\\).\n\n\nProof\nApplying Ito’s formula to \\(u(X_t,t)\\) yields\n\\[\\begin{align*}\n  u(X_T,T) - u(X_t,t) &= \\int_t^T \\sigma(X_s,s)u_x(X_s,s) \\d W_s + \\int_t^T \\left[ u_t + \\frac{\\sigma^2}2 u_{xx} + \\mu u_x \\right]\\d s  \\\\\n  &= \\int_t^T \\sigma(X_s,s)u_x(X_s,s) \\d W_s\n\\end{align*}\\]\nsince \\(u\\) satisfies the PDE\n\\[\nu_t + \\frac{\\sigma^2}2 u_{xx} + \\mu u_x = 0.\n\\]\nThus taking conditional expectation \\(\\E_{t,x}[\\cdot]\\) on both sides and taking into account the terminal condition \\(u(x,T) = h(x)\\) we end up with\n\\[\n  u(x,t) = \\E_{t,x}[h(X_T)].\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#the-feynman-kac-formula",
    "href": "NSD_Lec02-StochCal_Summer2025.html#the-feynman-kac-formula",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Feynman-Kac formula",
    "text": "The Feynman-Kac formula\nLet \\(u = u(x,t)\\) be the solution to the terminal value problem\n\\[\\begin{align*}\n  & u_t + \\frac{\\sigma^2}2 u_{xx} + \\mu u_x = V(x,t) u, \\quad t &lt; T,  \\\\\n  & u(x,T) = h(x).  \n\\end{align*}\\]\nThen \\(u\\) has the representation\n\\[\n  u(x,t) = \\E_{t,x}\\left[e^{-\\int_t^T V(X_s,s) \\d s}h(X_T)\\right],\n\\]\nwhere \\(\\E_{t,x}[\\cdot]\\) denotes the conditional expectation \\(\\E[\\cdot|X_t = x]\\). This is the celebrated Feynman-Kac formula.\n注: Feynman-Kac 公式将 PDE 的解转化为随机过程的期望. \\(e^{-\\int_t^T V(X_s,s) \\d s}\\) 是对路径的贴现效应, \\(h(X_T)\\) 是终端支付.\n贴现效应: 本质是货币时间价值的体现, 即未来资金在当前时点的折现. 其核心逻辑是“现在的钱比未来的钱更值钱”, 因此需通过扣除利息补偿资金的时间成本.\n终端支付: 指票据到期时, 持票人向付款人(或承兑人)提示票据并要求支付票面金额的行为.\n\nProof of Feynman-Kac formula\nApplying Ito’s formula to \\(u(X_t,t)e^{-\\int_0^t V(X_s,s)\\d s}\\) yields\n\\[\\begin{align*}\n  & \\d \\left[ u(X_t,t)e^{-\\int_0^t V(X_s,s)\\d s} \\right] \\\\\n  &= e^{-\\int_0^t V(X_s,s)\\d s}\\left[ u_t(X_t,t) \\d t - V(X_t,t) u(X_t,t) \\d t + u_x(X_t,t) \\d X_t + \\frac12 u_{xx}(X_t,t) \\d [X]_t \\right]  \\\\\n  &= e^{-\\int_0^t V(X_s,s)\\d s}\\left[ \\left\\{ u_t(X_t,t) + \\frac{\\sigma^2(X_t,t)}2 u_{xx}(X_t,t) + \\mu u_x(X_t,t) - V(X_t,t) u(X_t,t) \\right\\} \\d t + \\sigma(X_t,t) u_x(X_t,t) \\d B_t \\right]  \\\\\n  &= e^{-\\int_0^t V(X_s,s)\\d s} \\sigma(X_t,t) u_x(X_t,t) \\d B_t\n\\end{align*}\\]\nsince \\(u\\) satisfies the PDE\n\\[\nu_t + \\frac{\\sigma^2}2 u_{xx} + \\mu u_x = V(x,t) u.\n\\]\nIn integral form\n\\[\\begin{align*}\n  u(X_T,T)e^{-\\int_0^T V(X_s,s)\\d s} - u(X_t,t)e^{-\\int_0^t V(X_s,s)\\d s} &=& \\int_t^T e^{-\\int_0^\\tau V(X_s,s)\\d s} \\sigma(X_\\tau,\\tau) u_x(X_\\tau,\\tau) \\d B_\\tau\n\\end{align*}\\]\ntherefore, by dividing on both sides the term \\(e^{-\\int_0^t V(X_s,s)\\d s}\\) we have\n\\[\\begin{align*}\n  u(X_T,T)e^{-\\int_t^T V(X_s,s)\\d s} - u(X_t,t) &=& \\int_t^T e^{-\\int_t^\\tau V(X_s,s)\\d s} \\sigma(X_\\tau,\\tau) u_x(X_\\tau,\\tau) \\d B_\\tau.\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#richard-phillips-feynman",
    "href": "NSD_Lec02-StochCal_Summer2025.html#richard-phillips-feynman",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Richard Phillips Feynman",
    "text": "Richard Phillips Feynman\n\n\n\nCourtesy: Photo from Wikipedia"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#marek-kac",
    "href": "NSD_Lec02-StochCal_Summer2025.html#marek-kac",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Marek Kac",
    "text": "Marek Kac\n\n\n\nCourtesy: Photo from Wikipedia\nQuoted from the Wikipage:\n\nWhen Kac and Richard Feynman were both on the Cornell faculty he went to a lecture of Feynman’s and saw that the two of them were working on the same thing from different directions. The Feynman-Kac formula resulted, which proves rigorously the real case of Feynman’s path integrals. The complex case, which occurs when a particle’s spin is included, is still unproven."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#adding-nonhomogeneous-term",
    "href": "NSD_Lec02-StochCal_Summer2025.html#adding-nonhomogeneous-term",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Adding nonhomogeneous term",
    "text": "Adding nonhomogeneous term\nLet \\(u = u(x,t)\\) be the solution to the terminal value problem\n\\[\\begin{align*}\n  & u_t + \\frac{\\sigma^2}2 u_{xx} + \\mu u_x = f(x,t), \\quad t &lt; T,  \\\\\n  & u(x,T) = h(x).  \n\\end{align*}\\]\nThen \\(u\\) has the representation\n\\[\n  u(x,t) = \\E_{t,x}\\left[h(X_T) - \\int_t^T f(X_\\tau,\\tau) \\d\\tau\\right],\n\\]\nwhere \\(\\E_{t,x}[\\cdot]\\) denotes the conditional expectation \\(\\E[\\cdot|X_t = x]\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#backward-second-order-parabolic-pdes",
    "href": "NSD_Lec02-StochCal_Summer2025.html#backward-second-order-parabolic-pdes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Backward second order parabolic PDEs",
    "text": "Backward second order parabolic PDEs\nFinally, we have the stochastic representation for any backward second order parabolic linear PDE with terminal condition as follows.\n\nTheorem\nLet \\(u = u(x,t)\\) be the solution to the terminal value problem\n\\[\\begin{align*}\n  & u_t + \\frac{\\sigma^2}2 u_{xx} + \\mu u_x = V(x,t) u + f(x,t), \\quad t &lt; T,  \\\\\n  & u(x,T) = h(x).  \n\\end{align*}\\]\nThen \\(u\\) has the representation\n\\[\n  u(x,t) = \\E_{t,x}\\left[e^{-\\int_t^T V(X_s,s)\\d s}h(X_T) - \\int_t^T e^{-\\int_t^\\tau V(X_s,s)\\d s} f(X_\\tau,\\tau) \\d\\tau\\right],\n\\]\nwhere \\(\\E_{t,x}[\\cdot] = \\E[\\cdot|X_t = x]\\) is the conditional expectation. Recall that \\(X_t\\) denotes the diffusion process driven by\n\\[\n  \\d X_t = \\mu(X_t,t) \\d t + \\sigma(X_t,t) \\d W_t.\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#lévy-area",
    "href": "NSD_Lec02-StochCal_Summer2025.html#lévy-area",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Lévy area",
    "text": "Lévy area\nAs an application of the Feynmann-Kac formula, we demonstrate how to calculate the characteristic function of the Lévy area. Let \\((W_t, Z_t)\\) be a two-dimensional Brownian motion. The Lévy area \\(A_t\\) is defined by\n\\[\nA_t = \\frac12 \\int_0^t W_s \\d Z_s - Z_s \\d W_s\n\\]\nwhich represents the (stochastic) area of the region enclosed by the two-dimensional Brownian motion \\((W_t, Z_t)\\) and the radial cord.\nWe are interested in calculating the characteristic function of the Lévy area \\(A_t\\) at time \\(T\\), i.e,. the expectation\n\\[\n\\Eof{e^{i\\xi A_T}}\n\\]\nwhere \\(i = \\sqrt{-1}\\).\n\nCharacteristic function\nThe characteristic function is a way to describe a random variable \\(X\\). The characteristic function,\n\\[\n\\varphi_X(t) = \\Eof{e^{itX}},\n\\]\na function of t, determines the behavior and properties of the probability distribution of \\(X\\). It is equivalent to a probability density function or cumulative distribution function, since knowing one of these functions allows computation of the others, but they provide different insights into the features of the random variable. In particular cases, one or another of these equivalent functions may be easier to represent in terms of simple standard functions."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#paul-lévy",
    "href": "NSD_Lec02-StochCal_Summer2025.html#paul-lévy",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Paul Lévy",
    "text": "Paul Lévy\n\n\n\nCourtesy: Photo from The Oberwolfach Photo Collection.\nRama Cont in an article wrote:\n\n“He made major contributions to the study of Gaussian variables and processes, the law of large numbers, the central limit theorem, stable laws, infinitely divisible laws and pioneered the study of processes with independent and stationary increments, now known as Lévy processes.”\n\nMichael Loeve:\n\n“Paul Lévy was a painter in the probabilistic world. Like the very great painting geniuses, his palette was his own and his paintings transmuted forever our vision of reality… His three main, somewhat overlapping, periods were: the limit laws period, the great period of additive processes and of martingales painted in pathtime colours, and the Brownian pathfinder period.”\n\n\n# The code demonstrate the region enclosed by a 2-dim Brownian \n# motion and the radial cord\n# number of steps \nn_steps = 10_000\n#10_000\n\n# terminal time\nT = 1   \n\ndt = T/n_steps\n\ndW = norm.rvs(size=n_steps)*np.sqrt(dt)\ndZ = norm.rvs(size=n_steps)*np.sqrt(dt)\nW = np.append(0, dW.cumsum())\nZ = np.append(0, dZ.cumsum())\n\nplt.figure(figsize=(10, 6))\nplt.plot(W, Z, lw=1)\nplt.plot([W[-1], W[0]], [Z[-1], Z[0]], 'ro-', lw=1);"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#distribution-of-lévy-area",
    "href": "NSD_Lec02-StochCal_Summer2025.html#distribution-of-lévy-area",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Distribution of Lévy area",
    "text": "Distribution of Lévy area\nFirst notice that \\(A_t\\) is a (continuous, Brownian) martingale with quadratic variation \\([A]_t\\) given by\n\\[\n\\d [A]_t = \\frac14 (W_t^2 + Z_t^2) \\d t\n\\]\nsince \\(W_t\\) and \\(Z_t\\) are independent. Let \\(R_t = W_t^2 + Z_t^2\\). Hence,\n\\[\nA_t \\overset{d}{=} B_{\\frac{1}{4} \\int_0^t R_s \\, \\d s}\n\\]\nwhere \\(B_t\\) is a Brownian motion independent of \\(R_t\\). In other words, \\(A_t\\) is distributed as a Brownian motion running in the random time \\(\\displaystyle \\frac14 \\int_0^t R_s \\d s\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#bessel-squared-process",
    "href": "NSD_Lec02-StochCal_Summer2025.html#bessel-squared-process",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Bessel squared process",
    "text": "Bessel squared process\nNote that, by applying Ito’s formula we obtain that \\(R_t\\) satisfies the SDE\n\\[\\begin{align*}\n\\d R_t &= 2W_t \\d W_t + 2 Z_t \\d Z_t + 2\\d t \\\\\n&= 2 \\sqrt{R_t} \\left( \\frac{W_t}{\\sqrt{R_t}} \\d W_t + \\frac{Z_t}{\\sqrt{R_t}} \\d Z_t \\right) + 2 \\d t \\\\\n&= 2 \\sqrt{R_t} \\d M_t + 2 \\d t,\n\\end{align*}\\]\nwhere \\(\\displaystyle \\d M_t = \\frac{W_t}{\\sqrt{R_t}} \\d W_t + \\frac{Z_t}{\\sqrt{R_t}} \\d Z_t\\) is a Brownian motion.\n\nNote\n\\(R_t\\) is known as the Bessel squared process."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#characteristic-function-of-lévy-area",
    "href": "NSD_Lec02-StochCal_Summer2025.html#characteristic-function-of-lévy-area",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Characteristic function of Lévy area",
    "text": "Characteristic function of Lévy area\nIt follows that the characteristic function \\(A_t\\) is related to the process \\(R_t\\) as\n\\[\\begin{align*}\n& \\Eof{e^{i\\xi A_t}}\n= \\Eof{e^{i\\xi B_{\\frac14 \\int_0^t R_s \\d s}}}\n= \\Eof{e^{\\frac{-\\xi^2}8 \\int_0^t R_s \\d s}}.\n\\end{align*}\\]\nThus, it is equivalent to determine the last expectation in the equation above. To that end, we shall apply the Feynman-Kac formula. Consider\n\\[\nu(t, r) = \\Eof{\\left. e^{-\\frac{\\xi^2}8 \\int_t^T R_s \\d s} \\right| R_t=r}.\n\\]\nFeynman-Kac formula implies that \\(u\\) satisfies the (backward) PDE\n\\[\nu_t + 2 r u_{rr} + 2u_r = \\frac{\\xi^2}8 r u\n\\]\nwith terminal condition \\(u(T, r) = 1\\)."
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#solving-the-terminal-value-problem",
    "href": "NSD_Lec02-StochCal_Summer2025.html#solving-the-terminal-value-problem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Solving the terminal value problem",
    "text": "Solving the terminal value problem\nAssume the ansatz for \\(u\\)\n\\[\nu(t, r) = e^{H_1 r + H_0}.\n\\]\nSince\n\\[\\begin{align*}\n& u_t = \\left(\\dot H_1 r + \\dot H_0\\right)u \\\\\n& u_r = H_1 u \\\\\n& u_{rr} = H_1^2 u,\n\\end{align*}\\]\nplugging the ansatz into the PDE yields\n\\[\\begin{align*}\n& \\left(\\dot H_1 r + \\dot H_0 \\right) + 2 r H_1^2 + 2 H_1 = \\frac{\\xi^2}8 r.\n\\end{align*}\\]\nBy comparing the coefficients we obtain the system of ODEs\n\\[\\begin{align*}\nr &: \\dot H_1 + 2 H_1^2 = \\frac{\\xi^2}8 \\\\\n1 &: \\dot H_0 = -2H_1\n\\end{align*}\\]\nwith terminal conditions \\(H_1(T) = H_0(T) = 0\\). The solution is given by\n\\[\\begin{align*}\n& H_1(t) = -\\frac\\xi4 \\tanh\\left(\\frac\\xi2 (T - t)\\right), \\\\\n& H_0(t) = -\\log\\cosh\\left(\\frac\\xi2(T - t) \\right).\n\\end{align*}\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#characteristic-function-of-lévy-area-1",
    "href": "NSD_Lec02-StochCal_Summer2025.html#characteristic-function-of-lévy-area-1",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Characteristic function of Lévy area",
    "text": "Characteristic function of Lévy area\nThus,\n\\[\\begin{align*}\nu(t, r) &= e^{-\\frac\\xi4 \\tanh\\left(\\frac\\xi2 (T - t)\\right)r - \\log\\cosh\\left(\\frac\\xi2(T - t)\\right)} \\\\\n&= {\\rm sech}\\left(\\frac\\xi2(T - t)\\right) e^{-\\frac\\xi4 \\tanh\\left(\\frac\\xi2 (T - t)\\right)r}\n\\end{align*}\\]\nFinally, we obtain the characteristic function of \\(A_T\\) as\n\\[\n\\Eof{e^{i\\xi A_T}} = u(0, 0) = {\\rm sech}\\left(\\frac\\xi2 T\\right).\n\\]"
  },
  {
    "objectID": "NSD_Lec02-StochCal_Summer2025.html#notes-of-the-lecture",
    "href": "NSD_Lec02-StochCal_Summer2025.html#notes-of-the-lecture",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Notes of the Lecture",
    "text": "Notes of the Lecture\nThanks to 刘弘锌 (Liú Hóng Xīn) for his lecture notes.\n\n核心概念: 随机积分 vs. 经典积分\n\n问题背景\n\n在金融中, 计算资产价格路径的积分(如 PNL)需考虑随机性(如布朗运动).\n经典黎曼积分中, 选择左端点、右端点或中点不影响收敛结果; 但在随机积分中, 选择不同会导致本质差异.\n\n\n注: 资产价格路径(Asset Price Path):\n\n这是指某个资产(如股票、期权、债券)在一段时间内的价格变化轨迹;\n它通常被建模为一个随机过程, 因为未来价格存在不确定性;\n一般用 \\(S_t\\) 表示表示某资产在时间 \\(t\\) 的价格.\n\n注: PNL (Profit and Loss):\n\nPNL 是指某个投资组合或交易策略在一段时间内的利润和损失;\nPNL 可以表达为投资组合价值的变化 \\[\n\\text{PNL} = \\int_0^T \\phi_t \\d S_t,\n\\] 其中 \\(\\phi_t\\) 是持仓(投资组合中持有的资产数量), \\(S_t\\) 是资产价格.\n\n\n离散时间交易策略类比\n\n我们设时间点为 \\(T_0, T_1, T_2, ...\\), 价格 \\(P_0, P_1, P_2, ...\\), 时间间隔 \\(\\Delta t_i = T_i - T_{i-1}\\).\n积分定义方式:\n\n左端点规则(Left Point Rule): \\[\n\\int_{T_0}^{T_n} P_t \\d t \\approx \\sum_{i=1}^n P_{i-1} \\Delta t_i.\n\\] 金融意义: 在 \\(T_{i-1}\\) 时刻, 根据当前已知价格 \\(P_{i-1}\\) 决定持仓量.\n右端点规则(Right Point Rule): \\[\n   \\int_{T_0}^{T_n} P_t \\d t \\approx \\sum_{i=1}^n P_i \\Delta t_i.\n   \\] 金融意义: 在 \\(T_{i-1}\\) 时刻, 根据未来价格 \\(P_i\\) 决定持仓量. 现实中不可行.\n中点规则(Mid Point Rule): \\[\n   \\int_{T_0}^{T_n} P_t \\d t \\approx \\sum_{i=1}^n P_{i-1/2} \\Delta t_i,\n   \\] 其中 \\(\\displaystyle P_{i-1/2} = \\frac{P_{i-1} + P_i}{2}\\).\n\n\n关键结论: 随机积分必须固定选择左端点\n\n金融逻辑: 交易决策只能基于当前已知信息(历史价格), 无法依赖未来价格.\n数学逻辑: 右端点或中点规则会导致结果发散, 无法收敛到一致解. Refer to Which rule rules?.\n\n\n\n\nItô 积分的金融意义\n\nItô 积分的必要性: 在资产定价中(如期权模型), 必须使用 Itô 积分以保证:\n\n交易策略可执行(无未来信息);\n结果符合无套利原则(鞅性质). Refer to Technical note: martingale conditions.\n\nItô 引理的根源: 经典链式法则在随机过程中失效, \\(\\d (P_t^2) \\neq 2 P_t \\d P_t\\), 实际上为: \\[\n\\d (P_t^2) 2 P_t \\d P_t + (\\d P_t)^2,\n\\] 额外项 \\((\\d P_t)^2\\) 来自二次变差. Refer to Ito’s formula for Brownian motion.\n\n\n\nItô 过程的本质与金融建模\n定义: \\[\n\\d X_t = \\sigma_t \\d B_t + b_t \\d t.\n\\]\n\n扩散项 \\(\\sigma_t \\d B_t\\) 代表随机波动, 如资产价格的随机性.\n漂移项 \\(b_t \\d t\\) 代表趋势或漂移, 如资产价格的长期增长趋势.\n\n关键性质: \\[\n\\d [X]_t = \\sigma_t^2 \\d t.\n\\]\n\n物理意义: 路径累积波动率.\n金融意义: 期权定价中的波动率参数 (如 VIX 指数).\n实际上在 \\(\\displaystyle \\frac{\\d S_t}{S_t} = \\mu \\d t + \\sigma \\d B_t\\) 模型中, \\(\\sigma\\) 就是波动率.\n\n注: VIX 指数 (恐慌指数, Volatility Index) 是衡量市场预期波动率的指标, 通常用于期权定价和风险管理.\n\n\n\n\n\n\n\n\n过程\n随机微分方程\n金融应用\n\n\n\n\n几何布朗运动\n\\(\\d S_t = \\mu S_t \\d t + \\sigma S_t \\d B_t\\)\n股票价格 (Black-Scholes)\n\n\nOrnstein-Uhlenbeck\n\\(\\d X_t = \\lambda (\\theta - X_t)\\d t + \\sigma \\d B_t\\)\n利率模型 (Vasicek)\n\n\n\n\n\nItô 公式的金融直觉\n公式: \\[\\begin{align*}\n\\d f(t, X_t) &= f_t(t, X_t) \\d t + f_x(t, X_t) \\d X_t + \\frac{1}{2} f_{xx}(t, X_t) (\\d X_t)^2 \\\\\n&= f_t(t, X_t) \\d t + f_x(t, X_t) (\\sigma_t \\d B_t + b_t \\d t) + \\frac{1}{2} f_{xx}(t, X_t) \\sigma_t^2 \\d t.\n\\end{align*}\\]\n\n新漂移项: \\[f_t + b_t f_x + \\frac{1}{2} \\sigma^2 f_{xx}\\] 代表了时间变化、漂移和波动率对函数 \\(f\\) 的影响.\n新扩散项​: \\[f_x \\sigma_t \\d B_t\\] 代表了随机波动对函数 \\(f\\) 的影响. (风险暴露)\n\n\\[\n\\d f(t, X_t) = \\underbrace{\\left( f_t + b_t f_x + \\frac{1}{2} \\sigma_t^2 f_{xx} \\right)}_{\\text{确定性变化(漂移项)}} \\d t\n+ \\underbrace{f_x \\sigma_t}_{\\text{风险暴露}} \\d B_t\n\\]\n\nExample: 期权价格对股票价格\n设 \\(X_t = S_t\\) 是股票价格, \\(f(t, S_t)\\) 是欧式看涨期权的价格(如 Black-Scholes 期权价值):\n\n\\(\\displaystyle f_x = \\frac{\\partial f}{\\partial S}\\) 是期权对标的资产价格的敏感度，叫作 Delta;\n\\(\\sigma \\d B_t\\)：标的资产的波动部分;\n\n那么期权价格的随机波动项就是:\n\\[\n\\underbrace{f_x}_{\\Delta} \\cdot \\underbrace{\\sigma \\d B_t}_{\\text{股票的风险}}\n\\quad = \\quad \\text{期权的风险暴露}\n\\]\n\n\n\n\n\n\n\n\n\n概念\n数学形式\n金融意义\n解释\n\n\n\n\nWiener 积分\n\\(\\displaystyle \\int_0^T f(t) \\, \\d B_t\\)\n确定性策略的噪声暴露\n表示一个固定策略 \\(f(t)\\) 在布朗运动下受到的总“扰动影响”.这衡量了非自适应投资策略对市场波动的累计敏感度.\n\n\nItô 积分\n\\(\\displaystyle \\int_0^T \\phi_t \\, \\d X_t\\)\n动态策略的盈亏分解\n自适应策略 \\(\\phi_t\\) 持有某资产 \\(X_t\\), 这个积分即为投资策略的 PNL (收益), 是对金融交易最基本的建模方式.\n\n\nItô 过程\n\\(\\d X_t = \\sigma_t \\, \\d B_t + b_t \\, \\d t\\)\n资产价格的趋势-噪声分离模型\n描述资产价格如何受到系统性趋势 (\\(b_t\\)) 和不确定波动 (\\(\\sigma_t\\)) 的共同影响.\n\n\nItô 公式\n\\(\\d f = (\\cdots)\\, \\d t + (\\cdots) \\, \\d B_t\\)\n衍生品价值的风险-收益分解\n当 \\(f(t, X_t)\\) 是某种金融产品价值函数时, Itô 公式将其变动拆解为确定性收益和风险暴露两个部分, 体现风险定价的核心机制.\n\n\n\n\n\n\n股票价格的随机模型\n股票价格 \\(S_t\\) 被建模为随机过程: \\[\n\\d S_t = \\mu S_t \\d t + \\sigma S_t \\d B_t,\n\\] 其中:\n\n漂移项 \\(\\mu S_t \\d t\\) 代表预期回报率 (Expected Return Rate);\n扩散项 \\(\\sigma S_t \\d B_t\\) 代表随机波动 (Volatility).\n金融意义: 股票价格的动态变化由确定的预期回报和随机风险组成.\n\n假设我们有一个函数 \\(f(S_t,t)\\) 光滑, 那么根据 Itô 公式: \\[\n\\d f = \\left( \\frac{\\partial f}{\\partial t} + \\mu S_t \\frac{\\partial f}{\\partial S} + \\frac{1}{2} \\sigma^2 S_t^2 \\frac{\\partial^2 f}{\\partial S^2} \\right) \\d t + \\sigma S_t \\frac{\\partial f}{\\partial S} \\d B_t.\n\\]\n\n核心思想: 将复杂函数的动态分解为漂移项(预期回报)和扩散项(风险).\n用于衍生品 (如期权、远期合约) 的定价与风险管理.\n推导期权的 Delta (\\(\\displaystyle \\Delta = \\frac{\\partial f}{\\partial S}\\)) 和 Gamma (\\(\\displaystyle \\Gamma = \\frac{\\partial^2 f}{\\partial S^2}\\)).\n\n\n\n金融衍生品定价示例\n案例 1: 远期合约 (Forward Contract) 合约约定在时间 \\(T\\) 支付 \\(2S_T\\), 其价值为 \\(V_t = 2 S_t\\).\n\\[\n\\d V_t = 2 \\d S_t = 2 \\mu S_t \\d t + 2 \\sigma S_t \\d B_t.\n\\]\n案例 2: 欧式看涨期权 (European Call Option) 其价值为 \\(C(t, S_t) = S_t N(d_1) - K e^{-r(T-t)} N(d_2)\\), 其中 \\(K\\) 是行权价, \\(r\\) 是无风险利率.\n\n\n风险中性定价\n在风险中性世界中, 所有的资产的预期回报率等于无风险利率 \\(r\\).\n衍生品定价公式: \\[\nV_t = \\mathbb{E}^Q\\left[{e^{-r(T-t)}\\cdot \\text{Payoff}(S_T) | \\cF_t}\\right],\n\\] 这里的 \\(\\mathbb{E}^Q\\) 是风险中性测度下的期望值.\n\n\nOption Payoff\nAn option payoff diagram is a graphical representation of the net Profit/Loss made by the option buyers and sellers.\nCall Option: 自身有一个价格, 设为 \\(p\\); 同时买方拥有在到期日之前 (或到期时) 以行权价 \\(K\\) 买入标的资产的权利, 但没有义务 购买. 若到期时标的 \\(S &gt; K\\), 则有盈余, 等于 \\(S−K\\), 扣除买入时的溢价后才是真正盈利, 为 \\(S- K -p\\); 若 \\(S \\leq K\\), 选择不行权, 损失仅限于初始溢价 \\(p\\).\nPut Option: 同样有一个价格, 设为 \\(p\\); 买方拥有在到期日之前 (或到期时) 以行权价 \\(K\\) 卖出标的资产的权利, 但没有义务卖出. 若到期时标的 \\(S &lt; K\\), 则有盈余, 等于 \\(K−S\\), 扣除买入时的溢价后才是真正盈利, 为 \\(K - S - p\\); 若 \\(S \\geq K\\), 选择不行权, 损失仅限于初始溢价 \\(p\\).\n我们有一些 option 的 Strategy:\n\nLong Call: 买入看涨期权, 预期标的价格上涨.\nShort Call: 卖出看涨期权, 预期标的价格下跌或持平.\nLong Put: 买入看跌期权, 预期标的价格下跌.\nShort Put: 卖出看跌期权, 预期标的价格上涨或持平.\nLong Straddle: 同时买入看涨和看跌期权, 预期标的价格大幅波动.\nShort Straddle: 同时卖出看涨和看跌期权, 预期标的价格稳定.\nLong Strangle: 买入不同行权价的看涨和看跌期权, 预期标的价格大幅波动. Long strangles involve buying a call with a higher strike price and buying a put with a lower strike price.\nShort Strangle: 卖出不同行权价的看涨和看跌期权, 预期标的价格稳定."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Topics in QF",
    "section": "",
    "text": "Here are the Topics in Quantitative Finance slides.\n\nLec 01 Financial Engineering\nLec 02 Stochastic Calculus\nLec 03 Black-Scholes Model I\nLec 04 Black-Scholes Model II\nLec 05 Volatility\nLec 06 Optimal Order Execution"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\def\\Cov{{ \\mbox{Cov} }}\n\\def\\Var{{ \\mbox{Var} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\newcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\mbox{tr}}\n\\]"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#lecture-1-financial-engineering-in-a-nutshell",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#lecture-1-financial-engineering-in-a-nutshell",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\def\\Cov{{ \\mbox{Cov} }}\n\\def\\Var{{ \\mbox{Var} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\newcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\mbox{tr}}\n\\]"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#coordinates",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#coordinates",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Coordinates",
    "text": "Coordinates\n\nEmail: tai-ho.wang@baruch.cuny.edu\nWebpage: mfe.baruch.cuny.edu/tai-ho.wang"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#teaching-assistants",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#teaching-assistants",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Teaching Assistants",
    "text": "Teaching Assistants\n丁宏骏\n\n北大计算机本科毕\nBaruch MFE 2025 incoming student\nEmail: dinghongjun@stu.pku.edu.cn\n\n李新宇\n\n北大数院直博\nEmail: xinyu911@stu.pku.edu.cn"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#aims-of-this-course",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#aims-of-this-course",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Aims of this course",
    "text": "Aims of this course\n\nTo be familiar with the financial products and the modeling of their prices\nTo be familiar with well-known pricing models.\nTo be familiar with the principle of no arbitrage and its applications\nTo gain exposure to automated market making in decentralized exchange\nTo grasp theories of probability and statistics underpinning the models\nTo gain experiences in working with Jupyter notebook and programming in python"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#agenda",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#agenda",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Agenda",
    "text": "Agenda\n\nFinancial market and financial product\nWhat is financial engineering?\n\\(\\mathbb{P}\\) quant v.s. \\(\\mathbb{Q}\\) quant\nTheory of pricing\n\nLaw of one price\nMonotonicity\nLinearity\n\nPrinciple of no arbitrage\nDecentralized finance (DeFi) and automated market making (AMM)\nBrief introduction to Jupyter notebook and programming in python"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#online-resources",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#online-resources",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Online resources",
    "text": "Online resources\n\nInvestopedia\nWikipedia\nAdvanced Risk and Portfolio Management\n\n \n\nFinancial Markets and Financial Productions"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#financial-market",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#financial-market",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Financial market",
    "text": "Financial market\nQuotes from Investopedia:\n\nA financial market is a broad term describing any marketplace where buyers and sellers participate in the trade of assets such as equities, bonds, currencies and derivatives. Financial markets are typically defined by having transparent pricing, basic regulations on trading, costs and fees, and market forces determining the prices of securities that trade.\n\n注:\n\nequities: 股票\nbonds: 债券\ncurrencies: 货币\nderivatives: 衍生品\n\nTypes of financial markets and their roles\n\nCaptial market\n\nbond market\nequity market\n\nDerivative market\nForEx (foreign exchange) and interbank market\nPrimary vs secondary market\n\nA primary market issues new securities on an exchange.\nThe secondary market is where investors purchase securities or assets from other investors, rather than from issuing companies themselves.\n\nOTC (over-the-counter) market\nThird and fourth market\nDecentralized Exchanges (DeExs)\n\nFor more details, visit Types of Financial Markets and their roles at Investopedia.\n注:\n\n一级市场, 又称发行市场, 初级市场 (Primary Market) 是处理新发行证券的金融市场, 筹集资金的公司, 政府或公共部门通过发行新的股票和债券来进行融资.\n二级市场 (Secondary Market) 是买卖已经上市公司股票的资本市场. 二级市场可为金融商品的最初投资者提供资金的流动性. 一级市场和二级市场通过证券交易所进行联系.\n股票交易属于场内交易, 也就是交易所交易, 因为所有交易是发生在固定的证券交易所, 有固定的交易时间和合约标准.\n然而, 还有另一个系统, 这就是场外交易市场, 它的交易是由“经纪商” (称为做市商) 促成的, 他们提供金融产品的买卖价格, 有效地确定资产的价格. 现在已经基本上不存在了.\n第三市场是指原来在证交所上市的股票移到以场外进行交易而形成的市场.\n第四市场指许多机构大投资者, 进行上市股票和其他证券的交易, 完全撇开经纪商和交易所, 直接与对方联系, 采用这种方式进行证券交易, 形成了第四市场.\n\nWe will only cover the equity market and the liquidity pools in DeExs."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#financial-products",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#financial-products",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Financial products",
    "text": "Financial products\n\nPrimary or underlying\n\nEquity\nFixed income\nCommodity\nCredit\nCryptocurrency or token\n\nSecondary or derivatives\n\nForward (远期合约) and futures (期货)\nOptions (期权)\nSwaps (互换合约)\n\n\n注:\n\n远期合约: 约定在未来某一特定日期以今天商定的价格买入或卖出某种资产.\n期货: 约定在未来某一特定日期以今天商定的价格买入或卖出某种资产, 但与远期合约不同的是, 期货合约是标准化的, 在交易所交易.\n期权给予持有者权利而非义务, 在未来某个时间以预先确定的价格购买 (看涨期权, Call Option) 或出售 (看跌期权, Put Option) 一定数量的资产.\n期权持有人支付一笔期权费 (Premium) 给期权卖方, 以换取这种选择权.\n如果市场价格不利于期权持有人, 则可以选择不行使期权, 最大损失为已支付的期权费.\n互换是一种协议, 其中两方同意在未来的一段时间内交换一系列现金流.\n\n \n\nFinancial Engineering and Quantitative Finance"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#what-is-financial-engineering",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#what-is-financial-engineering",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "What is financial engineering?",
    "text": "What is financial engineering?\nAccording to this article in the website of International Association for Quantitative Finance (IAQF) (used to be named as IAFE), financial engineering is\n\nthe application of mathematical methods to the solution of problems in finance\nalso known as financial mathematics, mathematical finance, and computational finance\n\nTherefore,\n\nFinancial engineering draws on tools from applied mathematics, computer science, statistics, and economic theory.\nInvestment banks, commercial banks, hedge funds, insurance companies, corporate treasuries, and regulatory agencies employ financial engineers.\nThese businesses apply the methods of financial engineering to problems such as new product development, derivative securities valuation, portfolio structuring, risk management, and scenario simulation."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#what-is-financial-engineering-for",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#what-is-financial-engineering-for",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "What is financial engineering for?",
    "text": "What is financial engineering for?\n\nDerivative pricing\nPortfolio construction\nRisk management\nQuantitative trading\nMarket making and liquidity provision\nOrder implementation\n\nWe shall mostly focus on the pricing of derivatives based on the principle of no arbitrage.\nAs pricing is concerned, in financial engineering we usually consider the following types of problems:\n\ndirect problem: under a given model for the underlying, calculate the prices of its derivatives\ninverse problem: for a given set of prices of liquidly derivatives, determine the parameters or even a model that generates the observed market prices."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#what-skills-are-required-to-be-a-financial-engineer",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#what-skills-are-required-to-be-a-financial-engineer",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "What skills are required to be a financial engineer?",
    "text": "What skills are required to be a financial engineer?\nQuantitative finance is an interdisciplinary field, it requires hard skills in\n\nMath: calculus, linear algebra, probability, stochastic process, differential equation, optimization, etc\nFinance: derivative pricing theory, modern portfolio theory, market microstructure models\nStatistics: regression and classification, factor analysis, time series analysis\nProgramming: R, Python, C++, Matlab, etc\n\nNowadays also requires\n\nmachine learning techniques\nsentiment analysis"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#quantitative-analyst---quant",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#quantitative-analyst---quant",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Quantitative analyst - Quant",
    "text": "Quantitative analyst - Quant\nExcerpt from Quants: The Rocket Scientists of Wall Street in Investopedia,\n\nAs financial securities become increasingly complex, demand has grown steadily for people who not only understand the complex mathematical models that price these securities, but who are able to enhance them to generate profits and reduce risk. These individuals are known as quantitative analysts, or simply “quants.”\n\nQuantitative analysts\n\ndesign and implement complex models that allow financial firms to price and trade securities\nfront desk quants work directly with traders, providing them with pricing or trading tools\nback office quants validate the models, conduct research and create new strategies\npositions are found almost exclusively in major financial centers with trading operations"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#mathbbp-quant-v.s.-mathbbq-quant",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#mathbbp-quant-v.s.-mathbbq-quant",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "\\(\\mathbb{P}\\) quant v.s. \\(\\mathbb{Q}\\) quant",
    "text": "\\(\\mathbb{P}\\) quant v.s. \\(\\mathbb{Q}\\) quant\nQuants are briefly categorized as \\(\\mathbb{P}\\) quants and \\(\\mathbb{Q}\\) quants.\n\n\\(\\mathbb{P}\\) refers to the physical measure under which the financial assets presumably evolves.\n\\(\\mathbb{Q}\\) refers to the risk neutral measure for pricing under the principle of no arbitrage.\n\nThe mentality behind \\(\\mathbb P\\) quant and the buy side is\n\nRegard the market as a whole, process historical data then forecast price movements\nConstruct portfolio or investment strategy based on performance measures\nDecide the horizon of holding the portfolio\nRisk management\n\nThe mentality behind \\(\\mathbb Q\\) quant and the sell side is\n\nConstruct model that could possibly explain the market\nCalibrate parameters of model to market data\nApply the calibrated model to price new derivatives\nHedging\n\n\nNote\n\nIn this course, we shall cover topics on both sides, though not evenly.\nPlease refer to this link in ARPM.co for more details on the interplay between \\(\\mathbb P\\) quants and \\(\\mathbb Q\\) quants.\n\\(\\PP\\) quant (Physical Probability Measure Quantitative Analyst, 物理测度下的量化分析) 关注的是资产在现实世界概率测度 (记作 \\(\\PP\\)) 下的行为, 他们试图理解和预测市场的真实运动. 在买方 (buy side), 预测真实市场的价格走势、风险评估等.\nE.g., Alibaba 的股票在涨, 你没有预测到, 却卖出了它.\n\\(\\QQ\\) quant (Risk-Neutral Probability Measure Quantitative Analyst, 风险中性测度下的量化分析) 关注的是在风险中性测度 (记作 \\(\\QQ\\)) 下的资产价格行为. 在这个虚拟的概率空间下, 所有资产的期望收益率等于无风险利率.\n在卖方 (sell side), 正确定价衍生品、避免套利."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#theory-of-asset-pricing",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#theory-of-asset-pricing",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Theory of asset pricing",
    "text": "Theory of asset pricing\nHeuristically, pricing is a rule or a map that assigns a (unique, current) value to each (random) payoff/cashflow which can only be realized at the future investment horizon. The collection/universe of all the payoffs at the investment horizon is assumed to be equipped with a vector space structure. In other words, we would be able to add or subtract a payoff from another, and also be able to scale up or down by any (real, positive or negative) scalar. Thus, we can regard pricing as a function or a functional \\(\\Pi\\) from the space of (random) payoffs to real numbers:\n\\[\n\\Pi : \\mathcal P \\to \\R,\n\\]\nwhere \\(\\mathcal P\\) is space of payoffs at investment horizon.\nA pricing functional \\(\\Pi\\) presumably bears the following axioms\n\nLaw of one price\nMonotonicity\nLinearity\n\nBy essentially the Riesz representation theorem, a pricing function/functional, should it exist, can be characterized by the expectation of a (random) payoff weighted by a stochastic discount factor.\nThe price of any asset in the universe is given by the an expectation of discounted payoff discounted by a stochastic discount factor.\n\nNote\nIn this course we shall explore the modeling of the pricing functional."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#law-of-one-price",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#law-of-one-price",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Law of one price",
    "text": "Law of one price\nTwo payoffs with equal values in all scenarios must have the same price."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#monotonicity",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#monotonicity",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Monotonicity",
    "text": "Monotonicity\nIf the payoff \\(X\\) dominates the payoff \\(Y\\), i.e., \\(X &gt; Y\\) in any scenario, then the price of \\(X\\) must be higher than that of \\(Y\\)."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#linearity",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#linearity",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Linearity",
    "text": "Linearity\nThe price of linear combination of the payoffs \\(X\\) and \\(Y\\) is the same linear combination of the price of \\(X\\) and \\(Y\\). That is,\n\\[\n\\Pi(\\alpha X + \\beta Y) = \\alpha \\Pi(X) + \\beta \\Pi(Y)\n\\]\nIf the pricing function/functional satisfies the axioms, it can be represented as a discounted expectation. Precisely, for a given payoff \\(X\\), its price is given by\n\\[\n\\Pi(X) = \\Eof{D X}\n\\]\nwhere \\(D\\) is a (positive) random variable called stochastic discount factor.\n\nNote\nThe \\(\\Eof{D}\\) is the price of zero coupon bond since, the payoff of zero coupon bond of face value 1 is \\(X \\equiv 1\\)."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#principle-of-no-arbitrage",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#principle-of-no-arbitrage",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Principle of no arbitrage",
    "text": "Principle of no arbitrage\n\nArbitrage opportunity\nIntuitively, an arbitrage opportunity is a trade or a trading strategy that have positive payoff at the investment horizon with zero cost currently. In other words, we are able to acquire a financial position, be statically or dynamically, without being required to pay initially for entering the position.\nAny viable financial model should not permit arbitrage opportunity.\nIn reality, arbitrage opportunity does exist. However, it disappears very quickly even much quicker now due to the advent of technology, since once it is exploited, sophisticated market participants will quickly take the advantage of it, then the market reacts to it so as to reach a new status without arbitrage opportunity.\nPrinciple of no arbitrage is the core behind the theory of derivative pricing."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#fundamental-theorem-of-asset-pricing",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#fundamental-theorem-of-asset-pricing",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Fundamental theorem of asset pricing",
    "text": "Fundamental theorem of asset pricing\nExplanations from Wikipedia.\n\nThe fundamental theorems of asset pricing (also: of arbitrage, of finance) provide necessary and sufficient conditions for a market to be arbitrage free and for a market to be complete.\n\nTo be more specific,\nIn a discrete (i.e. finite state) market, the following hold:\n\nThe First Fundamental Theorem of Asset Pricing\nA discrete market, on a discrete probability space \\((\\Omega, \\cF, \\PP)\\), is arbitrage-free if and only if there exists at least one risk neutral probability measure that is equivalent to the original probability measure, \\(\\PP\\).\n\n\nThe Second Fundamental Theorem of Asset Pricing\nAn arbitrage-free market \\((S, B)\\) consisting of a collection of stocks \\(S\\) and a risk-free bond \\(B\\) is complete if and only if there exists a unique risk-neutral measure that is equivalent to \\(\\PP\\) and has numeraire \\(B\\).\n \n\nDecentralized Finance and Automated Market Making"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#decentralized-finance-defi",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#decentralized-finance-defi",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Decentralized Finance (DeFi)",
    "text": "Decentralized Finance (DeFi)\nQuotes from the Investopeida page:\n\n\nWhat is DeFi ?\n\nan emerging peer-to-peer financial system that uses blockchain and cryptocurrencies to allow people, businesses, or other entities to transact directly with each other.\nThe key principle behind DeFi is to remove third parties like banks from the financial system, thereby reducing costs and transaction times.\nIn the U.S., the Federal Reserve and Securities and Exchange Commission (SEC) define the rules for centralized financial institutions like banks and brokerages, which consumers rely on to access capital and financial services directly.\nDeFi challenges this centralized financial system by empowering individuals with peer-to-peer transactions.\n\nHow does DeFi work?\n\nThrough peer-to-peer financial networks, DeFi uses security protocols, connectivity, software, and hardware advancements.\nThis system eliminates intermediaries like banks and other financial service companies. These companies charge businesses and customers for using their services, which are necessary in the current system because it’s the only way to make it work.\nDeFi uses blockchain technology to reduce the need for these intermediaries."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#decentralized-finance-uses",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#decentralized-finance-uses",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Decentralized Finance Uses",
    "text": "Decentralized Finance Uses\nQuotes from the same Investopeida page:\n\nDecentralized finance, originally conceived of as a way to bring financial services like loans and banking to those who don’t have access to them, has morphed into an industry where you can take part in many different sectors or endeavors. Here are a few of the most popular:\n\nDecentralized exchanges: The top preference for defi app users is accessing decentralized exchanges. Exchanges like Uniswap and PancakeSwap have apps that let you interact with other cryptocurrency users.\nLiquidity providers: Liquidity is the ability to sell assets quickly, a problem many cryptocurrency users have encountered. Liquidity providers are generally pools where users place funds (coins or tokens) so exchanges can provide selling (trading) opportunities for their users.\nLending/Yield Farming: There are hundreds of defi apps available that provide lending. Generally, they operate the same way as a liquidity pool, where users lock their funds in a pool and let others borrow them, receiving interest on their loans—called yield farming. Many provide flash loans, where no collateral is required from the borrower.\nGambling/Prediction Markets: Everyday, millions of dollars in cryptocurrency are used in DeFi gambling and prediction apps like Polymarket, ZKasino, Horse Racing Slot Keno Roulett, Azuro, and JuicyBet. Prediction markets are platforms that let you place bets on the outcome of nearly any event.\nNFTs: The market for non-fungible tokens has cooled somewhat, but they are still popular with niche investors and collectors."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#automated-market-making",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#automated-market-making",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Automated Market Making",
    "text": "Automated Market Making\n\nAutomatic Market Makers (AMMs) are\n\nAlgorithms that power decentralized exchanges (DEXs).\nReplace traditional order books with liquidity pools.\nUse mathematical formulas to determine asset prices.\n\n\n\nHow AMMs Work\n\nUsers provide liquidity (crypto assets) to pools.\nTraders swap directly with the pool’s assets.\nPrices are determined by the ratio of assets within the pool.\nKey Benefits\n\nPermissionless: Anyone can trade or provide liquidity.\nAutomated: No middlemen or order books needed.\nAlways Available: 24/7 trading, regardless of market conditions."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#amm-vs-clob",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#amm-vs-clob",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "AMM vs CLOB",
    "text": "AMM vs CLOB\n\nAutomated market making are innovative solutions to the problems of decentralized exchanges. In the years prior to the implementation of AMMs, developers implemented Decentralized Exchanges (DEXs) by replicating traditional central limit order books (CLOB) used by centralized exchanges.\nThe result was excessive network transaction fees and high latency due to the difficulty in managing and maintaining a huge amount of transactions on the chain. Fortunately, the implementation of AMMs solved the problems of excessive fees and low liquidity."
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#amm-vs-clob-1",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#amm-vs-clob-1",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "AMM vs CLOB",
    "text": "AMM vs CLOB\nCompared to CLOBs, AMMs offer some advantages. - Efficient computation. They have minimal storage needs, and matching computations can be done quickly, typically via constant-time closed-from algebraic computations. - In a CLOB, on the other hand, matching engine calculations may involve complex data structures and computations that scale with the number of orders. Thus AMMs are uniquely suited to the severely computation- and storage-constrained environment of the blockchain.\n\nCLOBs are not well-suited to a long-tail of illiquid assets. This is because they require the participation of active market markers. In contrast, AMMs mainly rely on passive liquidity providers (LPs).\n\n \n\nBrief Introduction to Jupyter and Python"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#brief-introduction-to-jupyter-notebook-and-python",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#brief-introduction-to-jupyter-notebook-and-python",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Brief introduction to Jupyter notebook and Python",
    "text": "Brief introduction to Jupyter notebook and Python\nOnline resources\n\nJupyter notebook and Jupyter lab\nPython documentation\nNumpy\nScipy\nPandas\n\n\n78+12\n\n90\n\n\nFor example, this is a markdown cell.\nLet’s have some fun.\nwelcome to beijing\n\n78\n\n78\n\n\n\n# And this is a code cell"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#head-2",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#head-2",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Head 2",
    "text": "Head 2\n\nHead 3\n\nHead 4\nLaTex we can try to type \\(\\log x \\times \\cos y\\)\nTest on integral\n\\[ \\int_{-\\infty}^\\infty e^{-\\frac{x^2}2} {\\rm d}x = \\sqrt{2\\pi}.\\]\nThis is an example for sum of an infinite series, the Riemann zeta function.\n\\[\n\\zeta(2) = \\sum_{n=1}^\\infty \\frac1{n^2} = 1 + \\frac1{2^2} + \\frac1{3^2} + \\cdots + \\frac1{n^2} + \\cdots = \\frac{\\pi^2}6\n\\]\n\nimport seaborn as sns\nimport numpy as np\n\n\n# install modules if necessary\n# pip install pandas\n# pip install seaborn\n\n\nnp.exp(1)\n\nnp.float64(2.718281828459045)\n\n\n\nimport numpy as np\n\n\nnp.exp(1), np.log(np.exp(1))\n\n(np.float64(2.718281828459045), np.float64(1.0))\n\n\n\nfrom numpy import exp\n\n\nexp(1), np.exp(1)\n\n(np.float64(2.718281828459045), np.float64(2.718281828459045))\n\n\n\n# import modules that will be commonly used in the course\nimport numpy as np \nimport matplotlib.pyplot as plt\nfrom numpy import exp, log, sqrt\nimport pandas as pd\nfrom scipy.stats import norm, t\nimport scipy.stats as ss\nimport seaborn as sns\n\n\nexp(0), np.exp(0)\n\n(np.float64(1.0), np.float64(1.0))\n\n\n\nx=6\nx\n\n6\n\n\n\n# list\ntickers = ['aapl', 'goog', 'spx']\n\n# tuple\nprices = (140, 600, 4500)\n\n# dict/dictionary\nstocks = {'ticker': tickers, 'price': prices}\nstocks\n\n{'ticker': ['aapl', 'goog', 'spx'], 'price': (140, 600, 4500)}\n\n\n\nstocks['ticker'], stocks['price']\n\n(['aapl', 'goog', 'spx'], (140, 600, 4500))\n\n\n\n# present data as a pandas.DataFrame\ndf = pd.DataFrame({'ticker': tickers, 'price': prices})\ndf\n\n\n\n\n\n\n\n\nticker\nprice\n\n\n\n\n0\naapl\n140\n\n\n1\ngoog\n600\n\n\n2\nspx\n4500\n\n\n\n\n\n\n\n\n# add a column to pandas.DataFrame\ndf['index'] = (6, 8, 9)\ndf\n\n\n\n\n\n\n\n\nticker\nprice\nindex\n\n\n\n\n0\naapl\n140\n6\n\n\n1\ngoog\n600\n8\n\n\n2\nspx\n4500\n9\n\n\n\n\n\n\n\n\n# concatenate lists\ntaiho = [3, 2, 'this is a string']\nprint(taiho)\ntaiho += [90]\nprint(taiho)\nprint(['bye'] + taiho + ['hello'])\n\n[3, 2, 'this is a string']\n[3, 2, 'this is a string', 90]\n['bye', 3, 2, 'this is a string', 90, 'hello']\n\n\n\nnp.identity(3)\n\narray([[1., 0., 0.],\n       [0., 1., 0.],\n       [0., 0., 1.]])\n\n\n\n# matrix mulplications\nA = np.identity(4)\n#A\nprint(A)\nprint(2*A) \n2*A + 1\n\n[[1. 0. 0. 0.]\n [0. 1. 0. 0.]\n [0. 0. 1. 0.]\n [0. 0. 0. 1.]]\n[[2. 0. 0. 0.]\n [0. 2. 0. 0.]\n [0. 0. 2. 0.]\n [0. 0. 0. 2.]]\n\n\narray([[3., 1., 1., 1.],\n       [1., 3., 1., 1.],\n       [1., 1., 3., 1.],\n       [1., 1., 1., 3.]])\n\n\n\nB = [1, 2, 3]\nc = [4, 5, 6]\nprint(B + c)\nnp.array(B) + np.array(c)\n\n[1, 2, 3, 4, 5, 6]\n\n\narray([5, 7, 9])\n\n\n\nf = lambda x: 2*x**2 + 1\n[f(i) for i in range(9)]\n\n[1, 3, 9, 19, 33, 51, 73, 99, 129]\n\n\n\nf(np.arange(9))\n\narray([  1,   3,   9,  19,  33,  51,  73,  99, 129])\n\n\n\nnp.linspace(0, 1, 10)\n\narray([0.        , 0.11111111, 0.22222222, 0.33333333, 0.44444444,\n       0.55555556, 0.66666667, 0.77777778, 0.88888889, 1.        ])\n\n\n\nnp.arange(0, 1, 0.1)\n\narray([0. , 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9])\n\n\n\nB = np.arange(16)\nprint(B)\nB = np.arange(16).reshape(4, 4)\nB\n\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15]\n\n\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15]])\n\n\n\nA, B\n\n(array([[1., 0., 0., 0.],\n        [0., 1., 0., 0.],\n        [0., 0., 1., 0.],\n        [0., 0., 0., 1.]]),\n array([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11],\n        [12, 13, 14, 15]]))\n\n\n\nd = np.array([3, 1, 4])\n\n\nA, d\n\n(array([[1., 0., 0., 0.],\n        [0., 1., 0., 0.],\n        [0., 0., 1., 0.],\n        [0., 0., 0., 1.]]),\n array([3, 1, 4]))\n\n\n\nA*d\n\n\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nCell In[30], line 1\n----&gt; 1 A*d\n\nValueError: operands could not be broadcast together with shapes (4,4) (3,) \n\n\n\n\nB\n\narray([[ 0,  1,  2,  3],\n       [ 4,  5,  6,  7],\n       [ 8,  9, 10, 11],\n       [12, 13, 14, 15]])\n\n\n\n# entrywise multiplication, if they have the same shape\nprint(A*B)\n\n# matrix multiplication, if they are conformable\nA.dot(B), B.dot(A)\n\n[[ 0.  0.  0.  0.]\n [ 0.  5.  0.  0.]\n [ 0.  0. 10.  0.]\n [ 0.  0.  0. 15.]]\n\n\n(array([[ 0.,  1.,  2.,  3.],\n        [ 4.,  5.,  6.,  7.],\n        [ 8.,  9., 10., 11.],\n        [12., 13., 14., 15.]]),\n array([[ 0.,  1.,  2.,  3.],\n        [ 4.,  5.,  6.,  7.],\n        [ 8.,  9., 10., 11.],\n        [12., 13., 14., 15.]]))\n\n\n\nvv, ww = np.array([1,2,4]), np.array([3, 4])\n2*vv + 1, ww\n\n(array([3, 5, 9]), array([3, 4]))\n\n\n\nc = np.arange(1, 5)\nc\n\narray([1, 2, 3, 4])\n\n\n\nc, B\n\n(array([1, 2, 3, 4]),\n array([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11],\n        [12, 13, 14, 15]]))\n\n\n\nc = np.arange(1, 5)\nc\n\narray([1, 2, 3, 4])\n\n\n\nc, B\n\n(array([1, 2, 3, 4]),\n array([[ 0,  1,  2,  3],\n        [ 4,  5,  6,  7],\n        [ 8,  9, 10, 11],\n        [12, 13, 14, 15]]))\n\n\n\nc*B\n\narray([[ 0,  2,  6, 12],\n       [ 4, 10, 18, 28],\n       [ 8, 18, 30, 44],\n       [12, 26, 42, 60]])\n\n\n\nc.dot(B)\n\narray([ 80,  90, 100, 110])\n\n\n\nB.dot(c)\n\narray([ 20,  60, 100, 140])\n\n\n\nc[3], B[1,1]\n\n(4, 5)"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#numpy.arange-vs-numpy.linspace",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#numpy.arange-vs-numpy.linspace",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "numpy.arange vs numpy.linspace",
    "text": "numpy.arange vs numpy.linspace\n\nprint(np.arange(0, 1, 0.1))\nnp.linspace(0, 1, 10)\n\n[0.  0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9]\n\n\narray([0.        , 0.11111111, 0.22222222, 0.33333333, 0.44444444,\n       0.55555556, 0.66666667, 0.77777778, 0.88888889, 1.        ])"
  },
  {
    "objectID": "NSD_Lec01-FinancialEngineering_Summer2025.html#probability-distributions-in-scipy.stats",
    "href": "NSD_Lec01-FinancialEngineering_Summer2025.html#probability-distributions-in-scipy.stats",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Probability distributions in scipy.stats",
    "text": "Probability distributions in scipy.stats\n\nDistributions\n\nnorm for normal distribution\nexpon for exponential distribution\nf for \\(F\\)-distribution\nt for \\(t\\)-distribution\nchi2 for \\(\\chi^2\\)\n\nMethods\n\ncdf for cumulative distribution function\npdf for probability density function\nrvs for random samples\nppf for percentile/quantile function\nsf for survival function\n\n\n\nc\n\narray([1, 2, 3, 4])\n\n\n\nss.expon.ppf(0)\n\nnp.float64(0.0)\n\n\n\nss.expon.ppf(0.75)\n\nnp.float64(1.3862943611198906)\n\n\n\n# set random seed for reproducing the same result\n#np.random.seed(1414)\nss.norm.rvs(size=100)\n\narray([ 1.90500963e+00, -9.26189353e-01,  2.59899601e-02, -3.88504372e-02,\n       -4.99088973e-01, -3.28268840e-01, -9.02064852e-01, -1.12596435e+00,\n       -5.82834299e-01,  6.87782748e-01, -1.58545821e+00, -1.02809283e+00,\n        2.23827542e-01,  1.11105370e+00, -7.62913181e-01, -9.50884319e-02,\n        3.41188487e-01,  6.23140174e-01, -8.26578120e-01,  2.24530170e+00,\n        1.95859043e+00, -7.95248922e-01, -4.33296750e-01, -8.46815528e-01,\n        1.21972014e-01,  2.56056794e+00,  1.28634181e+00,  1.58244716e+00,\n        1.53643255e+00, -9.02912788e-01, -6.81755257e-01,  1.25675463e+00,\n       -3.22728800e-01, -2.23427113e-01,  9.37736522e-01,  1.84954428e-01,\n       -1.47368965e+00,  5.13991467e-01, -7.38149140e-01,  1.28392808e-01,\n       -2.58651738e-01, -9.77344921e-01, -1.90288421e+00,  1.98369021e-01,\n        8.24466724e-01, -1.03827555e+00,  1.80616310e+00, -1.37742816e+00,\n       -4.07164649e-01, -1.95352299e+00, -1.05000140e+00,  1.02700912e+00,\n        5.40498556e-01, -2.82708805e-01, -2.87597562e-01, -8.41689373e-01,\n        5.93505669e-02,  4.53903314e-01, -1.15212311e+00, -5.69057683e-01,\n       -2.37658188e-01,  1.10694851e+00, -5.46694151e-01, -2.82575234e-01,\n        1.09209917e-01, -1.66039357e-01, -2.41407120e-01,  5.78674565e-01,\n       -4.78640827e-01, -1.44091328e+00, -1.26918381e+00,  1.31760542e+00,\n       -9.97741445e-01, -8.34399700e-01, -7.37834400e-01,  2.59507750e+00,\n       -3.45976692e-01, -8.36221569e-01,  3.00247725e-02, -9.12115482e-01,\n       -5.11351475e-01, -2.22029626e-01,  3.77572064e-01, -8.23316424e-04,\n        4.47546024e-01,  5.37300771e-01,  5.65936543e-03,  6.33369379e-01,\n       -6.42294255e-01, -6.51539813e-01,  1.66518313e+00, -1.13719462e+00,\n       -1.28257270e-01,  2.05714889e+00, -3.50942579e-01, -2.11867973e-01,\n        1.81174643e+00, -1.17653604e+00, -1.23539063e+00,  9.21296346e-01])\n\n\n\n# restructure in to a matrix\nnp.random.seed(0)\nx = norm.rvs(size=10)\nx.reshape(5, 2)\n\narray([[ 1.76405235,  0.40015721],\n       [ 0.97873798,  2.2408932 ],\n       [ 1.86755799, -0.97727788],\n       [ 0.95008842, -0.15135721],\n       [-0.10321885,  0.4105985 ]])\n\n\n\nx = ss.chi2.rvs(size=1000, df=3)\nx.std()\n#x.mean(), x.std()\n\nnp.float64(2.272882482740998)\n\n\n\nx = norm.rvs(size=10000)\nx.mean(), x.std()\n\n(np.float64(-0.00694190524278084), np.float64(1.0016440451939277))\n\n\n\n# t distribution\nx = ss.t.rvs(size=20, df=3)\nx = x.reshape(5, 4)\nx.std(axis=0), x.mean(axis=1)\n\n(array([1.37879318, 0.90832706, 0.54941869, 1.06259522]),\n array([-0.25745669, -1.00116667,  0.49639331, -0.14980356,  0.09080126]))\n\n\n\n# set seed for reproducing the same result\nnp.random.seed(3141)\nA = ss.t.rvs(size=50, df=3).reshape(10, 5)\nprint(A)\n\n# columns means, row means, mean\nA.mean(axis=0), A.mean(axis=1), A.mean(), A[0,:].mean(), A[:,1].mean()\n\n[[ 0.38460161  0.30557167  0.98733417 -0.91383565  0.29287735]\n [-4.80767259  1.75715301  0.56930703 -0.18584678 -0.27178843]\n [-2.22506467  0.75044717  0.64565414 -6.61192184  0.52245651]\n [-3.9920851  -0.09520588 -1.13886262  0.10359085  0.98480259]\n [ 1.14992001 -0.0721649   1.11039801 -1.2657385   0.24885729]\n [ 0.83122811  1.1900472   2.20384757  0.241097    0.7355704 ]\n [ 0.35649725 -0.05568609  0.91596184  0.57625402 -1.13201945]\n [-0.33241969 -0.86425951  0.70613486  0.58578441  0.83649889]\n [-3.05161328 -0.12689271 -0.95750987  0.43748489 -0.01460354]\n [ 0.91656328  0.61010723 -1.11239471 -0.96544386 -0.38342567]]\n\n\n(array([-1.07700451,  0.33991172,  0.39298704, -0.79985755,  0.18192259]),\n array([ 0.21130983, -0.58776955, -1.38368574, -0.82755203,  0.23425438,\n         1.04035806,  0.13220151,  0.18634779, -0.7426269 , -0.18691875]),\n -0.19240813934357784,\n 0.21130982710311189,\n 0.3399117196808371)\n\n\n\nA.std(axis=0), A.std(axis=1), A.std()\n\n(array([2.1202166 , 0.71816393, 1.05120007, 2.04105521, 0.61667702]),\n array([0.61866546, 2.23188063, 2.8407215 , 1.72041687, 0.88883698,\n        0.65598228, 0.70644573, 0.66713118, 1.23930652, 0.81904152]),\n 1.5861889765952781)\n\n\n\nf(3.14)\n\n0.0015926529164868282\n\n\n\n# plot graph of a function\nf = lambda x: np.sin(x)\ng = lambda x: np.sin(x - np.pi/6)\nh = lambda x: np.sin(x - np.pi/4)\nx = np.linspace(0, 2*np.pi, 200)\n\n# plot\nplt.figure(figsize=(9, 6))\nplt.plot(x, f(x), 'r', lw=1, label='$y = f(x)$')\nplt.plot(x, g(x), 'k--', lw=1, label='$y = g(x)$')\nplt.plot(x, h(x), 'b-.', lw=1, label='$y = h(x)$')\nplt.xlabel('$x$', fontsize=12)\nplt.ylabel('$y$', fontsize=25)\n#plt.ylabel('$y$', fontsize=12)\n#plt.title('Whatever the Title', fontsize=15)\nplt.grid()\n#plt.legend();\n\n\n\n\n\n\n\n\n\n# examples for histogram\n# set seed\nnp.random.seed(2718)\nsample = pd.DataFrame(norm.rvs(size=int(5e4)))\nsample.head(10), sample.tail(10)\n\n(          0\n 0  1.722518\n 1 -0.626257\n 2 -3.533687\n 3  0.716898\n 4  1.353317\n 5  1.603105\n 6  0.501179\n 7  0.748855\n 8 -1.790165\n 9  0.533090,\n               0\n 49990  0.004426\n 49991  0.235329\n 49992 -0.188821\n 49993 -0.183680\n 49994  0.475978\n 49995 -1.139552\n 49996 -0.162364\n 49997 -0.355614\n 49998 -0.793454\n 49999  1.334050)\n\n\n\nsample.describe().transpose()\n#sample.describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\n0\n50000.0\n0.000345\n1.002402\n-4.568631\n-0.675698\n0.006211\n0.681126\n4.001952\n\n\n\n\n\n\n\n\n# generate random samples from standard normal\nsample = pd.DataFrame(norm.rvs(size=int(5e4))) # 1e5 = 10^5, 1e3 = 10^3 = 1000\n\nx = np.linspace(sample.min(), sample.max(), 200)\ny = norm.pdf(x)\n\n# histogram by hvplot.hist\n#sample.hvplot.hist(bins=50, height=350, width=550, label='histogram') * \\\n#hv.Curve((x, y*8500)).opts(color='red', line_dash='dashed')\n\n\n# histogram by seaborn.histplot\n# we shall mostly using this module for plotting histograms\nplt.figure(figsize=(9, 6))\nsns.histplot(sample[0], bins=50, stat='density', kde=True, label='histogram')\n\n#sns.histplot(sample[0], bins=50, color='k', fill=False)\nplt.xlabel('$X$', fontsize=12)\nplt.title('Histogram', fontsize=18)\n\n# superimpose density of standard normal \nx = np.linspace(sample.min(), sample.max(), 200)\ny = norm.pdf(x)\nplt.plot(x, y, 'r--', label='normal density')\nplt.legend();\n\n\n\n\n\n\n\n\n\nsample.columns = ['X']\n\n\n# histogram using built-in pandas.DataFrame method\nsample.plot(kind='hist', bins=50, density=True, histtype='step')\n# superimpose the density\nx = np.linspace(sample.min(), sample.max(), 200)\ny = norm.pdf(x)\nplt.plot(x, y, 'r-.', label='normal density')\nplt.xlabel('$X$', fontsize=12)\nplt.title('Histogram', fontsize=18)\nplt.legend();\n\n\n\n\n\n\n\n\n\n# histogram using pyplot\nplt.figure(figsize=(9, 6))\nplt.hist(sample, density=True, bins=50, histtype='bar', rwidth=0.85, label='histogram')\n\n# superimpose the density\nx = np.linspace(sample.min(), sample.max(), 200)\ny = norm.pdf(x)\nplt.plot(x, y, 'r-.', label='normal density')\nplt.xlabel('$X$', fontsize=12)\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\cA}{\\mathcal{A} }\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\newcommand{\\Sdof}[1]{\\mathbb{Sd}\\left[ #1 \\right]}\n\\def\\Cov{{ \\mbox{Cov} }}\n\\def\\Var{{ \\text{Var} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\newcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\mbox{tr}}\n\\newcommand{\\inn}[2]{\\left\\langle #1, #2 \\right\\rangle}\n\\newcommand{\\bX}{\\boldsymbol X}\n\\newcommand{\\bm}{\\boldsymbol m}\n\\newcommand{\\bx}{\\boldsymbol x}\n\\newcommand{\\by}{\\boldsymbol y}\n\\newcommand{\\bmu}{\\boldsymbol\\mu}\n\\newcommand{\\bxi}{\\boldsymbol\\xi}\n\\]"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#lecture-3-the-black-merton-scholes-model-and-beyond-i",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#lecture-3-the-black-merton-scholes-model-and-beyond-i",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\cA}{\\mathcal{A} }\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\newcommand{\\Sdof}[1]{\\mathbb{Sd}\\left[ #1 \\right]}\n\\def\\Cov{{ \\mbox{Cov} }}\n\\def\\Var{{ \\text{Var} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\newcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\mbox{tr}}\n\\newcommand{\\inn}[2]{\\left\\langle #1, #2 \\right\\rangle}\n\\newcommand{\\bX}{\\boldsymbol X}\n\\newcommand{\\bm}{\\boldsymbol m}\n\\newcommand{\\bx}{\\boldsymbol x}\n\\newcommand{\\by}{\\boldsymbol y}\n\\newcommand{\\bmu}{\\boldsymbol\\mu}\n\\newcommand{\\bxi}{\\boldsymbol\\xi}\n\\]"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#agenda",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#agenda",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Agenda",
    "text": "Agenda\n\nBlack-Merton-Scholes model\nBlack-Merton-Scholes formula for call and put options\nGreeks\nSubtlety in self-financing\nDelta and delta-gamma hedges\nDynamic hedging\nDeep hedging\n\n\nRemark\n\nBlack-Merton-Scholes 模型是用于期权定价的经典模型\nCall option: 看涨期权; Put option: 看跌期权\nGreeks 是衡量期权价格对市场变量变化敏感度的指标\n自融资策略(self-financing)是指在不注入额外资金的情况下进行投资组合调整.\nhedging 是指通过对冲策略来降低风险. 对冲指通过调整标的资产的数量, 使得投资组合的价值对市场变量的变化不敏感.\n\nDelta 对冲, 投资组合对标的资产价格的一阶变动免疫\nDelta-Gamma 对冲, 投资组合对标的资产价格的二阶变动免疫\n\nDynamic Hedging\n\n动态对冲是指在期权到期前, 根据市场变化不断调整投资组合, 以保持对冲效果.\nDeep Hedging 是指使用深度学习模型来优化动态对冲策略, 通过学习历史数据中的模式来提高对冲效果."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#black-merton-scholes",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#black-merton-scholes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Black-Merton-Scholes",
    "text": "Black-Merton-Scholes\nFrom the Wikipage:\n\nThe Black–Scholes or Black–Scholes–Merton model is a mathematical model for the dynamics of a financial market containing derivative investment instruments. From the partial differential equation in the model, known as the Black–Scholes equation, one can deduce the Black–Scholes formula, which gives a theoretical estimate of the price of European-style options and shows that the option has a unique price regardless of the risk of the security and its expected return (instead of replacing the security’s expected return with the risk-neutral rate). The formula led to a boom in options trading and provided mathematical legitimacy to the activities of the Chicago Board Options Exchange and other options markets around the world. It is widely used, although often with adjustments and corrections, by options market participants.\nThe key idea behind the model is to hedge the option by buying and selling the underlying asset in just the right way and, as a consequence, to eliminate risk. This type of hedging is called “continuously revised delta hedging” and is the basis of more complicated hedging strategies such as those engaged in by investment banks and hedge funds.\nThe Black–Scholes formula has only one parameter that cannot be directly observed in the market: the average future volatility of the underlying asset, though it can be found from the price of other options. Since the option value (whether put or call) is increasing in this parameter, it can be inverted to produce a “volatility surface” (implied volatility) that is then used to calibrate other models ((exotic) derivatives), e.g. for OTC derivatives."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#the-black-scholes-world",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#the-black-scholes-world",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Black-Scholes world",
    "text": "The Black-Scholes world\nThe Black–Scholes model assumes that the market consists of at least one risky asset, usually called the stock, and one riskless asset, usually called the money market, cash, or bond.\nAssumptions on the assets:\n\n(riskless rate) The rate of return on the riskless asset is constant and thus called the risk-free interest rate.\n(Brownian motion) The instantaneous log return of stock price is a Brownian motion with drift; and we will assume its drift and volatility are constant (if they are time-varying, we can deduce a suitably modified Black–Scholes formula quite simply, as long as the volatility is not random). As a result, the stock price follows a geometric Brownian motion.\nThe stock does not pay dividend.\n\nAssumptions on the market:\n\nThere exists no arbitrage opportunity.\nIt is possible to borrow and lend any amount, even fractional, of cash at the riskless rate.\nIt is possible to buy and sell any amount, even fractional, of the stock, including short selling.\nFrictionless market: the transactions do not incur any fees or costs."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#black-scholes-model",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#black-scholes-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Black-Scholes model",
    "text": "Black-Scholes model\nAssume the price of the underlying asset follows the stochastic differential equation\n\\[\n\\frac{\\mathrm{d}S_t}{S_t} = \\mu \\mathrm{d}t + \\sigma \\mathrm{d}W_t,\n\\]\nwhere\n\n\\(\\mu\\): (constant) expected return\n\\(\\sigma\\): (constant) volatility\n\\(W_t\\): standard Brownian motion\n\nFor each time \\(t\\), \\(S_t\\) is log-normally distributed. More precisely,\n\\[\nS_t \\sim S_0 \\exp\\left[\\left(\\mu - \\frac{\\sigma^2}{2}\\right)t + \\sigma \\sqrt t Z \\right]\n\\]\nwhere \\(Z\\) is a standard normal random variable.\n\nNote\n\\(S_t\\) has the closed form expression\n\\[\nS_t = S_0 e^{\\left(\\mu - \\frac{\\sigma^2}2 \\right) t+ \\sigma W_t}\n\\]\nand is also referred to as a geometric Brownian motion.\nThe price can never be negative, i.e., \\(S_t \\geq 0\\) for all \\(t \\geq 0\\)."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#pricing-under-the-black-scholes-model",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#pricing-under-the-black-scholes-model",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Pricing under the Black-Scholes model",
    "text": "Pricing under the Black-Scholes model\nAssume the price of a call option \\(C\\) is a (smooth enough) function of the calendar time \\(t\\) and the underlying asset \\(S\\). Consider the portfolio \\(\\Pi\\) consisting of selling a call option and holding \\(\\Delta\\) shares of \\(S\\).\n\nThe value of \\(\\Pi\\) at time \\(t\\) is \\[\n\\Pi_t =  -C(t, S_t) + \\Delta S_t\n\\]\n Self-financing strategy \n\n\\[\n\\mathrm{d} \\Pi_t =  -\\mathrm{d}C_t + \\Delta \\mathrm{d}S_t\n\\]\n\nThe change of call price is given by\n\n\\[\\begin{equation}\n\\begin{aligned}\n  \\mathrm{d}C(t, S_t) &= C_t \\, \\mathrm{d}t + C_S \\, \\mathrm{d}S_t + \\frac{1}{2} C_{SS} (\\mathrm{d}S_t)^2 \\\\\n             &= C_S \\sigma S \\, \\mathrm{d}W_t + \\left( C_t + \\frac{1}{2} \\sigma^2 S^2 C_{SS} + \\mu S C_S \\right) \\mathrm{d}t\n\\end{aligned}\n\\end{equation}\\]\n\nHence the infinitesimal change of \\(\\Pi\\) at time \\(t\\) is\n\n\\[\\begin{equation}\n\\begin{aligned}\n  \\mathrm{d} \\Pi_t &= -\\mathrm{d}C_t + \\Delta \\, \\mathrm{d}S_t \\\\\n          &= -\\left[ C_t + \\frac{1}{2} \\sigma^2 S^2 C_{SS} + \\mu S (C_S - \\Delta) \\right] \\mathrm{d}t - \\sigma S (C_S - \\Delta) \\, \\mathrm{d}W_t\n\\end{aligned}\n\\end{equation}\\]\n\nNote\n\\((\\mathrm{d}S_t)^2 = \\sigma^2 S_t^2 \\mathrm{d}t\\)\n\nLet \\(\\Delta = C_S\\), i.e., hold this amount \\(C_S(t,S_t)\\) of underlying assets in the portfolio \\(\\Pi\\). Then the infinitesimal change of \\(\\Pi\\) becomes\n\n\\[\n\\displaystyle \\mathrm{d}\\Pi_t = -\\left( C_t + \\frac12 \\sigma^2 S^2 C_{SS} \\right) \\mathrm{d}t\n\\]\n\nOn the other hand, with this choice of \\(\\Delta\\), \\(\\Pi\\) is riskless (non-random) hence must be like cash in bank account (Arbitrage Pricing Theory), i.e.,\n\n\\[\n\\mathrm{d}\\Pi_t = r \\Pi_t \\mathrm{d}t = r(-C + \\Delta S) \\mathrm{d}t = r(-C + C_S S) \\mathrm{d}t,\n\\]\nwhere \\(r\\) is the interest rate."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#black-scholes-pde",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#black-scholes-pde",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Black-Scholes PDE",
    "text": "Black-Scholes PDE\nWe conclude that the price \\(C\\) of a call option satisfies\n\\[\\begin{equation}\n\\begin{aligned}\n  \\frac{\\partial C}{\\partial t} + \\frac{\\sigma^2}{2} S^2 \\frac{\\partial^2 C}{\\partial S^2} + rS \\frac{\\partial C}{\\partial S} - rC = 0,\n  \\quad \\text{for } 0 &lt; S &lt; \\infty, \\quad 0 \\leq t &lt; T\n\\end{aligned}\n\\end{equation}\\]\nwith terminal condition\n\\[\nC(T,S) = (S - K)^+\n\\]\nand boundary conditions\n\\[\\begin{equation}\n\\begin{aligned}\n  && C(t, 0) = 0, \\\\\n  && C(t, S) \\sim S - K e^{-r(T-t)} \\quad \\text{as } S \\to \\infty, \\\\\n  && \\text{or more specifically} \\quad \\lim_{S \\to \\infty} \\frac{C(t, S)}{S} = 1.\n\\end{aligned}\n\\end{equation}\\]\n\nNote\nThe Black-Scholes pricing PDE does not depend on the drift \\(\\mu\\).\n\\(C(T,S) = (S-K)^+\\) 表示欧式看涨期权在到期时(\\(t= T\\))的支付函数. 若股价高于执行价 \\(K\\), 则价值是差额; 否则归零.\n这里的 PDE 是通过 Feynamn-Kac 定理得到的:\n\\[\\begin{align*}\n\\mathrm{d} S_t &= r S_t \\mathrm{d} t + \\sigma S_t \\mathrm{d} W_t \\\\\nC(t,s) &= \\Eof{e^{-r(T-t)} (S_T - K)^+ \\mid S_t = s}\n\\end{align*}\\]\n那么 PDE 就是 \\[\n\\frac{\\partial C}{\\partial t} + r S \\frac{\\partial C}{\\partial S} + \\frac{\\sigma^2}{2} S^2 \\frac{\\partial^2 C}{\\partial S^2} - r C = 0.\n\\]"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#solving-black-scholes-pde",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#solving-black-scholes-pde",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Solving Black-Scholes PDE",
    "text": "Solving Black-Scholes PDE\n\\[\n\\frac{\\p C}{\\p t} + \\frac{\\sigma^2}{2}S^2\\frac{\\p C^2}{\\p S^2} + rS\\frac{\\p C}{\\p S} - rC = 0\n\\]\n\n\\(\\tau = T - t\\)\n\n\\[\n\\frac{\\p C}{\\p \\tau} = \\frac{\\sigma^2}{2}S^2\\frac{\\p C^2}{\\p S^2} + rS\\frac{\\p C}{\\p S} - rC\n\\]\n\n\\(\\xi = \\ln S\\)\n\n\\[\n\\frac{\\p C}{\\p \\tau} = \\frac{\\sigma^2}{2}\\frac{\\p C^2}{\\p \\xi^2} + \\left( r -\\frac{\\sigma^2}{2} \\right) \\frac{\\p C}{\\p \\xi} - rC\n\\]\n\n\\(c(\\xi,\\tau) = e^{r\\tau}C(\\xi,\\tau)\\)\n\n\\[\n\\frac{\\p c}{\\p \\tau} = \\frac{\\sigma^2}{2}\\frac{\\p c^2}{\\p \\xi^2} + \\left( r -\\frac{\\sigma^2}{2} \\right) \\frac{\\p c}{\\p \\xi}\n\\]\n\n\\(\\displaystyle x = \\xi + \\left( r - \\frac{\\sigma^2}{2} \\right) \\tau\\)\n\n\\[\n\\frac{\\p c}{\\p \\tau} = \\frac{\\sigma^2}{2} \\frac{\\p^2 c}{\\p x^2}\n\\]\nIn total, we have done the transformation\n\\[\\begin{equation}\n\\begin{aligned}\n  \\tau &= T - t, \\\\\n  x &= \\ln S + \\left( r - \\frac{\\sigma^2}{2} \\right) (T - t), \\\\\n  c &= e^{r(T-t)} C.\n\\end{aligned}\n\\end{equation}\\]\nwhich transforms Black-Scholes equation into heat equation."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#the-black-scholes-formula",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#the-black-scholes-formula",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Black-Scholes formula",
    "text": "The Black-Scholes formula\n\nFor call option\n\n\\[\nC = S e^{-d\\tau} N(d_1) - K e^{-r\\tau} N(d_2)\n\\]\nwhere \\(\\tau\\) is time to expiry, \\(N(\\cdot)\\) denotes the cdf for standard normal, and\n\\[\nd_1 = \\frac{\\log\\left(\\frac{Se^{-d\\tau}}{Ke^{-r\\tau}}\\right)}{\\sigma\\sqrt\\tau}+ \\frac{\\sigma\\sqrt\\tau}2, \\qquad d_2 = d_1 - \\sigma \\sqrt\\tau\n\\]\n注:\n\n\n\nTerm\nEconomic meaning\n\n\n\n\n\\(S e^{-d\\tau} N(d_1)\\)\nDividend discounted stock price\n\n\n\\(K e^{-r\\tau}\\)\nPresent value of strike price\n\n\n\\(N(d_2)\\)\nThe probability of the option expires in the money.\n\n\n\n注: in the money = 实值, at the money = 平值, out of the money = 虚值.\nin the money = the option is worth exercising at expiry, i.e., \\(S_T &gt; K\\).\nThe \\(N(d_1)\\) is the factor by which the present value of contingent(有条件的) receipt(收入) of the stock, contingent on exercise, exceeds the current value of the stock.\nThe \\(N(d_2)\\) is the risk-adjusted probability of exercise.\n\nFor put option\n\n\\[\nP = K e^{-r\\tau} N(-d_2) - S e^{-d\\tau} N(-d_1).\n\\]\n\\(\\tau = T - t\\)\n\nNote\n\nPut-call parity\n\\[\n  C - P = S e^{-d\\tau} - K e^{-r\\tau}.\n  \\]\nFinancial meaning of \\(N(d_1)\\) and \\(N(d_2)\\)\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nfrom numpy import exp, log, sqrt\nfrom scipy.stats import norm\n\n\nnorm.rvs(size=10) # generate samples from standard normal \nnorm.cdf # cdf of standard normal\nnorm.pdf # pdf for standard normal\nnorm.ppf # quantile funciton\n\n&lt;bound method rv_continuous.ppf of &lt;scipy.stats._continuous_distns.norm_gen object at 0x0000020A9875EE10&gt;&gt;\n\n\n\nprint(norm.cdf(0)) # This is N(0) in our notation\nnorm.cdf((-9, -2, -1, 0, 1, 2, 3, 4, 9))\n\n0.5\n\n\narray([1.12858841e-19, 2.27501319e-02, 1.58655254e-01, 5.00000000e-01,\n       8.41344746e-01, 9.77249868e-01, 9.98650102e-01, 9.99968329e-01,\n       1.00000000e+00])\n\n\n\n# plot cdf and pdf for standard normal\nx = np.linspace(-3, 3, 201)\ny = norm.cdf(x)\nplt.figure(figsize=(9, 6))\nplt.title('Standard normal CDF and PDF', fontsize=20)\nplt.plot(x, y, lw=1)\ny = norm.pdf(x)\nplt.plot(x, y, color='green', ls='dashdot', lw=3);\n\n\n\n\n\n\n\n\n\n# Black-Scholes formulas\n# call\n# t is tau in the formula above\ndef bs_call(s, K, sigma, t, r=0, d=0):\n    d1 = (log(s/K) + (r - d)*t)/(sigma*sqrt(t)) + sigma*sqrt(t)/2\n    d2 = d1 - sigma*sqrt(t)\n    \n    c = s*exp(-d*t)*norm.cdf(d1) - K*exp(-r*t)*norm.cdf(d2)\n    delta = exp(-d*t)*norm.cdf(d1)\n    gamma = exp(-d*t)*norm.pdf(d1)/s/sigma/sqrt(t)\n    \n    return {'c': c, 'delta': delta, 'gamma': gamma}\n\n#put\ndef bs_put(s, K, sigma, t, r=0, d=0):\n    d1 = (log(s/K) + (r - d)*t)/(sigma*sqrt(t)) + sigma*sqrt(t)/2\n    d2 = d1 - sigma*sqrt(t)\n    \n    p = K*exp(-r*t)*norm.cdf(-d2) - s*exp(-d*t)*norm.cdf(-d1)\n    delta = -exp(-d*t)*norm.cdf(-d1)\n    gamma = exp(-d*t)*norm.pdf(d1)/s/sigma/sqrt(t)\n    \n    return {'p': p, 'delta': delta, 'gamma': gamma}\n\n\nprint(bs_call(K=100, s=100, sigma=0.3, t=1))\nprint(bs_call(K=100, s=102, sigma=0.3, t=1))\nprint(bs_call(K=100, s=100, t=1, sigma=.3, r=0.05))\nprint(bs_call(s=100, K=90, t=1, sigma=.3))\n\n{'c': 11.923538474048499, 'delta': 0.5596176923702425, 'gamma': 0.013149311030262966}\n{'c': 13.068803286156744, 'delta': 0.5855095394527341, 'gamma': 0.012736690514019119}\n{'c': 14.231254785985826, 'delta': 0.6242517279060125, 'gamma': 0.012647764437231514}\n{'c': 17.0128799018497, 'delta': 0.6918854176337346, 'gamma': 0.011728453149086748}\n\n\n\n# option price as a function of the underlying\nK, sig, T, r = 100, 0.3, 1, 0.05 #0.02\n\n# payoffs of call and put\npayoff_c = lambda s, k: (s - k)*(s &gt; k)\npayoff_p = lambda s, k: (k - s)*(k &gt; s)\n\n# some temp functions\ntmpc = lambda x: bs_call(x, K, sig, T, r)['c']\ntmpp = lambda x: bs_put(x, K, sig, T, r)['p']\ntmp_payoff_c = lambda x: payoff_c(x, K)\ntmp_payoff_p = lambda x: payoff_p(x, K)\n\n# plot\nx = np.linspace(50, 150, 201)\nplt.figure(figsize=(15, 6))\nplt.subplot(1, 2, 1)\ny = tmpc(x)\nplt.plot(x, y, label='Black-Scholes')\ny = tmp_payoff_c(x)\nplt.plot(x, y, color='red', ls='dashed', label='payoff')\nplt.xlabel(r'$S$', fontsize=15)\nplt.ylabel('call price', fontsize=15)\nplt.legend()\nplt.subplot(1, 2, 2)\ny = tmpp(x)\nplt.plot(x, y, label='Black-Scholes')\ny = tmp_payoff_p(x)\nplt.plot(x, y, color='red', ls='dashed', label='payoff')\nplt.xlabel(r'$S$', fontsize=15)\nplt.ylabel('put price', fontsize=15)\nplt.legend();\n\n\n\n\n\n\n\n\n\n# option price as a function of strike\ns, sig, T = 100, 0.3, 1\n\ntmpc = lambda x: bs_call(s, x, sig, T)['c']\ntmpp = lambda x: bs_put(s, x, sig, T)['p']\n\n# plot\nx = np.linspace(50, 150, 201)\nplt.figure(figsize=(15, 6))\nplt.subplot(1, 2, 1)\ny = tmpc(x)\nplt.plot(x, y, label='Black-Scholes')\nplt.xlabel(r'$K$', fontsize=15)\nplt.ylabel('call price', fontsize=15)\nplt.subplot(1, 2, 2)\ny = tmpp(x)\nplt.plot(x, y, label='Black-Scholes')\nplt.xlabel(r'$K$', fontsize=15)\nplt.ylabel('put price', fontsize=15);\n\n\n\n\n\n\n\n\n\n# option price as a function of volatility\ns, K, T = 100, 95, 1\n\ntmpc = lambda x: bs_call(s, K, x, T)['c']\ntmpp = lambda x: bs_put(s, K, x, T)['p']\n\n# plot\nx = np.linspace(0.05, 1.5, 201)\nplt.figure(figsize=(15, 6))\nplt.subplot(1, 2, 1)\ny = tmpc(x)\nplt.plot(x, y, label='Black-Scholes')\nplt.xlabel(r'$\\sigma$', fontsize=15)\nplt.ylabel('call price', fontsize=15)\nplt.subplot(1, 2, 2)\ny = tmpp(x)\nplt.plot(x, y, label='Black-Scholes')\nplt.xlabel(r'$\\sigma$', fontsize=15)\nplt.ylabel('put price', fontsize=15);\n\n\n\n\n\n\n\n\n\n# option price as a function of time to expiry\ns, K, sigma = 100, 102, 0.3\n\ntmpc = lambda x: bs_call(s, K, sigma, x)['c']\ntmpp = lambda x: bs_put(s, K, sigma, x)['p']\n\n# plot\nx = np.linspace(0.01, 2, 201)\nplt.figure(figsize=(15, 6))\nplt.subplot(1, 2, 1)\ny = tmpc(x)\nplt.plot(x, y, label='Black-Scholes')\nplt.xlabel('Time to expiry', fontsize=15)\nplt.ylabel('call price', fontsize=15)\nplt.subplot(1, 2, 2)\ny = tmpp(x)\nplt.plot(x, y, label='Black-Scholes')\nplt.xlabel('Time to expiry', fontsize=15)\nplt.ylabel('put price', fontsize=15);"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#the-greeks",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#the-greeks",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Greeks",
    "text": "The Greeks\nSensitivities of option prices in Black-Scholes model - the Greeks.\nAssume the dividend rate \\(d = 0\\).\n注: 股利率(dividend rate) 是指公司向股东支付的利润分配率, 在 Black-Scholes 模型中通常假设为 \\(0\\).\n\nFor call:\n\n\\(\\displaystyle \\Delta_C = \\frac{\\p C}{\\p S} = N(d_1)\\)\nDual \\(\\displaystyle \\Delta_C^K = \\frac{\\p C}{\\p K} = -e^{-rT} N(d_2)\\)\n\\(\\displaystyle \\Gamma = \\frac{\\p^2 C}{\\p S^2} = \\frac{n(d_1)}{S\\sigma\\sqrt T}\\)\n\\(\\displaystyle \\Theta_C = \\frac{\\p C}{\\p T} = \\frac{S \\sigma}{2\\sqrt T} n(d_1) + r K e^{-rT} N(d_2)\\)\n\\(\\displaystyle \\nu \\, (\\text{vega}) = \\frac{\\p C}{\\p \\sigma} = S \\sqrt T \\, n(d_1)\\)\n\\(\\displaystyle \\rho_C = \\frac{\\p C}{\\p r} = K T e^{-rT} N(d_2)\\)\n\nFor put:\n\n\\(\\displaystyle \\Delta_P = \\frac{\\p P}{\\p S} = \\Delta_C - 1 = -N(-d_1)\\)\nDual \\(\\displaystyle \\Delta_P^K = \\frac{\\p P}{\\p K} = \\Delta_C^K + e^{-r T} = e^{-rT} N(-d_2)\\)\n\\(\\displaystyle \\Gamma = \\frac{\\p^2 P}{\\p S^2} = \\frac{\\p^2 C}{\\p S^2}\\)\n\\(\\displaystyle \\Theta_P = \\frac{\\p P}{\\p T} = \\Theta_C - r e^{-rT} K = \\frac{S \\sigma}{2\\sqrt T} n(d_1) - r K e^{-rT} N(-d_2)\\)\n\\(\\displaystyle \\nu \\, (\\text{vega}) = \\frac{\\p P}{\\p \\sigma} = \\frac{\\p C}{\\p \\sigma} = S \\sqrt T n(d_1)\\)\n\\(\\displaystyle \\rho_P = \\frac{\\p P}{\\p r} = \\rho_C - T e^{-rT} K = -K T e^{-rT} N(-d_2)\\)\n\n\n\nNote\n\n\\(n(x) = N'(x)\\) is the pdf for standard normal.\n\\(\\Theta_C &gt; 0\\), whereas \\(\\Theta_P\\) may be negative if \\(r &gt; 0\\)."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#subtlety-in-self-financing",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#subtlety-in-self-financing",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Subtlety in self-financing",
    "text": "Subtlety in self-financing\n注: Subtlety = 区别. 此处探讨两种情况之细微区别:\n\n投资者在每个时间步先调整投资组合\n投资者先观察市场价格变化后再调整\n\nAssume that all the tradings are done at the mid price \\(S_t\\), i.e., no bid-ask spread and transaction cost.\n注: mid price = 中间价, 即买入价和卖出价的平均值. 在实际交易中, 由于存在买卖差价(bid-ask spread)和交易成本, mid price 是一个理想化的假设.\nIn a discrete time setting, consider a portfolio consisting of holding \\(H_t\\) shares of the underlying and \\(K_t\\) dollars in the money/cash account at time \\(t\\), interest and dividend are assumed zero for simplicity.\nThe monetary value \\(V_t\\) of the portfolio, marked to market value at the mid price, is thus given by \\(V_t = H_tS_t + K_t\\) (before the price of the underlying changes from \\(S_t\\) to \\(S_{t+1}\\)). At this point, the investor may decide to change his portfolio before he observes the price change of the underlying from \\(S_t\\) to \\(S_{t+1}\\) or after the price change.\n\nBefore price change. In this case, the self-financing condition reads \\[\nV_t = H_t S_t + K_t = H_{t+1} S_t + K_{t+1},\n\\] where apparently \\(K_{t+1} = K_t + (H_t - H_{t+1}) S_t\\). In other words, the investor simply moves his money from stock to money account (or the other way around) without pouring/withdrawing extra money/shares into/out of the portfolio. The value of the portfolio (after price change) at time \\(t+1\\) is given by \\(V_{t+1} = H_{t+1}S_{t+1} + K_{t+1}\\). Hence,\n\n\\[\n\\begin{aligned}\n  \\Delta V_{t+1} &= V_{t+1} - V_t \\\\\n                 &= H_{t+1} S_{t+1} + K_{t+1} - (H_t S_t + K_t) \\\\\n                 &= H_{t+1} S_{t+1} + K_{t+1} - (H_{t+1} S_t + K_{t+1}) \\\\\n                 &= H_{t+1} \\Delta S_{t+1}.\n\\end{aligned}\n\\]\nIf we write \\(H_{t+1} = H_t + \\Delta H_{t+1}\\), then\n\\[\n\\Delta V_{t+1} = H_t \\Delta S_{t+1} + \\Delta H_{t+1} \\Delta S_{t+1}\n\\]\n\nAfter price change. In this case, the self-financing condition becomes \\[\nV_{t+1} = H_t S_{t+1} + K_t = H_{t+1} S_{t+1} + K_{t+1},\n\\] where \\(K_{t+1} = K_t + (H_t - H_{t+1}) S_{t+1}\\). Hence, \\[\n\\begin{aligned}\n\\Delta V_{t+1} &= V_{t+1} - V_t \\\\\n               &= H_{t+1} S_{t+1} + K_{t+1} - (H_t S_t + K_t) \\\\\n               &= H_{t+1} S_{t+1} + K_t + (H_t - H_{t+1}) S_{t+1} - (H_t S_t + K_t) \\\\\n               &= H_t \\Delta S_{t+1}.\n\\end{aligned}\n\\]\n\nThe subtlety results from the investor’s decision to rebalance his position before or after he observes the price change. Moreover, the discrepancy between the two increments of portfolio values is exactly the covariation between the holdings \\(H_t\\) and the price \\(S_t\\) of the underlying. In the continuous time limit, the discrepancy becomes insignificant should the covariation vanishes in the continuous time limit. In a recent paper by Carmona and Webster, the authors argued that, in the high frequency trading regime, empirically this covariation is statistically significant. As a result, the process of holdings \\(H_t\\) cannot be of finite variation, counterintuitive to common knowledge.\n\n即使在“无交易成本”的理想模型中, 投资者调仓的时机选择会对组合价值变化产生不同影响, 这种细微差异在连续时间极限中通常被忽略, 但在高频市场中却非常重要, 因为实际持仓路径和价格变动之间的协变并不为零."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#self-financing-with-traded-price",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#self-financing-with-traded-price",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Self-financing with traded price",
    "text": "Self-financing with traded price\nIn reality, trading incurs transaction cost which consist of bid-ask spread, fees, and taxes. The self-financing conditions with transaction cost becomes\n\nBefore price change. \\[\nV_t = H_t S_t + K_t = H_{t+1} S_t + K_{t+1} ,\n\\] where \\(K_{t+1} = K_t + (H_t - H_{t+1})S_t - c_t\\) and \\(c_t &gt; 0\\) denotes the transaction cost at time \\(t\\). Hence, the increment of \\(V\\) at time \\(t+1\\) \\[\n\\begin{aligned}\n\\Delta V_{t+1} &= V_{t+1} - V_t \\\\\n               &= H_{t+1} S_{t+1} + K_t + (H_t - H_{t+1}) S_t - c_t - (H_t S_t + K_t) \\\\\n               &= H_{t+1} \\Delta S_{t+1} - c_t \\\\\n               &= H_t \\Delta S_{t+1} + \\Delta H_{t+1} \\Delta S_{t+1} - c_t.\n\\end{aligned}\n\\]\nAfter price change. By the same token, in this case one can show that \\[\n\\Delta V_{t+1} = H_t \\Delta S_{t+1} - c_{t+1}\n\\]\n\nwhere the transaction cost \\(c_{t+1}\\) is incurred at time \\(t+1\\)."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#delta-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#delta-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Delta hedging",
    "text": "Delta hedging\nThe portfolio used in deriving the Black-Scholes PDE is called delta-hedging.\n利用 The Greeks 定义的 \\(\\Delta\\), Delta Hedging 就是构建一个投资组合, 使得这个组合整体的 \\(\\Delta = 0\\), 从而不受标的资产价格小幅变化影响.\nExample: 假设你卖出了一个欧式看涨期权, 其 \\(\\Delta = 0.6\\); 那么你要 买入 0.6 股标的资产来进行对冲.\n\nNote\nRebalancing of hedging portfolio is done after the price change.\n我们设 portfolio 为 \\(\\pi = (s,c,o)\\), 也就是 stock, cash, option.\n\\[\n\\pi^{\\text{naked}} = (0,0,-1).\n\\]\n那么这个 naked portfolio 的价值为 \\(V(\\pi^{\\text{naked}})=-C\\).\n所以:\n\\[\n\\text{PNL}_{\\text{naked}} = V(\\pi^{\\text{naked}}_{\\text{tomorrow}}) - V(\\pi^{\\text{naked}}_{\\text{today}}) = -C_{\\text{tomorrow}} + C_{\\text{today}}.\n\\]\n至于 delta hedging portfolio, 我们设 \\(\\pi^{\\text{delta}} = (x,0,-1)\\).\n那么:\n\\[\n\\Delta_{\\pi^{\\text{delta}}} = x - 0 - \\Delta_C = x - N(d_1).\n\\]\n由于 \\(\\Delta_{\\pi^{\\text{delta}}} = 0\\), 所以 \\(x = N(d_1)\\).\n\\[\\begin{align*}\nV(\\pi^{\\text{delta}}_{\\text{today}}) &= N(d_1) S_{\\text{today}} - C_{\\text{today}} \\\\\nV(\\pi^{\\text{delta}}_{\\text{tomorrow}}) &= N(d_1) S_{\\text{tomorrow}} - C_{\\text{tomorrow}} \\\\\n\\text{PNL}_{\\text{delta}} &= V(\\pi^{\\text{delta}}_{\\text{tomorrow}}) - V(\\pi^{\\text{delta}}_{\\text{today}}) \\\\\n\\end{align*}\\]\n一个数值例子: 设 \\(\\pi = (250, 10000, -200)\\).\n\\[\nV_{\\pi} = 250 S + 10000 - 200 C = 250 \\times 10 + 10000 - 200 \\times 0.25 = 12450.\n\\]\n\\[\n\\Delta_{\\pi} = 250 + 0 - 200 \\times 29\\% = 192.\n\\]\n这就意味着你需要卖出 192 的股票.\n\n\nAn example on delta hedge\n\nr, sigma = 0, 0.3 \ns0, K = 10, 11\ndt = 1/252 # one day \nt = 1/4 # a quarter of year, 3 month\n\n# unpack a dict by using the .values method for dict object\nc, delta, _ = bs_call(s0, K, sigma, t, r).values()\nprint(f'call price = {c}, delta = {delta}') \nbs_call(s0, K, sigma, t, r)\n\ncall price = 0.25002448066930727, delta = 0.28760290709660397\n\n\n{'c': 0.25002448066930727,\n 'delta': 0.28760290709660397,\n 'gamma': 0.2273127644037836}\n\n\n\nprint(bs_call(s0, K, sigma, t, r))\nprint(bs_call(s0, K, sigma, t, r).values())\n\n{'c': 0.25002448066930727, 'delta': 0.28760290709660397, 'gamma': 0.2273127644037836}\ndict_values([0.25002448066930727, 0.28760290709660397, 0.2273127644037836])\n\n\n\n# a range of underlying prices one day later\ns = s0 + np.linspace(-1, 1, 21)\nprint(s)\n\nbs_call(s, K, sigma, t-dt, r)['c']\ndelta*s0 - c\n\n[ 9.   9.1  9.2  9.3  9.4  9.5  9.6  9.7  9.8  9.9 10.  10.1 10.2 10.3\n 10.4 10.5 10.6 10.7 10.8 10.9 11. ]\n\n\n2.6260045902967324\n\n\n\npnl_naked = c - bs_call(s, K, sigma, t-dt, r)['c']\npnl_delta = delta*s - bs_call(s, K, sigma, t-dt, r)['c'] - (delta*s0 - c)\npd.DataFrame({'naked': pnl_naked, 'delta_hedged': pnl_delta})\n\n\n\n\n\n\n\n\nnaked\ndelta_hedged\n\n\n\n\n0\n0.189399\n-0.098204\n\n\n1\n0.178589\n-0.080254\n\n\n2\n0.166344\n-0.063738\n\n\n3\n0.152554\n-0.048768\n\n\n4\n0.137110\n-0.035452\n\n\n5\n0.119905\n-0.023896\n\n\n6\n0.100837\n-0.014204\n\n\n7\n0.079807\n-0.006474\n\n\n8\n0.056725\n-0.000796\n\n\n9\n0.031504\n0.002744\n\n\n10\n0.004069\n0.004069\n\n\n11\n-0.025650\n0.003111\n\n\n12\n-0.057711\n-0.000190\n\n\n13\n-0.092164\n-0.005883\n\n\n14\n-0.129050\n-0.014009\n\n\n15\n-0.168397\n-0.024596\n\n\n16\n-0.210225\n-0.037664\n\n\n17\n-0.254544\n-0.053222\n\n\n18\n-0.301352\n-0.071269\n\n\n19\n-0.350638\n-0.091795\n\n\n20\n-0.402383\n-0.114780\n\n\n\n\n\n\n\n\n# plot\nplt.figure(figsize=(9, 6))\nplt.plot(s, pnl_naked, 'o-', label='Naked call')\nplt.plot(s, pnl_delta, 'o-.', color='orange', label='Delta hedged')\nplt.hlines(y=0, xmin=min(s), xmax=max(s), ls='dashed')\nplt.grid(color='grey', ls='dotted')\nplt.ylabel('P&L', fontsize=15)\nplt.xlabel(r'$s$', fontsize=15)\nplt.legend();\n\n\n\n\n\n\n\n\n\n# zoom into the interval [9.5, 10.5]\nplt.figure(figsize=(9, 6))\nplt.plot(s, pnl_naked, 'o-', label='Naked call')\nplt.plot(s, pnl_delta, 'o-.', color='orange', label='Delta hedged')\nplt.hlines(y=0, xmin=min(s), xmax=max(s), ls='dashed')\nplt.grid(color='grey', ls='dotted')\nplt.ylabel('P&L', fontsize=15)\nplt.xlabel(r'$s$', fontsize=15)\nplt.xlim(9.5, 10.5)\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#an-example-on-delta-gamma-hedge",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#an-example-on-delta-gamma-hedge",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "An example on delta-gamma hedge",
    "text": "An example on delta-gamma hedge\nDelta-gamma neutral: \\(\\displaystyle \\Delta = \\frac{\\partial C}{\\partial S} = 0, \\Gamma = \\frac{\\partial^2 C}{\\partial S^2} = 0\\).\n\\[\n\\Gamma_{\\pi^{\\text{naked}}} = -\\frac{\\partial^2 C}{\\partial S^2} = -\\Gamma_{\\text{call}}.\n\\]\n为了保证 \\(\\Gamma = 0\\), 我们必须引入另一个用来对冲的 option.\n\\[\n\\pi = (\\overset{\\text{stock}}{x}, \\overset{\\text{cash}}{y}, \\overset{\\text{option}}{z}, \\overset{\\text{hedging option}}{w}).\n\\]\n\\[\\begin{align*}\n0 = \\Delta_{\\pi} &= x + 0 + z \\Delta_{\\text{call}} + w \\Delta_{\\text{hedge}} \\\\\n0 = \\Gamma_{\\pi} &= 0 + 0 + z \\Gamma_{\\text{call}} + w \\Gamma_{\\text{hedge}}.\n\\end{align*}\\]\n所以, 我们就有: \\(\\displaystyle w = - \\frac{\\Gamma_{\\text{call}}}{\\Gamma_{\\text{hedge}}}z\\).\n Note \nThe gammas of the underlying and forward are zero. To construct a delta-gamma hedge portfolio we need to add into the portfolio an instrument that has nonzero gamma, say, call or put options.\n\nDelta-Gamma Hedging 是构造一个组合, 使得它对标的资产价格的一阶和二阶变化都不敏感.\n\n现在假设有 \\(-1\\) 单位的 \\(C\\) (卖出 \\(C\\)), \\(x\\) 单位的 \\(C_1\\) (对冲工具), \\(y\\) 单位的标的资产 (这里就是 stock).\n\n\\(\\displaystyle -\\Gamma_C +  x \\Gamma_{C_1} = 0  \\Longrightarrow x = \\frac{\\Gamma_C}{\\Gamma_{C_1}}\\)\n\\(\\displaystyle C + x C_1 + y S\\)\n\\(\\displaystyle -\\Delta_C + x \\Delta_{C_1} + y = 0 \\Longrightarrow y = \\Delta_C - x \\Delta_{C_1}\\)\n\n\nr, sigma, K, s0 = 0, 0.3, 11, 10\ndt, t = 1/252, 1/4\n\n# target call\nc, delta, gamma = bs_call(s0, K, sigma, t, r).values()\n\n# call for hedging\nK_hg = 14\nc_hg, delta_hg, gamma_hg = bs_call(s0, K_hg, sigma, t, r).values()\n\n# 1 day later\ns = s0 + np.linspace(-1, 1, 21)\ncs = bs_call(s, K, sigma, t-dt, r)['c']\npnl_naked = c - cs\npnl_delta = delta*s - cs - (delta*s0 - c)\ndelta_dg = delta - gamma/gamma_hg*delta_hg\ngamma_dg = gamma/gamma_hg\npnl_dg = delta_dg*s + gamma_dg*bs_call(s, K_hg, sigma, t-dt, r)['c'] - cs - (delta_dg*s0 + gamma_dg*c_hg  - c)\n\n# pandas.DataFrame for presentation\ndf = pd.DataFrame(np.array([pnl_naked, pnl_delta, pnl_dg]).transpose())\ndf.columns = ['naked', 'delta hedged', 'delta-gamma hedged']\ndf\n\n\n\n\n\n\n\n\nnaked\ndelta hedged\ndelta-gamma hedged\n\n\n\n\n0\n0.189399\n-0.098204\n-0.025266\n\n\n1\n0.178589\n-0.080254\n-0.018913\n\n\n2\n0.166344\n-0.063738\n-0.013499\n\n\n3\n0.152554\n-0.048768\n-0.009028\n\n\n4\n0.137110\n-0.035452\n-0.005487\n\n\n5\n0.119905\n-0.023896\n-0.002840\n\n\n6\n0.100837\n-0.014204\n-0.001027\n\n\n7\n0.079807\n-0.006474\n0.000038\n\n\n8\n0.056725\n-0.000796\n0.000471\n\n\n9\n0.031504\n0.002744\n0.000423\n\n\n10\n0.004069\n0.004069\n0.000075\n\n\n11\n-0.025650\n0.003111\n-0.000354\n\n\n12\n-0.057711\n-0.000190\n-0.000607\n\n\n13\n-0.092164\n-0.005883\n-0.000389\n\n\n14\n-0.129050\n-0.014009\n0.000633\n\n\n15\n-0.168397\n-0.024596\n0.002832\n\n\n16\n-0.210225\n-0.037664\n0.006620\n\n\n17\n-0.254544\n-0.053222\n0.012447\n\n\n18\n-0.301352\n-0.071269\n0.020799\n\n\n19\n-0.350638\n-0.091795\n0.032197\n\n\n20\n-0.402383\n-0.114780\n0.047194\n\n\n\n\n\n\n\n\n# plot\nplt.figure(figsize=(9, 6))\nplt.plot(s, pnl_naked, 'o-', label='Naked call')\nplt.plot(s, pnl_delta, 'o-.', color='orange', label='Delta hedged')\nplt.plot(s, pnl_dg, 'o-.', color='red', label='Delta Gamma hedged')\nplt.hlines(y=0, xmin=min(s), xmax=max(s), ls='dashed')\nplt.grid(color='grey', ls='dotted')\nplt.ylabel('P&L', fontsize=15)\nplt.xlabel(r'$s$', fontsize=15)\nplt.legend();\n\n\n\n\n\n\n\n\n\n# zoom into the interval [9.5, 10.5]\nplt.figure(figsize=(9, 6))\nplt.plot(s, pnl_naked, 'o-', label='Naked call')\nplt.plot(s, pnl_delta, 'o-.', color='orange', label='Delta hedged')\nplt.plot(s, pnl_dg, 'o-.', color='red', label='Delta Gamma hedged')\nplt.hlines(y=0, xmin=min(s), xmax=max(s), ls='dashed')\nplt.grid(color='grey', ls='dotted')\nplt.ylabel('P&L', fontsize=15)\nplt.xlabel(r'$s$', fontsize=15)\nplt.xlim(9.5, 10.5)\nplt.legend();"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#dynamical-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#dynamical-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Dynamical hedging",
    "text": "Dynamical hedging\nAs market conditions evolve, to maintain the delta neutrality of the portfolio, ideally we should dynamically change the holdings in the portfolio.\n Only delta neutrality, not delta-gamma neutrality.\n\nNote\n\nRebalancing of hedging portfolio is done after observing the price change.\n\n\n\nAn example on dynamical hedging\n\n# parameters\nr, sigma = 0, 0.3\ns0, K = 10, 11\ndt, t, days_forward = 1/252, 1/4, 30\n\n# portfolio positions in cash, options, underlying\n# x : number of shares in underlying\n# y : dollars in cash\n# z : number of options\n\n# short 1000 calls\nz = -1000\n\n# current price and delta of call\nc, delta, _ = bs_call(s0, K, sigma, t, r).values()\n\n# construct a zero value and delta neutral portfolio\nx = delta*(-z)\ny = -(x*s0 + z*c)\nport_value, port_delta = x*s0 + y + z*c, x + z*delta\ns, pnl_cum = s0, 0\n\n# pandas.DataFrame for presentation\npd.DataFrame(np.array([port_value, port_delta, pnl_cum, s, c, x, y, z*delta]).reshape(1, 8))\n\n\n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n0\n-8.526513e-14\n0.0\n0.0\n10.0\n0.250024\n287.602907\n-2626.00459\n-287.602907\n\n\n\n\n\n\n\n\n# 1 day later\ni = 1\ns_new = s0*exp((r - sigma**2/2)*dt + sigma*sqrt(dt)*norm.rvs()) # sample a new stock price\nc_new, delta_new, _ = bs_call(s_new, K, sigma, t-i*dt, r).values()\n\n# portfolio value before rebalance \nport_value_new = x*s_new + y*exp(r*i*dt) + z*c_new\npnl_cum = pnl_cum + port_value_new - port_value\n\n# rebalance to delta neutral\nx_new = delta_new*(-z)\ny_new = y*exp(r*i*dt) + (x - x_new)*s_new\nport_value = x_new*s_new + y_new + z*c_new\nport_delta = x_new + z*delta_new\ns, c, x, delta, y = s_new, c_new, x_new, delta_new, y_new\n\n\n# display the result\npd.DataFrame(np.array([port_value, s, c, y, x]).reshape(1, 5),\n            columns=['portfolio value', 'stock price', 'call price', 'shares', 'cash'])\n\n\n\n\n\n\n\n\nportfolio value\nstock price\ncall price\nshares\ncash\n\n\n\n\n0\n2.546886\n9.892218\n0.216479\n-2367.146177\n261.435023\n\n\n\n\n\n\n\n\n# Let's see how it works for 30 days forward\n# initialize data\nport_value = np.zeros(days_forward+1)\ns = s0 + np.zeros(days_forward+1)\ncalls = c + np.zeros(days_forward+1)\ndeltas = delta + np.zeros(days_forward+1)\nshares = x + np.zeros(days_forward+1)\ncash = y + np.zeros(days_forward+1)\n\nfor i in range(days_forward):    \n    # sample a stock price\n    s[i+1] = s[i]*exp((r - sigma**2/2)*dt + sigma*sqrt(dt)*norm.rvs()) \n    \n    # calculate new call price and delta\n    calls[i+1], deltas[i+1], _ = bs_call(s[i+1], K, sigma, t-i*dt, r).values()\n    \n    # portfolio value before rebalance \n    port_value[i+1] = shares[i]*s[i+1] + cash[i]*exp(r*dt) + z*calls[i+1]\n    \n    # rebalance (self-financing) to delta neutral\n    shares[i+1] = deltas[i+1]*(-z)\n    cash[i+1] = cash[i]*exp(r*dt) + (shares[i] - shares[i+1])*s[i+1]\n    \n# display the result\ndf = pd.DataFrame(np.array([port_value, s, calls, shares, cash]).T)\ndf.columns = ['portfolio value', 'stock price', 'call price', 'shares', 'cash']\ndf\n\n\n\n\n\n\n\n\nportfolio value\nstock price\ncall price\nshares\ncash\n\n\n\n\n0\n0.000000\n10.000000\n0.216479\n261.435023\n-2367.146177\n\n\n1\n-1.685025\n9.942157\n0.233767\n274.561382\n-2497.650498\n\n\n2\n2.268928\n9.941718\n0.229692\n272.461998\n-2476.779020\n\n\n3\n6.211547\n9.932415\n0.223215\n268.327792\n-2435.716366\n\n\n4\n7.977730\n9.800739\n0.186117\n237.182288\n-2130.467417\n\n\n5\n11.198113\n9.743563\n0.169335\n222.740773\n-1989.755598\n\n\n6\n11.639786\n9.924673\n0.209234\n260.177939\n-2361.307222\n\n\n7\n8.445821\n9.679310\n0.148590\n204.653243\n-1823.866480\n\n\n8\n4.882468\n9.424510\n0.100008\n153.308707\n-1339.969360\n\n\n9\n5.726561\n9.286795\n0.078051\n127.580670\n-1101.038366\n\n\n10\n7.598509\n9.388071\n0.089100\n141.955984\n-1235.994839\n\n\n11\n10.324611\n9.406149\n0.088940\n142.546174\n-1241.546252\n\n\n12\n10.635569\n9.585027\n0.114127\n173.031658\n-1533.750432\n\n\n13\n10.375330\n9.783245\n0.148685\n211.536361\n-1910.451358\n\n\n14\n9.859347\n9.595023\n0.109386\n169.590464\n-1507.979495\n\n\n15\n12.248389\n9.514560\n0.093351\n151.388201\n-1334.792971\n\n\n16\n7.022855\n9.221413\n0.054197\n99.998587\n-860.908107\n\n\n17\n9.182860\n9.267979\n0.056694\n104.264357\n-900.443174\n\n\n18\n11.500153\n9.296259\n0.057325\n105.861646\n-915.291984\n\n\n19\n-2.567556\n9.746510\n0.119057\n186.474293\n-1700.983964\n\n\n20\n1.108896\n9.776974\n0.121061\n190.090952\n-1736.343949\n\n\n21\n3.292136\n9.669038\n0.098361\n163.857148\n-1482.688290\n\n\n22\n-1.645460\n9.389589\n0.057509\n109.119273\n-968.722121\n\n\n23\n0.884305\n9.384055\n0.054375\n105.194186\n-931.888885\n\n\n24\n3.350541\n9.372953\n0.050741\n100.368375\n-886.656788\n\n\n25\n5.651420\n9.440110\n0.055180\n108.085315\n-959.505545\n\n\n26\n7.572448\n9.363605\n0.044990\n92.697566\n-815.420747\n\n\n27\n9.973373\n9.384116\n0.044491\n92.648530\n-814.960587\n\n\n28\n11.436208\n9.290807\n0.034383\n75.986501\n-660.156885\n\n\n29\n13.356387\n9.365511\n0.038139\n83.349842\n-729.118332\n\n\n30\n15.200208\n9.307130\n0.031429\n71.947088\n-622.991417"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#dynamic-hedge-in-practice",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#dynamic-hedge-in-practice",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Dynamic hedge in practice",
    "text": "Dynamic hedge in practice\n\nContinuous trading in practice is unrealistic.\nThe tradeoff between frequency of rebalancing and replication of derivative\nImperfect hedge, risk penalty\nTransaction cost, market order or limit order, etc\n\n注: Replication creates an asset or portfolio using a combination of another asset, portfolio, and/or derivative. The following combinations produce the equivalent single asset: Long asset + Short derivative = Long risk free asset."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#deep-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#deep-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Deep hedging",
    "text": "Deep hedging\nResearch works on hedging problem that resort to reinforcement learning techniques include\n\nHalperin, QLBS: Q-Learner in the Black-Scholes(-Merton) Worlds\nBuehler, Gonon, Teichmann, and Wood, Deep hedging\nCao, Chen, Hull, and Poulos, Deep hedging of derivatives using reinforcement learning\nKolm and Ritter, Dynamic replication and hedging: a reinforcement learning approach"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#deep-hedging-in-a-nutshell",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#deep-hedging-in-a-nutshell",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Deep hedging in a nutshell",
    "text": "Deep hedging in a nutshell\nThe key idea behind deep hedging in the aforementioned works is to formulate the hedging problem as a stochastic control problem with certain objective functional, then solve the resulting control problem by the techniques introduced in reinforcement learning.\nLet’s take the work by Cao, Chen, Hull, and Poulos as an example."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#notations",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#notations",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Notations",
    "text": "Notations\n\n\\(i\\): time, running from \\(0\\) to \\(n\\)\n\\(C_i\\): value of the call/derivative at the beginning of the time \\(i\\)\n\\(S_i\\): price of the underlying at the beginning of the time \\(i\\)\n\\(H_i\\): holdings of the underlying between time \\(i\\) and \\(i+1\\).\n\\(\\kappa\\): proportional transaction cost\n\\(R_i\\): running reward gained at time \\(i\\)"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#settings-in-cao-chen-hull-poulos",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#settings-in-cao-chen-hull-poulos",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Settings in Cao-Chen-Hull-Poulos",
    "text": "Settings in Cao-Chen-Hull-Poulos\nCao-Chen-Hull-Poulos formulate the hedging problem as follows.\n\na trader is hedging a short position in a call option\nhedging portfolio consisting of shares in the underlying, no cash component?\nthe trader re-balances his position at time intervals of length \\(\\Delta t\\) and is subject to trading costs\nThe life of the option is \\(n\\).\nThe cost of a trade in the underlying asset is proportional to the value of what is being bought or sold\nThe state at time \\(i\\) is defined by three parameters:\n\nThe holding \\(H_{i-1}\\) of the asset during the previous time period; i.e., from time \\(i-1\\) to time \\(i\\)\nThe asset price \\(S_i\\) at time \\(i\\)\nThe time to maturity \\((n-i)\\)\n\nThe action/control \\(H_i\\) at time \\(i\\) is the amount of the asset to be held for the next period, i.e., from time \\(i\\) to time \\(i+1\\).\nRebalance is done after observing the price change."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#two-alternative-formulations",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#two-alternative-formulations",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Two alternative formulations",
    "text": "Two alternative formulations\n\nThere are two alternative formulations for the hedging problem:\n\nthe accounting P&L formulation\nthe cash flow formulation.\n\nFor ease of exposition, no discounting is assumed in the control problem, i.e., \\(\\gamma=1\\)"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#accounting-pl-formulation",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#accounting-pl-formulation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Accounting P&L formulation",
    "text": "Accounting P&L formulation\nFor \\(1 \\leq i \\leq n\\), define the running reward gained at time \\(i\\) as\n\\[\n\\begin{aligned}\n  R_i &= -C_i + C_{i-1} + H_{i-1} (S_i - S_{i-1}) - \\kappa |S_i (H_i - H_{i-1})| \\\\\n      &= -\\Delta C_i + \\underbrace{H_{i-1} \\Delta S_i}_{\\text{marked to market}} - \\underbrace{\\kappa |S_i \\Delta H_i|}_{\\text{transaction cost}}.\n\\end{aligned}\n\\]\nNote that this formulation is consistent with the self-financing condition with transaction cost that was discussed previously. To set up the hedging initially and liquidate the position at expiry of option, we add to the (undiscounted) cumulative rewards\n\ninitial reward: \\(-\\kappa|S_0 H_0|\\)\nterminal reward: \\(-\\kappa|S_n H_n|\\)\n\nThus, the performance criterion \\(Y^A\\) for a given hedging strategy \\((H_0, \\cdots, H_n)\\) reads\n\\[\n\\begin{aligned}\n  Y^A &= -\\kappa |S_0 H_0| + \\sum_{i=1}^n R_i - \\kappa |S_n H_n| \\\\\n      &= -\\kappa |S_0 H_0| + C_0 - C_n + \\sum_{i=1}^n H_{i-1} \\Delta S_i - \\kappa \\sum_{i=1}^n |S_i \\Delta H_i| - \\kappa |S_n H_n|.\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#cashflow-formulation",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#cashflow-formulation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Cashflow formulation",
    "text": "Cashflow formulation\nIn this formulation, for \\(1 \\leq i \\leq n\\), the running reward gained at time \\(i\\) is defined by\n\\[\nR_i = S_i(H_{i-1} - H_i) - \\kappa |S_i(H_i - H_{i-1})|\n= -S_i \\Delta H_i - \\kappa |S_i \\Delta H_i|\n\\]\nwith - initial cost for setting up a position: \\(-S_0H_0 - \\kappa|S_0 H_0|\\) - terminal cost for liquidate the position and payoff to call: \\(S_nH_n - \\kappa|S_n H_n| - C_n\\).\nThus, the performance criterion \\(Y^C\\) for a given hedging strategy \\((H_0, \\cdots, H_n)\\) reads\n\\[\n\\begin{aligned}\n  Y^C &= -S_0 H_0 - \\kappa |S_0 H_0| + \\sum_{i=1}^n R_i + S_n H_n - \\kappa |S_n H_n| - C_n \\\\\n      &= -S_0 H_0 - \\kappa |S_0 H_0| - \\sum_{i=1}^n S_i \\Delta H_i - \\kappa \\sum_{i=1}^n |S_i \\Delta H_i| + S_n H_n - \\kappa |S_n H_n| - C_n.\n\\end{aligned}\n\\]"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#accounting-pl-vs-cashflow",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#accounting-pl-vs-cashflow",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Accounting P&L vs cashflow",
    "text": "Accounting P&L vs cashflow\nRecall that\n\\[\n\\begin{aligned}\n  Y^A &= -\\kappa |S_0 H_0| + C_0 - C_n + \\sum_{i=1}^n H_{i-1} \\Delta S_i - \\kappa \\sum_{i=1}^n |S_i \\Delta H_i| - \\kappa |S_n H_n| \\\\\n      &= -\\kappa |S_0 H_0| + C_0 - C_n + H_n S_n - H_0 S_0 - \\sum_{i=1}^n S_i \\Delta H_i - \\kappa \\sum_{i=1}^n |S_i \\Delta H_i| - \\kappa |S_n H_n|.\n\\end{aligned}\n\\]\nwhere in the last equality we applied the following summation by parts formula\n\\[\n\\sum_{i=1}^n H_{i-1} \\Delta S_i = H_n S_n - H_0 S_0 - \\sum_{i=1}^n S_i \\Delta H_i.\n\\]\nIt follows that\n\\[\nY^A - Y^C = C_0.\n\\]\nThe two formulations are basically the same."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#objective-functional-and-resulting-control-problem",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#objective-functional-and-resulting-control-problem",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Objective functional and resulting control problem",
    "text": "Objective functional and resulting control problem\nObjective functional for the performance criterion \\(Y\\) is given by its expectation penalized by a risk measure. Namely,\n\\[\n\\Eof{Y} - \\lambda \\rho(Y),\n\\]\nwhere \\(\\rho\\) is certain prespecified risk measure. Hence, the hedging problem can be recast as the following stochastic control problem\n\\[\n\\max_{(H_0, \\cdots, H_n)} \\Eof{Y} - \\lambda \\rho(Y).\n\\]\nFrom this point on, reinforcement learning techniques are then applied to solve the above control problem.\n\nNote\n\nIn the original Cao-Chen-Hull-Poulos paper, the authors chose to penalize the expected reward by standard deviation. However, from control theory point of view, penalizing expected reward by variance/standard deviation will induce (unnecessary?) difficulty due to time inconsistency.\nIn the Buehler et al paper, the authors utilized the expected shortfall or conditional value-at-risk as the risk measure."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#implementation-of-deep-hedging-in-tensorflow",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#implementation-of-deep-hedging-in-tensorflow",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Implementation of Deep hedging in Tensorflow",
    "text": "Implementation of Deep hedging in Tensorflow\nCourtsey: Laura He and Tony Xie, Baruch MFE 2020"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#deep-hedging-implementation-with-ddpg-algorithm",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#deep-hedging-implementation-with-ddpg-algorithm",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Deep-hedging implementation with DDPG Algorithm",
    "text": "Deep-hedging implementation with DDPG Algorithm\nStep 1 Initialize neural network of \\(Q_1(s,a|\\theta^{Q_1}), Q_2(s,a|\\theta^{Q_2})\\) and policy function \\(\\mu(s|\\theta^\\mu)\\). Set target networks \\(Q_1' \\leftarrow Q_1,Q_2' \\leftarrow Q_2,\\mu' \\leftarrow \\mu\\). Create replay buffer \\(R\\).\nStep 2 Begin loop:\nfor episode \\(= 1\\) to n_path:\nGenerate random process \\({N_i}, i = 0, 1, ..., m\\) for action exploration.  Get initial state: \\(s_0 = [S_0\\)(stock price), \\(V_0\\)(option price), \\(H_{-1} = 0\\)(holding), \\(\\tau_0 = T = m\\, \\mathrm{d}t\\)(time to maturity)\\(]\\).\nfor \\(i = 0\\) to \\(m\\) (\\(m\\) time intervals):\nStep 2.1 Calculate action: \\(a_i = (1-\\epsilon_i)\\mu(s_i|\\theta^\\mu) + \\epsilon_i N_i,\\,\\, s_i = [S_i, V_i, H_{i-1}, \\tau_i = (m-i)\\mathrm{d}t]\\)  Step 2.2 Execute \\(a_i\\). Get \\(r_i = -(V_{i+1} - V_i) + H_i(S_{i+1} - S_i) - \\kappa |S_ia_i|,\\,\\, 0\\leqslant i&lt;m\\)  \\(\\hspace{4.2 cm} r_m = - \\kappa|S_mH_{m-1}|\\)  Step 2.3 Observe new state: \\(s_{i+1} = [S_{i+1}, V_{i+1}, H_i = H_{i-1}+a_i, \\tau_{i+1} = (m-i-1)\\mathrm{d}t]\\)  Step 2.4 Store \\((s_i, a_i, r_i, s_{i+1})\\) in the replay buffer \\(R\\).  Step 2.5 Sample \\(J\\) transitions from \\(R\\), mark as \\((s_j, a_j, r_j, s_{j+1}), \\,\\, j = 1 \\sim N/ J?\\)  \\(\\hspace{1.6 cm}y_j^{(1)} = r_j + \\gamma Q_1'(s_{i+1}, \\mu'(s_{i+1}|\\theta^{\\mu'})|\\theta^{Q'})\\)\n$y_j^{(2)} = r_j^2 + ^2 Q_2’(s_{i+1}, ‘(s_{i+1}|{’})|{Q’}) + 2 r_j Q_1’(s_{i+1}, ‘(s_{i+1}|{’})|{Q’}) $\n\\(\\hspace{1.4 cm}\\) Update \\(Q_{1,2}\\): \\(Q_{1,2} = \\underset{Q_{1,2}}{\\mathrm{argmin}}\\left\\{\\frac{1}{J}\\sum_j\\left(y_j^{(1,2)} - Q_{1,2}(s_j,a_j|\\theta^{Q_{1,2}})\\right)^2\\right\\}\\)  \\(\\hspace{1.4 cm}\\) Update \\(\\mu\\) using gradient descent: \\(\\nabla_{\\theta^{\\mu}}G = \\frac{1}{J}\\sum_j\\nabla_aF(s_j, a_j|\\theta^{Q_{1,2}})\\nabla_{\\theta^{\\mu}}\\mu(s_j|\\theta^{\\mu}),\\,\\, \\theta^\\mu = \\theta^\\mu - \\nabla_{\\theta^\\mu}G \\times \\text{step}\\)\nStep 2.6 Update the target networks: \\(\\theta^{Q'_{1,2}} \\leftarrow \\tau\\theta^{Q_{1,2}} + (1-\\tau)\\theta^{Q'_{1,2}}, \\,\\,\\theta^{\\mu'} \\leftarrow \\tau\\theta^\\mu + (1-\\tau)\\theta^{\\mu'}\\)\n\npip show DDPG\n\nNote: you may need to restart the kernel to use updated packages.\n\n\nWARNING: Package(s) not found: DDPG\n\n\n\n# import DDPG and other related packages\n\nimport numpy as np\nfrom DDPG.world import World\nimport tensorflow as tf\nfrom DDPG.blackscholesgenerator import GenerateBSPath, BSCall\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#performance-of-deep-hedging-vs-delta-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#performance-of-deep-hedging-vs-delta-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Performance of deep hedging vs delta hedging",
    "text": "Performance of deep hedging vs delta hedging\n\n# python function to implement the trained model \ndef DDPG(n_path=5000, m=4, T=1/12, r=0, q=0, sigma=0.2, S0=100, K=100, model_path=\"\"):\n    stock_price, call_price, call_delta = GenerateBSPath(n_path=n_path, \\\n                m=m, T=T, r=r, q=q, sigma=sigma, S0=S0, K=K)\n        \n    V0 = call_price[0,0]\n    initial_state = np.array([S0, V0, 0, T])\n    state_size, action_size = 4, 1\n\n    world = World(state_size, action_size, initial_state, dt=T/m)\n    # load-in saved (trained) model \n    # actor_model = tf.keras.models.load_model(f'{model_path}/Actor_Model', compile=False)\n    actor_model = tf.keras.layers.TFSMLayer(\n        f'{model_path}/Actor_Model', \n        call_endpoint='serving_default'\n    )\n\n    actions_model = np.zeros((n_path, m))\n    rewards = np.zeros(n_path)\n\n    for episode in range(n_path):\n\n        if episode % 2000 == 0:\n            print(episode)\n\n        world.initialize()\n\n        for i in range(m):\n            state = world.get_state()\n            output = actor_model(np.array([state])) # 假设 output 是字典\n            first_value = next(iter(output.values())).numpy()[0, 0]  # 提取第一个值并转为标量\n            actions_model[episode, i] = first_value\n            # actor_model(np.array([state]))[0,0]\n            next_state, reward, done = world.act(actions_model[episode, i], (stock_price[episode, i+1], call_price[episode, i+1]))\n            rewards[episode] += reward \n\n        state = world.get_state()\n        rewards[episode] += world.act(0, (0,0))[1]\n\n#    print(actions_model)\n    \n    positions = call_delta[:,:m]\n    actions = np.hstack((call_delta[:,0].reshape(n_path,1), np.diff(call_delta[:,:m], axis = 1)))\n    payoff = positions*np.diff(stock_price, axis=1) - np.diff(call_price, axis=1) - np.abs(actions*stock_price[:,:m])*0.01 \n    payoff = np.sum(payoff, axis=1)\n    payoff -= np.abs(call_delta[:,m]*stock_price[:,m])*0.01\n        \n    payoff_zero = - np.diff(call_price, axis = 1) \n    payoff_zero = np.sum(payoff_zero, axis = 1)\n    \n    hedging_cost_mean = np.array([-rewards.mean(), -payoff.mean(), -payoff_zero.mean()])\n    hedging_cost_std = np.array([rewards.std(), payoff.std(), payoff_zero.std()])\n    obj_func = hedging_cost_mean + 1.5*hedging_cost_std\n    \n    method_name = [\"DDPG\", \"Delta\", \"No Hedge\"]\n    hedging_cost_mean = np.array([-rewards.mean(), -payoff.mean(), -payoff_zero.mean()])\n    hedging_cost_std = np.array([rewards.std(), payoff.std(), payoff_zero.std()])\n    obj_func = hedging_cost_mean + 1.5*hedging_cost_std\n    \n    mean_in_price = 100 * hedging_cost_mean / V0\n    std_in_price = 100 * hedging_cost_std / V0\n    obj_func_in_price = mean_in_price + 1.5*std_in_price\n    \n    result = pd.DataFrame({'Name': method_name,\n                           'Mean': hedging_cost_mean,\n                           'STD': hedging_cost_std, \n                           'Obj Func': obj_func, #\\\n                           'Mean in Option Price(%)': mean_in_price, \n                           'STD in Option Price(%)': std_in_price, #\\\n                           'Obj Func in Option Price(%)': obj_func_in_price})\n    \n    print(f\"----------- DDPG Result: {m} hedges in {int(T*12)} month. -----------\")\n        \n    print(result)\n    \n    plt.figure(figsize=(8,6))\n    sns.histplot(rewards, label='DDPG', kde=True, stat='density', element='step')\n    sns.histplot(payoff, kde=True, label='Delta', stat='density', color='orange', element='step')\n    plt.legend()\n    plt.show()\n    \n    return actor_model\n\n\n# function for plotting optimal policy \nfrom mpl_toolkits.mplot3d import Axes3D\n\ndef plotAction(curr_model):\n    \n    TT = np.arange(0, 1, 0.05)\n    SS = np.arange(80, 120, 0.5)\n    Y, X = np.meshgrid(TT, SS)\n    Z_DDPG = np.zeros((SS.shape[0], TT.shape[0]))\n    #Z_BS = np.zeros((SS.shape[0], TT.shape[0]))\n\n    for i in range(SS.shape[0]):\n        for j in range(TT.shape[0]):\n            BS_model = BSCall(T=TT[j], sigma=sigma, S0=SS[i])\n            output = curr_model(np.array([[SS[i],BS_model[0],0,TT[j]]]))\n            Z_DDPG[i,j] = next(iter(output.values())).numpy()[0][0]\n            #Z_BS[i,j] = BS_model[1]\n        \n    V0 = BSCall(T=T, sigma=sigma, S0=S0)[0]\n    BS_action_pos = [next(iter(curr_model(np.array([[S0, V0, _pos, T]])).values())).numpy()[0][0] for _pos in np.arange(-1,1,0.05)]\n    \n    # %matplotlib notebook\n    fig = plt.figure(figsize=(16,6))  \n    ax3 = fig.add_subplot(1, 2, 1, projection='3d')\n    ax3.plot_surface(X, Y, Z_DDPG)\n    # ax3.plot_surface(X,Y,Z_BS)\n    plt.title(\"Action vs. Stock price & Time to maturity\")\n    plt.xlabel(\"Stock price\")\n    plt.ylabel(\"Time to maturity\")\n    \n    ax2 = fig.add_subplot(1, 2, 2)\n    ax2.plot(np.arange(-1, 1, 0.05), BS_action_pos)\n    plt.title(\"Action vs. Position\")\n    plt.xlabel(\"Position\")\n    plt.show();"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#one-month-option-weekly-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#one-month-option-weekly-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "One-month option, weekly hedging",
    "text": "One-month option, weekly hedging\n\n%%time\n# model paramters\nr, q, sigma, S0, K = 0, 0, 0.2, 100, 100\n\n# simulation parameters\n# option expires in a month, hedging weekly\nT, m, n_path = 1/12, 4, 5_000\n\nmodel_path = \"DDPG/trained_models/1m/weekly\"\n\n# set random seed for reproducing the result\nnp.random.seed(9999)\n\nweekly = DDPG(n_path=n_path, m=m, T=T, r=r, q=q, sigma=sigma, S0=S0, K=K, model_path=model_path)\n\n0\n2000\n4000\n----------- DDPG Result: 4 hedges in 1 month. -----------\n       Name      Mean       STD  Obj Func  Mean in Option Price(%)  \\\n0      DDPG  1.135191  2.199476  4.434405                49.292365   \n1     Delta  1.543443  1.172043  3.301507                67.019524   \n2  No Hedge  0.053613  3.528923  5.346998                 2.327991   \n\n   STD in Option Price(%)  Obj Func in Option Price(%)  \n0               95.505890                   192.551201  \n1               50.892563                   143.358369  \n2              153.233282                   232.177914  \n\n\n\n\n\n\n\n\n\nCPU times: total: 3.03 s\nWall time: 23.8 s"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#what-does-the-optimal-action-look-like",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#what-does-the-optimal-action-look-like",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "What does the optimal action look like?",
    "text": "What does the optimal action look like?\n\nplotAction(weekly)"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#one-month-option-tridaily-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#one-month-option-tridaily-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "One-month option, tridaily hedging",
    "text": "One-month option, tridaily hedging\n\n%%time\n# one month option, tridaily hedging\nT, m = 1/12, 10\nmodel_path = \"DDPG/trained_models/1m/3-day\"\ntridaily = DDPG(n_path=n_path, m=m, T=T, r=r, q=q, sigma=sigma, S0=S0, K=K, model_path=model_path)\n\n0\n2000\n4000\n----------- DDPG Result: 10 hedges in 1 month. -----------\n       Name      Mean       STD  Obj Func  Mean in Option Price(%)  \\\n0      DDPG  1.798405  2.092016  4.936429                78.090545   \n1     Delta  1.957786  0.940487  3.368517                85.011175   \n2  No Hedge  0.017840  3.497339  5.263849                 0.774652   \n\n   STD in Option Price(%)  Obj Func in Option Price(%)  \n0               90.839724                   214.350131  \n1               40.837944                   146.268091  \n2              151.861840                   228.567411  \n\n\n\n\n\n\n\n\n\nCPU times: total: 7.06 s\nWall time: 53.4 s\n\n\n\n# plot tridaily action function \nplotAction(tridaily)"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#month-option-weekly-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#month-option-weekly-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "3-month option, weekly hedging",
    "text": "3-month option, weekly hedging\n\n%%time\n# 3 months option, weekly hedging\nT, m = 3/12, 4\nmodel_path = \"DDPG/trained_models/3m/weekly\"\nweekly_3m = DDPG(n_path=n_path, m=m, T=T, r=r, q=q, sigma=sigma, S0=S0, K=K, model_path=model_path)\n\n0\n2000\n4000\n----------- DDPG Result: 4 hedges in 3 month. -----------\n       Name      Mean       STD  Obj Func  Mean in Option Price(%)  \\\n0      DDPG  0.857973  3.904091  6.714109                21.515145   \n1     Delta  1.474011  1.784586  4.150890                36.963365   \n2  No Hedge -0.124989  6.013195  8.894803                -3.134323   \n\n   STD in Option Price(%)  Obj Func in Option Price(%)  \n0               97.901820                   168.367874  \n1               44.751576                   104.090729  \n2              150.791253                   223.052557  \n\n\n\n\n\n\n\n\n\nCPU times: total: 2.89 s\nWall time: 19.6 s\n\n\n\nplotAction(weekly_3m)"
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#concluding-remarks-on-deep-hedging",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#concluding-remarks-on-deep-hedging",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Concluding remarks on deep hedging",
    "text": "Concluding remarks on deep hedging\n\nHedging with DDPG Algorithm can reduce the average hedging cost, however, it increases the variance of cost for the Black-Scholes model and probably also for stochastic volatility models.\nAs is mentioned in the original paper, the impact of trading costs (or transaction cost) is to under-hedge relative to delta hedging in some situations and over-hedge in other situations. By hedging short European call option position, we observe under-hedge relative to delta hedging.\nOne may be able to reduce the variance of hedging cost in the DDPG Algorithm by adding more paths for training. In the code, we used 5000 training paths for each model while renewing the model after each episode. However, using too many paths in the training stage may result in overfitting."
  },
  {
    "objectID": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#lecture-notes",
    "href": "NSD_Lec03-BlackMertonScholes-1_Summer2025.html#lecture-notes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Lecture Notes",
    "text": "Lecture Notes\nThanks to 段凤仪 (Duàn Fèng Yí) for her lecture notes.\n\nBlack-Scholes Model\n\nRevolutionary Concept: The Black-Scholes model, developed 24 years ago, introduced groundbreaking ideas that transformed option pricing. It challenged traditional static hedging approaches with dynamic hedging, emphasizing continuous position adjustment.\nNew Ideas: Key concepts include delta hedging, where the number of shares held (\\(\\Delta\\)) equals the partial derivative of the option price with respect to the stock price (\\(\\displaystyle \\frac{\\partial C}{\\partial S}\\)). This approach aims to make the portfolio risk-free.\n\n模型假设:\n\nStock Price Movement: The model assumes that stock prices follow a geometric Brownian motion, where the return (change in price over price) follows a normal distribution. This assumption simplifies the pricing process.\nRisk-Neutral Pricing: When pricing options, the model assumes a risk-neutral environment, where the expected return on the stock is equal to the risk-free interest rate. This assumption allows for consistent pricing across different market conditions.\n\n\n\nOption Pricing with the Black-Scholes Model\n\nPricing Formula\n\nCall Option Price: The formula for call option price is\n\n\\[\nC = S e^{-D \\tau} N(d_1) - K e^{-r \\tau} N(d_2),\n\\]\nwhere \\(S\\) is the stock price, \\(K\\) is the strike price, \\(D\\) is the dividend rate, \\(r\\) is the risk-free interest rate, \\(\\tau\\) is the time to expiration, and \\(N(d_1)\\) and \\(N(d_2)\\) are the cumulative distribution functions of the standard normal distribution.\n\nPut Option Price: The put option price formula is\n\n\\[\nP = K e^{-r \\tau} N(-d_2) - S e^{-D \\tau} N(-d_1).\n\\]\n\n\nParameter Estimation\n\nVolatility: Volatility (\\(\\sigma\\)) is a crucial parameter in the Black-Scholes model. It represents the degree of price fluctuation of the underlying asset. Estimating volatility accurately is challenging but essential for option pricing.\nOther Parameters: Other parameters such as stock price, strike price, interest rate, and time to expiration are usually observable in the market. However, dividend rate may require estimation based on historical data or company announcements.\n\n\n\n\n期权定价与对冲\nExample:\n\n\n有家公司持续卖出虚值看涨期权十多年 (此时买方行权无利可图), 赚取权利金, 但某次市场大幅上涨导致巨额亏损 (大量买方要求行权), CEO 公开道歉. 说明即使概率很小, 卖方面临的潜在损失是无限的.\n买入期权最多损失期权费; 而卖出看涨期权若未对冲, 损失可能极大. 因此大规模机构 (如对冲基金) 必须对冲.\n\n\n\nDelta Hedging\n构建方法: 通过计算资产组合中股票、现金和期权的 delta, 使组合总 delta 为 0. 例如, 卖出一个 call 期权后, 持有相应数量的股票可以实现 delta 中性.\n\n\nDelta-Gamma Hedging\n概念介绍: 除了 delta 中性, 还使组合的 gamma 也为 0. 由于股票 gamma 为 0, 需要额外引入另一个期权来中和 gamma.\n\n\n\nBlack-Scholes 模型与隐含波动率\n历史背景: Black-Scholes 模型自 1973 年起被广泛使用, 人们最初通过历史波动率来计算期权价格.\n现实缺陷: 实际市场中, 用市场价格倒推出的隐含波动率发现其在不同行权价和期限上并不一致, 说明模型与现实存在差距.\n隐含波动率的重要性\n\n市场情绪指标: 隐含波动率代表市场对未来波动的预期, 是投资者情绪的反映.\n模型改进方向: 隐含波动率的发现也推动了模型的改进, 比如局部波动率模型、随机波动率模型等, 使模型更贴合实际.\n\n\n\nJump Trading\n\n公司发展与交易策略\n\n科技驱动: 1999 年创立于芝加哥交易所, 致力于电子交易, 从传统套利逐步转型.\n多频率交易: 涵盖高频、中频、低频交易, 利用线性回归、机器学习、AI 等策略.\n技术投入: 拥有高性能 C++ 系统、自研硬件和超级计算集群, 在网络传输方面投入巨大.\n\n公司文化与价值观\n\n扁平结构: 组织层级少, 决策快速, 员工有自由提出和实现想法.\n按能力奖励: 鼓励创新, 好的点子不论出自谁都能被采纳.\n文化活动丰富: 如公司提供早餐、午餐、下午茶, 举办全球扑克牌比赛、乒乓赛等，营造轻松氛围.\n\n招聘信息\n\n实习项目: 夏季 10 周, 包括 3 周培训与轮岗, 真实参与项目, 导师每周反馈.\n全职机会: 表现好的实习生可直接获得正式工作邀请."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\def\\Cov{{ \\text{Cov} }}\n\\def\\ES{{ \\text{ES} }}\n\\def\\Var{{ \\text{Var} }}\n\\def\\VaR{{ \\text{VaR} }}\n\\def\\sd{{ \\text{sd} }}\n\\def\\corr{{ \\text{corr} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\renewcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\renewcommand{\\angl}[1]{\\langle #1 \\rangle}\n\\]"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#lecture-5-volatility-and-volatility-linked-derivatives",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#lecture-5-volatility-and-volatility-linked-derivatives",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "",
    "text": "Tai-Ho Wang (王 太和)\n\n\\[\n\\newcommand{\\bea}{\\begin{eqnarray}}\n\\newcommand{\\eea}{\\end{eqnarray}}\n\\newcommand{\\supp}{\\mathrm{supp}}\n\\newcommand{\\F}{\\mathcal{F} }\n\\newcommand{\\cF}{\\mathcal{F} }\n\\newcommand{\\E}{\\mathbb{E} }\n\\newcommand{\\Eof}[1]{\\mathbb{E}\\left[ #1 \\right]}\n\\newcommand{\\Etof}[1]{\\mathbb{E}_t\\left[ #1 \\right]}\n\\def\\Cov{{ \\text{Cov} }}\n\\def\\ES{{ \\text{ES} }}\n\\def\\Var{{ \\text{Var} }}\n\\def\\VaR{{ \\text{VaR} }}\n\\def\\sd{{ \\text{sd} }}\n\\def\\corr{{ \\text{corr} }}\n\\newcommand{\\1}{\\mathbf{1} }\n\\newcommand{\\p}{\\partial}\n\\newcommand{\\PP}{\\mathbb{P} }\n\\newcommand{\\Pof}[1]{\\mathbb{P}\\left[ #1 \\right]}\n\\newcommand{\\QQ}{\\mathbb{Q} }\n\\renewcommand{\\R}{\\mathbb{R} }\n\\newcommand{\\DD}{\\mathbb{D} }\n\\newcommand{\\HH}{\\mathbb{H} }\n\\newcommand{\\spn}{\\mathrm{span} }\n\\newcommand{\\cov}{\\mathrm{cov} }\n\\newcommand{\\HS}{\\mathcal{L}_{\\mathrm{HS}} }\n\\newcommand{\\Hess}{\\mathrm{Hess} }\n\\newcommand{\\trace}{\\mathrm{trace} }\n\\newcommand{\\LL}{\\mathcal{L} }\n\\newcommand{\\s}{\\mathcal{S} }\n\\newcommand{\\ee}{\\mathcal{E} }\n\\newcommand{\\ff}{\\mathcal{F} }\n\\newcommand{\\hh}{\\mathcal{H} }\n\\newcommand{\\bb}{\\mathcal{B} }\n\\newcommand{\\dd}{\\mathcal{D} }\n\\newcommand{\\g}{\\mathcal{G} }\n\\newcommand{\\half}{\\frac{1}{2} }\n\\newcommand{\\T}{\\mathcal{T} }\n\\newcommand{\\bit}{\\begin{itemize}}\n\\newcommand{\\eit}{\\end{itemize}}\n\\newcommand{\\beq}{\\begin{equation}}\n\\newcommand{\\eeq}{\\end{equation}}\n\\newcommand{\\tr}{\\text{tr}}\n\\renewcommand{\\angl}[1]{\\langle #1 \\rangle}\n\\]"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#agenda",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#agenda",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Agenda",
    "text": "Agenda\n\nVolatility and its various estimators\n\nHistorical volatility\nImplied volatility\nRealized variance\nVIX\n\nImplied volatility\n\nEstimating discount factor and dividend rates by put-call parity\nGPR fit of implied volatilities\n\nVolatility indices published by CBOE\nVolatility linked derivatives\n\nVIX option\n\nAppendix (Optional)\n\nRealized variance from high frequency data\nThe Corsi HAR-RV forecast"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#what-is-volatility",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#what-is-volatility",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "What is volatility?",
    "text": "What is volatility?\nFrom the Wikipage:\n\nIn finance, volatility (symbol \\(\\sigma\\)) is the degree of variation of a trading price series over time as measured by the standard deviation of logarithmic returns.\n\nHistoric volatility measures a time series of past market prices.\nImplied volatility looks forward in time, being derived from the market price of a market-traded derivative (in particular, an option).\nRealized variance estimates the integrated variance or quadratic variation by using high frequency data.\n\n\n注: 波动率是金融资产价格的波动程度."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#why-is-volatility-important",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#why-is-volatility-important",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Why is volatility important?",
    "text": "Why is volatility important?\nFrom the same Wikipage:\n\nInvestors care about volatility for at least the following reasons:\n\nThe wider the swings in an investment’s price, the harder emotionally it is to not worry;\nPrice volatility of a trading instrument can define position sizing in a portfolio;\nWhen certain cash flows from selling a security are needed at a specific future date, higher volatility means a greater chance of a shortfall;\nHigher volatility of returns while saving for retirement results in a wider distribution of possible final portfolio values;\nHigher volatility of return when retired gives withdrawals a larger permanent impact on the portfolio’s value;\nPrice volatility presents opportunities to buy assets cheaply and sell when overpriced;\n Portfolio volatility has a negative impact on the compound annual growth rate (CAGR) of that portfolio \nVolatility affects pricing of options, being a parameter of the Black–Scholes model.\n\n\nIn today’s markets, it is also possible to trade volatility directly, through the use of derivative securities such as options and variance swaps."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatilities",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatilities",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Volatilities",
    "text": "Volatilities\nVolatility of a financial asset in its most preliminary form is defined as the (conditional) standard deviation of its log return. In practice, there exist various notions of “volatility” that are commonly used including\n\nHistorical volatility (历史波动率)\nRealized and integrated variance/volatility (实际波动率, 一个理论上的, 无法被计算的值)\nImplied volatility (隐含波动率, 隐含波动率是制期权市场投资者在进行期权交易时对实际波动率的认识)\nInstantaneous volatility (瞬时波动率)\n\nand methods of inferring these volatilities respectively from\n\nDaily or high-frequency time series data of the underlying\nPrice series of variance swap\nPrices of liquidly traded vanilla options\n\nDaily closing prices \\(S_t\\): \\(S_0, S_1, S_2, ..., S_T\\).\nLog return \\(\\displaystyle r_t = \\log (S_t/S_{t-1})\\).\nThen the daily volatility is defined as: \\[\n\\sigma_t = \\sqrt{\\Eof{r_t^2}} = \\sqrt{\\Eof{\\left(\\log S_t/S_{t-1}\\right)^2}}.\n\\]\nAnd the annualized volatility is defined as: \\[\n\\sigma_t^{\\text{annualized}} = \\sqrt{252} \\cdot \\sigma_t.\n\\]\nThe constant \\(\\sqrt{252}\\) is used to convert the daily volatility to annualized volatility, assuming there are 252 trading days in a year."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#historical-volatility",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#historical-volatility",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Historical volatility",
    "text": "Historical volatility\nHistorical volatility uses, say daily, price series to calculate the sample conditional standard deviation of log returns in rolling time windows of a prespecified width."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#example-of-historical-volatility",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#example-of-historical-volatility",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Example of historical volatility",
    "text": "Example of historical volatility\nNow let’s calculate the volatility of S&P500 using 25-day rolling time windows.\nOne can calculate the volatility series of the input price series \\(S_t\\), \\(1 \\leq t \\leq T\\), by the following formula\n\\[\n\\sigma_t = \\sqrt{\\frac N{n-2}\\sum_{i=1}^{n-1} (r_i - \\bar r)^2}, \\quad \\text{ for } n \\leq t \\leq T,\n\\]\nwhere\n\\[\\begin{aligned}\nr_i &= \\ln S_{t + i} - \\ln S_{t + i - 1}, \\quad \\text{for } 1 \\leq i \\leq n - 1, \\\\\n\\bar{r} &= \\frac{1}{n-1} \\sum_{i=1}^{n-1} r_i.\n\\end{aligned}\\]\n\nNote\n\n\\(n\\) denotes the width (number of days) of rolling window\n\\(N\\) denotes the number of days in a year, thus \\(\\sqrt N\\) is the annualized factor\nThe first \\(n-1\\) points in the output volatility series appear as NA, for an obvious reason.\n\n\n\nExponentially weighted moving average (EWMA)\nAn alternative to calculate historical volatility is the exponentially weighted moving average method.\n\\[\n\\sigma_t = \\sqrt{N(1 - \\lambda)\\sum_{i=1}^{\\infty} \\lambda^i (r_{t - i} - \\bar r)^2}, \\quad \\text{ for } n \\leq t \\leq T,\n\\]\nfor some \\(\\lambda \\in (0, 1)\\)."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#now-lets-dirty-our-hands",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#now-lets-dirty-our-hands",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Now let’s dirty our hands …",
    "text": "Now let’s dirty our hands …\n注: SPX stands for S&P 500 index, which is a stock market index that measures the stock performance of 500 large companies listed on stock exchanges in the United States.\n\n#pip install yfinance\n\n\nimport yfinance as yf\n\n\nimport numpy as np\nfrom numpy import exp, log, sqrt\nimport scipy.stats as ss\nfrom scipy.stats import norm\nimport pandas as pd\nimport yfinance as yf\nimport matplotlib.pyplot as plt\nimport statsmodels.formula.api as sm\n\n\nTips: You may skip the next 5 cells if you encounter an error.\n\nimport os\nproxy = 'http://127.0.0.1:7897'\nos.environ['HTTP_PROXY'] = proxy\nos.environ['HTTPS_PROXY'] = proxy\n\n\nstart, end = '2019-01-01', '2024-07-24'\n# download SPX from yahoo finance\nspx = yf.Ticker(\"^GSPC\").history(start=start, end=end)\n\n\n# brief look at the data\nspx.info(), spx.isna().sum()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nDatetimeIndex: 1398 entries, 2019-01-02 00:00:00-05:00 to 2024-07-23 00:00:00-04:00\nData columns (total 7 columns):\n #   Column        Non-Null Count  Dtype  \n---  ------        --------------  -----  \n 0   Open          1398 non-null   float64\n 1   High          1398 non-null   float64\n 2   Low           1398 non-null   float64\n 3   Close         1398 non-null   float64\n 4   Volume        1398 non-null   int64  \n 5   Dividends     1398 non-null   float64\n 6   Stock Splits  1398 non-null   float64\ndtypes: float64(6), int64(1)\nmemory usage: 87.4 KB\n\n\n(None,\n Open            0\n High            0\n Low             0\n Close           0\n Volume          0\n Dividends       0\n Stock Splits    0\n dtype: int64)\n\n\n\n# first and last few rows of the data\nspx\n\n\n\n\n\n\n\n\nOpen\nHigh\nLow\nClose\nVolume\nDividends\nStock Splits\n\n\nDate\n\n\n\n\n\n\n\n\n\n\n\n2019-01-02 00:00:00-05:00\n2476.959961\n2519.489990\n2467.469971\n2510.030029\n3733160000\n0.0\n0.0\n\n\n2019-01-03 00:00:00-05:00\n2491.919922\n2493.139893\n2443.959961\n2447.889893\n3858830000\n0.0\n0.0\n\n\n2019-01-04 00:00:00-05:00\n2474.330078\n2538.070068\n2474.330078\n2531.939941\n4234140000\n0.0\n0.0\n\n\n2019-01-07 00:00:00-05:00\n2535.610107\n2566.159912\n2524.560059\n2549.689941\n4133120000\n0.0\n0.0\n\n\n2019-01-08 00:00:00-05:00\n2568.110107\n2579.820068\n2547.560059\n2574.409912\n4120060000\n0.0\n0.0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2024-07-17 00:00:00-04:00\n5610.069824\n5622.490234\n5584.810059\n5588.270020\n4246450000\n0.0\n0.0\n\n\n2024-07-18 00:00:00-04:00\n5608.560059\n5614.049805\n5522.810059\n5544.589844\n4007510000\n0.0\n0.0\n\n\n2024-07-19 00:00:00-04:00\n5543.370117\n5557.500000\n5497.040039\n5505.000000\n3760570000\n0.0\n0.0\n\n\n2024-07-22 00:00:00-04:00\n5544.540039\n5570.359863\n5529.040039\n5564.410156\n3375180000\n0.0\n0.0\n\n\n2024-07-23 00:00:00-04:00\n5565.299805\n5585.339844\n5550.899902\n5555.740234\n3500210000\n0.0\n0.0\n\n\n\n\n1398 rows × 7 columns\n\n\n\n\n# save data, just in case\n# spx.to_csv('spx_07252022.csv')\n\n\n\nYou may start from here.\n\n# load saved data\nspx = pd.read_csv('spx_07252022.csv')\nspx.index = spx['Date']\nspx = spx.drop('Date', axis=1)\n\n\n# summary statistics\nspx.describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\nOpen\n895.0\n3.586641e+03\n6.613510e+02\n2290.709961\n2.980045e+03\n3.439380e+03\n4.213645e+03\n4.804510e+03\n\n\nHigh\n895.0\n3.608340e+03\n6.637349e+02\n2300.729980\n2.991620e+03\n3.464860e+03\n4.239375e+03\n4.818620e+03\n\n\nLow\n895.0\n3.562902e+03\n6.583530e+02\n2191.860107\n2.963575e+03\n3.419930e+03\n4.192340e+03\n4.780040e+03\n\n\nClose\n895.0\n3.587314e+03\n6.608265e+02\n2237.399902\n2.978570e+03\n3.443120e+03\n4.209795e+03\n4.796560e+03\n\n\nAdj Close\n895.0\n3.587314e+03\n6.608265e+02\n2237.399902\n2.978570e+03\n3.443120e+03\n4.209795e+03\n4.796560e+03\n\n\nVolume\n895.0\n4.069480e+09\n1.168092e+09\n0.000000\n3.337885e+09\n3.778890e+09\n4.548675e+09\n9.878040e+09\n\n\n\n\n\n\n\n\n# plot spx adjusted close\nplt.figure(figsize=(9, 6))\nspx['Close'].plot()\nplt.ylabel('SPX', fontsize=12)\nplt.grid();\n\n\n\n\n\n\n\n\n\n# log return of spx \nr = log(spx['Close']).diff()\n\n# historical volatility in this period\nvol = r.std()*sqrt(252)\nr, r.mean(), vol, type(r)\n\n(Date\n 2019-01-02         NaN\n 2019-01-03   -0.025068\n 2019-01-04    0.033759\n 2019-01-07    0.006986\n 2019-01-08    0.009649\n                 ...   \n 2022-07-15    0.019019\n 2022-07-18   -0.008399\n 2022-07-19    0.027254\n 2022-07-20    0.005878\n 2022-07-21    0.009813\n Name: Close, Length: 895, dtype: float64,\n 0.0005209587220526575,\n 0.22945020327258875,\n pandas.core.series.Series)\n\n\n\n# plot log return\nplt.figure(figsize=(9, 6))\nr.plot(lw=1)\nplt.ylabel('SPX log return', fontsize=12)\nplt.grid();\n\n\n\n\n\n\n\n\n\nr.iloc[0:10], r.iloc[-10:]\n\n(Date\n 2019-01-02         NaN\n 2019-01-03   -0.025068\n 2019-01-04    0.033759\n 2019-01-07    0.006986\n 2019-01-08    0.009649\n 2019-01-09    0.004090\n 2019-01-10    0.004508\n 2019-01-11   -0.000146\n 2019-01-14   -0.005271\n 2019-01-15    0.010665\n Name: Close, dtype: float64,\n Date\n 2022-07-08   -0.000831\n 2022-07-11   -0.011594\n 2022-07-12   -0.009287\n 2022-07-13   -0.004467\n 2022-07-14   -0.003003\n 2022-07-15    0.019019\n 2022-07-18   -0.008399\n 2022-07-19    0.027254\n 2022-07-20    0.005878\n 2022-07-21    0.009813\n Name: Close, dtype: float64)\n\n\n\n# n: rwidth of rolling window\n# N: annualizing factor\ndef volatility(data, n=10, N=252):\n    data = pd.Series(data)\n    vol = [np.nan for i in range(n)]\n    for i in range(len(data)-n):\n        vol += [data.iloc[i:(i+n)].std()*sqrt(N)]\n    return pd.DataFrame({'volatility': vol})\n\n\nvolatility(r)\n\n\n\n\n\n\n\n\nvolatility\n\n\n\n\n0\nNaN\n\n\n1\nNaN\n\n\n2\nNaN\n\n\n3\nNaN\n\n\n4\nNaN\n\n\n...\n...\n\n\n890\n0.136786\n\n\n891\n0.160218\n\n\n892\n0.160347\n\n\n893\n0.210679\n\n\n894\n0.211261\n\n\n\n\n895 rows × 1 columns\n\n\n\n\nspx_vol = volatility(r)\nspx_vol.index = r.index\nplt.figure(figsize=(9, 6))\nplt.plot(spx_vol)\nplt.ylabel('Volatility', fontsize=12)\nplt.title('SPX historical volatility', fontsize=24)\nplt.grid();\n\n\n\n\n\n\n\n\n\n# leverage effect\nspx_scaled = (spx - spx.mean())/(spx.max() - spx.min())\nplt.figure(figsize=(9, 6))\nspx_scaled['Close'].plot(color='k', lw=1, label='scaled spx')\nplt.ylim([-0.6, 1])\nplt.plot(spx_vol, 'b-.', lw=1, label='volatility')\nplt.grid()\nplt.title('Leverage effect', fontsize=24)\nplt.legend();\n\n\n\n\n\n\n\n\n注: Leverage effect (杠杆效应): Stock price 下降, Volatility 上升. Stock price 上升, Volatility 下降.\nEquity index returns interact negatively with return volatilities.\nCarr, Peter, and Liuren Wu. “Leverage Effect, Volatility Feedback, and Self-Exciting Market Disruptions.” The Journal of Financial and Quantitative Analysis, vol. 52, no. 5, 2017, pp. 2119–56. JSTOR, https://www.jstor.org/stable/26590473. Accessed 28 July 2025."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-estimation-using-ohlc",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-estimation-using-ohlc",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Volatility estimation using OHLC",
    "text": "Volatility estimation using OHLC\n\nParkison\nGarman-Klass\nRogers-Satchell\nYang-Zhang\n\n\\[\\begin{aligned}\n\\sigma_P^2 &= \\frac{1}{4\\ln2} \\frac{1}{n}\\sum_{i=1}^n (\\ln H_i - \\ln L_i)^2, \\\\\n\\sigma_{GK}^2 &= \\frac{1}{n} \\left\\{\\sum_{i=1}^n \\frac{1}{2}(\\ln H_i - \\ln L_i)^2 + (2\\ln2 - 1)(\\ln C_i - \\ln O_i)^2 \\right\\}, \\\\\n\\sigma_{RS}^2 &= \\frac{1}{n} \\sum_{i=1}^n u_i(u_i - c_i) + d_i(d_i - c_i), \\\\\n\\sigma_{YZ}^2 &= \\sigma_O^2 + w\\sigma_C^2 + (1 - w)\\sigma_P^2, \\quad w = \\frac{0.34}{1.34 + \\frac{n+1}{n-1}}.\n\\end{aligned}\\]\n\n\\(u_i = \\ln H_i - \\ln O_i\\): daily high weighted by open,\n\\(d_i = \\ln L_i - \\ln O_i\\): daily low weighted by open\n\\(o_i = \\ln O_i - \\ln C_{i-1}\\)\n\\(c_i = \\ln C_i - \\ln O_i\\)\n\nWe make the calculation of these volatilties into a python class.\n\nclass Volatilities:\n    def __init__(self, OHLC, n=10, N=252):\n        self.n = n\n        self.N = N\n        self.OHLC = pd.DataFrame(OHLC)\n        self.o = self.OHLC.Open\n        self.h = self.OHLC.High\n        self.l = self.OHLC.Low\n        self.c = self.OHLC.Close\n        self.r = log(self.OHLC['Close']).diff()\n        self.vols_c = [np.nan for i in range(self.n)] \n        self.vols_p = [np.nan for i in range(self.n)]\n        self.vols_gk = [np.nan for i in range(self.n)] \n        self.vols_rs = [np.nan for i in range(self.n)] \n        \n        for i in range(len(self.r) - self.n):\n            self.vols_c += [self.r.iloc[i:(i+self.n)].std()*sqrt(self.N)]\n            self.vols_p += [self.cal_vol_p(self.h.iloc[i:(i+self.n)], self.l.iloc[i:(i+self.n)])*sqrt(self.N)]\n            self.vols_gk += [self.cal_vol_gk(self.o.iloc[i:(i+self.n)], self.h.iloc[i:(i+self.n)], self.l.iloc[i:(i+self.n)], self.c.iloc[i:(i+self.n)])*sqrt(self.N)]\n            self.vols_rs += [self.cal_vol_rs(self.o.iloc[i:(i+self.n)], self.h.iloc[i:(i+self.n)], self.l.iloc[i:(i+self.n)], self.c.iloc[i:(i+self.n)])*sqrt(self.N)]\n        self.vols = pd.DataFrame({'close': self.vols_c, 'parkinson': self.vols_p, 'garman-klass': self.vols_gk, 'rogers-satchell': self.vols_rs})\n        self.vols.index = self.OHLC.index\n        \n    def cal_vol_p(self, H, L):\n        return np.sqrt(((log(H) - log(L))**2).mean()/log(2)/4)\n    \n    def cal_vol_gk(self, O, H, L, C):\n        term1 = ((log(O) - log(L))**2).mean()/2\n        term2 = (2*log(2) - 1)*((log(C) - log(O))**2).mean()\n        return np.sqrt(term1 + term2)\n    \n    def cal_vol_rs(self, O, H, L, C):\n        u, d, c = log(H) - log(O), log(L) - log(O), log(C) - log(O)\n        return np.sqrt((u*(u-c)).mean() + (d*(d-c)).mean())\n\n\n%%time\nspx_vols = Volatilities(spx)\n\nCPU times: total: 344 ms\nWall time: 1.69 s\n\n\n\nspx_vols.vols['garman-klass']\n\nDate\n2019-01-02         NaN\n2019-01-03         NaN\n2019-01-04         NaN\n2019-01-07         NaN\n2019-01-08         NaN\n                ...   \n2022-07-15    0.128716\n2022-07-18    0.126178\n2022-07-19    0.138915\n2022-07-20    0.140416\n2022-07-21    0.140299\nName: garman-klass, Length: 895, dtype: float64\n\n\n\nplt.figure(figsize=(10, 6))\nspx_vols.vols['close'].plot(ls='--', label='Close', lw=0.8)\nspx_vols.vols['parkinson'].plot(lw=0.8, label='Parkinson')\nspx_vols.vols['garman-klass'].plot(lw=0.8, label='Garman-Klass')\nspx_vols.vols['rogers-satchell'].plot(lw=0.8, label='Rogers-Satchell')\nplt.legend()\nplt.grid();\n\n\n\n\n\n\n\n\n\nspx.tail(1)\n\n\n\n\n\n\n\n\nOpen\nHigh\nLow\nClose\nAdj Close\nVolume\n\n\nDate\n\n\n\n\n\n\n\n\n\n\n2022-07-21\n3955.469971\n3999.290039\n3927.639893\n3998.949951\n3998.949951\n3586030000"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#implied-volatility",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#implied-volatility",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Implied volatility",
    "text": "Implied volatility\n“A wrong number to a wrong formula for a correct answer.”\n注: wrong number = volatility, wrong formula = Black-Scholes formula, correct answer = option price.\n\nIn the Black-Scholes model there is a one-to-one relation between the price of the option and the volatility parameter \\(\\sigma\\). The option prices are often quoted by stating this specific volatility, called the implied volatility.\nIn Black-Scholes world, the volatility is assumed constant. But in reality, options of different strike require different volatilities to match their market prices. This is called the volatility smile.\nMost of the work was inspired in modeling the implied volatility."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#why-implied-volatility-rather-than-the-price-itself",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#why-implied-volatility-rather-than-the-price-itself",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Why implied volatility rather than the price itself?",
    "text": "Why implied volatility rather than the price itself?\n\nPrice of a call option is decreasing in strike and increasing in time to expiry\nPrice of a far out-of-money option is small whereas price of a far in-the-money option carries mostly the intrinsic value\nStatistically speaking, implied volatility is a more standard quantity to infer\nTraders trade options in terms of implied volatilities rather than their prices\n\n注:\n\n期权价格本身不具备标准化, 不同期权之间不能直接比较; 但波动率是一个标准化的参数, 它不依赖 strike 或 expiry, 因此更便于比较.\n期权价格的构成不一致, 有的主要是时间价值, 有的主要是内在价值; 隐含波动率剥离了内在价值, 只反映市场对未来波动的预期, 是一个更“干净”的指标.\n你可以比较今天和昨天的隐含波动率来判断市场情绪变化; 但比较期权价格则可能受行权价、到期日等因素干扰.\n\n注: 隐含波动率是市场通过期权的价格推导出的一种预期未来波动率, 它不代表过去的价格波动, 而是预测未来的价格波动区间. IV值高, 意味着市场认为未来价格波动较大; IV 值低, 则意味着市场预期未来波动较小.\n期权的价格主要由四个因素决定: 标的资产价格、执行价格、到期时间和波动率. 隐含波动率是唯一一个通过市场价格间接估算出来的变量, 因此它在期权交易中的地位尤为特殊.\n隐含波动率与期权价格呈正相关关系. 简单来说, IV 越高, 期权价格越高; IV越低, 期权价格越便宜. 这是因为高隐含波动率意味着标的资产未来可能出现较大的价格波动, 买方愿意为此支付更多的期权溢价, 而卖方则要求更高的补偿来承担风险.\n隐含波动率没有固定的计算公式, 而是通过反推法, 根据期权定价模型 (如 Black-Scholes 模型) 和期权的市场价格来计算. 在实际交易中, 不同执行价的期权隐含波动率常呈现“微笑”或“倾斜”的形态, 这种现象被称为“波动率微笑 (Volatility Smile)”.\n深度虚值期权 (OTM) 和深度实值期权 (ITM) 的 IV 通常较高, 因为这些期权受到极端价格变动的影响更大. 平值期权 (ATM) 的IV较低, 因为它更接近当前市场价格, 波动性风险相对较小."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#a-practical-tip-for-fetching-risk-free-and-dividend-rates",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#a-practical-tip-for-fetching-risk-free-and-dividend-rates",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "A practical tip for fetching risk free and dividend rates",
    "text": "A practical tip for fetching risk free and dividend rates\nQ: How to obtain the interest rate \\(r\\) and dividend rate \\(d\\) for the calculation of implied volatility?\nA: Put-call parity.\nRecall the Put-Call Parity for European options\n\\[\nC - P = Se^{-dT}  - K e^{-rT} = e^{-rT} (F - K),\n\\]\nwhere \\(F\\) denotes the forward price of the underlying. Hence, if we regress \\(C - P\\) against \\(K\\), the (negative) slope gives us the discount factor and the intercept gives the ex-dividend underlying.\n\\(F = S e^{-(d-r)T}\\), which means we can get the dividend rate \\(d\\) by the intercept \\(F\\)."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#example---implied-volatilities-of-options-on-spx",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#example---implied-volatilities-of-options-on-spx",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Example - Implied volatilities of options on SPX",
    "text": "Example - Implied volatilities of options on SPX\n\n# import required modules\nimport datetime\nfrom datetime import datetime as dt\nimport numpy as np\nfrom numpy import exp, log, sqrt\nimport scipy.stats as ss\nfrom scipy.stats import norm\nimport pandas as pd\nimport yfinance as yf\nimport matplotlib.pyplot as plt\nimport statsmodels.formula.api as sm\n\n\nTips: You may skip the next 12 cells if you encounter an error.\n\n# download spx options data from yahoo finance\nspx = yf.Ticker('^SPX')\nspx_expiries = spx.options\nprint(spx_expiries)\n\n('2025-07-28', '2025-07-29', '2025-07-30', '2025-07-31', '2025-08-01', '2025-08-04', '2025-08-05', '2025-08-06', '2025-08-07', '2025-08-08', '2025-08-11', '2025-08-12', '2025-08-13', '2025-08-14', '2025-08-15', '2025-08-18', '2025-08-19', '2025-08-20', '2025-08-21', '2025-08-22', '2025-08-25', '2025-08-26', '2025-08-27', '2025-08-28', '2025-08-29', '2025-09-02', '2025-09-05', '2025-09-08', '2025-09-12', '2025-09-19', '2025-09-30', '2025-10-17', '2025-10-31', '2025-11-21', '2025-11-28', '2025-12-19', '2025-12-31', '2026-01-16', '2026-02-20', '2026-03-20', '2026-03-31', '2026-04-17', '2026-05-15', '2026-06-18', '2026-06-30', '2026-07-17', '2026-08-21', '2026-09-18', '2026-12-18', '2027-06-17', '2027-12-17', '2028-12-15', '2029-12-21', '2030-12-20')\n\n\n\n# choose an expiry \nidx = 17\ntoday = dt.strftime(dt.now(), '%Y-%m-%d')\nday_count = (dt.strptime(spx_expiries[idx], '%Y-%m-%d') - dt.now()).days\nprint(f'option expiry = {spx_expiries[idx]}, today = {today}')\nprint(f'There are {day_count} days to expiry')\noption_chain = spx.option_chain(spx_expiries[idx])\nspx_calls = option_chain.calls\nspx_puts = option_chain.puts\n\noption expiry = 2025-08-20, today = 2025-07-28\nThere are 22 days to expiry\n\n\n\nspx_calls.shape, spx_puts.shape\n\n((55, 14), (84, 14))\n\n\n\nspx_calls.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 55 entries, 0 to 54\nData columns (total 14 columns):\n #   Column             Non-Null Count  Dtype              \n---  ------             --------------  -----              \n 0   contractSymbol     55 non-null     object             \n 1   lastTradeDate      55 non-null     datetime64[ns, UTC]\n 2   strike             55 non-null     float64            \n 3   lastPrice          55 non-null     float64            \n 4   bid                55 non-null     float64            \n 5   ask                55 non-null     float64            \n 6   change             55 non-null     float64            \n 7   percentChange      55 non-null     float64            \n 8   volume             38 non-null     float64            \n 9   openInterest       55 non-null     int64              \n 10  impliedVolatility  55 non-null     float64            \n 11  inTheMoney         55 non-null     bool               \n 12  contractSize       55 non-null     object             \n 13  currency           55 non-null     object             \ndtypes: bool(1), datetime64[ns, UTC](1), float64(8), int64(1), object(3)\nmemory usage: 5.8+ KB\n\n\n\nspx_calls.isna().sum()\n\ncontractSymbol        0\nlastTradeDate         0\nstrike                0\nlastPrice             0\nbid                   0\nask                   0\nchange                0\npercentChange         0\nvolume               17\nopenInterest          0\nimpliedVolatility     0\ninTheMoney            0\ncontractSize          0\ncurrency              0\ndtype: int64\n\n\n\nspx_puts.isna().sum()\n\ncontractSymbol        0\nlastTradeDate         0\nstrike                0\nlastPrice             0\nbid                   0\nask                   0\nchange                0\npercentChange         0\nvolume               19\nopenInterest          0\nimpliedVolatility     0\ninTheMoney            0\ncontractSize          0\ncurrency              0\ndtype: int64\n\n\n\nspx_calls\n\n\n\n\n\n\n\n\ncontractSymbol\nlastTradeDate\nstrike\nlastPrice\nbid\nask\nchange\npercentChange\nvolume\nopenInterest\nimpliedVolatility\ninTheMoney\ncontractSize\ncurrency\n\n\n\n\n0\nSPXW250820C05100000\n2025-07-15 20:12:00+00:00\n5100.0\n1160.00\n1327.3\n1335.80\n0.0\n0.0\nNaN\n0\n0.667568\nTrue\nREGULAR\nUSD\n\n\n1\nSPXW250820C05200000\n2025-07-16 13:33:29+00:00\n5200.0\n1080.00\n1227.8\n1236.30\n0.0\n0.0\nNaN\n0\n0.625065\nTrue\nREGULAR\nUSD\n\n\n2\nSPXW250820C05450000\n2025-07-17 18:35:24+00:00\n5450.0\n873.00\n979.4\n987.90\n0.0\n0.0\nNaN\n0\n0.520505\nTrue\nREGULAR\nUSD\n\n\n3\nSPXW250820C05600000\n2025-07-17 18:39:43+00:00\n5600.0\n725.75\n830.6\n839.10\n0.0\n0.0\nNaN\n0\n0.471059\nTrue\nREGULAR\nUSD\n\n\n4\nSPXW250820C06000000\n2025-07-25 19:40:13+00:00\n6000.0\n419.54\n438.2\n446.60\n0.0\n0.0\n1.0\n0\n0.305007\nTrue\nREGULAR\nUSD\n\n\n5\nSPXW250820C06100000\n2025-07-22 19:07:15+00:00\n6100.0\n263.17\n342.9\n351.70\n0.0\n0.0\nNaN\n0\n0.265789\nTrue\nREGULAR\nUSD\n\n\n6\nSPXW250820C06150000\n2025-07-24 17:14:10+00:00\n6150.0\n267.38\n296.7\n305.40\n0.0\n0.0\n2.0\n0\n0.246815\nTrue\nREGULAR\nUSD\n\n\n7\nSPXW250820C06175000\n2025-07-14 18:00:54+00:00\n6175.0\n186.31\n273.7\n282.50\n0.0\n0.0\nNaN\n0\n0.237251\nTrue\nREGULAR\nUSD\n\n\n8\nSPXW250820C06200000\n2025-07-25 19:53:07+00:00\n6200.0\n232.41\n251.6\n260.00\n0.0\n0.0\n33.0\n0\n0.227989\nTrue\nREGULAR\nUSD\n\n\n9\nSPXW250820C06225000\n2025-07-15 15:00:23+00:00\n6225.0\n147.87\n228.9\n237.90\n0.0\n0.0\nNaN\n0\n0.218937\nTrue\nREGULAR\nUSD\n\n\n10\nSPXW250820C06240000\n2025-07-22 14:09:40+00:00\n6240.0\n141.65\n215.9\n224.80\n0.0\n0.0\nNaN\n0\n0.213516\nTrue\nREGULAR\nUSD\n\n\n11\nSPXW250820C06250000\n2025-07-25 19:53:07+00:00\n6250.0\n189.71\n210.5\n213.40\n0.0\n0.0\n33.0\n0\n0.205288\nTrue\nREGULAR\nUSD\n\n\n12\nSPXW250820C06260000\n2025-07-24 14:14:35+00:00\n6260.0\n164.55\n202.2\n204.80\n0.0\n0.0\nNaN\n0\n0.201723\nTrue\nREGULAR\nUSD\n\n\n13\nSPXW250820C06270000\n2025-07-24 14:14:35+00:00\n6270.0\n156.70\n193.7\n196.30\n0.0\n0.0\nNaN\n0\n0.198216\nTrue\nREGULAR\nUSD\n\n\n14\nSPXW250820C06275000\n2025-07-23 19:48:30+00:00\n6275.0\n147.30\n189.2\n192.10\n0.0\n0.0\n6.0\n0\n0.196499\nTrue\nREGULAR\nUSD\n\n\n15\nSPXW250820C06280000\n2025-07-23 17:30:30+00:00\n6280.0\n135.77\n185.2\n187.90\n0.0\n0.0\n26.0\n0\n0.194756\nTrue\nREGULAR\nUSD\n\n\n16\nSPXW250820C06290000\n2025-07-24 13:43:32+00:00\n6290.0\n141.60\n176.7\n179.60\n0.0\n0.0\n1.0\n0\n0.191334\nTrue\nREGULAR\nUSD\n\n\n17\nSPXW250820C06300000\n2025-07-25 19:03:56+00:00\n6300.0\n151.55\n168.5\n171.40\n0.0\n0.0\n4.0\n0\n0.187943\nTrue\nREGULAR\nUSD\n\n\n18\nSPXW250820C06310000\n2025-07-25 19:03:56+00:00\n6310.0\n143.79\n160.4\n163.30\n0.0\n0.0\n1.0\n0\n0.184575\nTrue\nREGULAR\nUSD\n\n\n19\nSPXW250820C06320000\n2025-07-25 19:51:42+00:00\n6320.0\n134.47\n153.4\n154.20\n0.0\n0.0\n1.0\n0\n0.179478\nTrue\nREGULAR\nUSD\n\n\n20\nSPXW250820C06325000\n2025-07-25 19:51:42+00:00\n6325.0\n130.77\n149.4\n150.30\n0.0\n0.0\n5.0\n0\n0.177907\nTrue\nREGULAR\nUSD\n\n\n21\nSPXW250820C06330000\n2025-07-24 14:25:27+00:00\n6330.0\n114.00\n145.6\n146.40\n0.0\n0.0\n40.0\n0\n0.176297\nTrue\nREGULAR\nUSD\n\n\n22\nSPXW250820C06340000\n2025-07-25 19:22:20+00:00\n6340.0\n123.00\n137.8\n138.70\n0.0\n0.0\n40.0\n0\n0.173102\nTrue\nREGULAR\nUSD\n\n\n23\nSPXW250820C06350000\n2025-07-25 18:13:34+00:00\n6350.0\n114.81\n130.2\n131.10\n0.0\n0.0\n15.0\n0\n0.169888\nTrue\nREGULAR\nUSD\n\n\n24\nSPXW250820C06360000\n2025-07-23 16:41:48+00:00\n6360.0\n82.10\n122.8\n123.60\n0.0\n0.0\n2.0\n0\n0.166646\nTrue\nREGULAR\nUSD\n\n\n25\nSPXW250820C06370000\n2025-07-25 12:56:28+00:00\n6370.0\n89.09\n115.6\n116.40\n0.0\n0.0\n1.0\n0\n0.163667\nTrue\nREGULAR\nUSD\n\n\n26\nSPXW250820C06375000\n2025-07-25 14:56:57+00:00\n6375.0\n87.15\n112.0\n112.90\n0.0\n0.0\n4.0\n0\n0.162251\nTrue\nREGULAR\nUSD\n\n\n27\nSPXW250820C06380000\n2025-07-25 16:19:30+00:00\n6380.0\n87.71\n108.5\n109.40\n0.0\n0.0\n80.0\n0\n0.160785\nTrue\nREGULAR\nUSD\n\n\n28\nSPXW250820C06400000\n2025-07-25 19:59:21+00:00\n6400.0\n79.20\n94.9\n95.80\n0.0\n0.0\n2.0\n0\n0.154961\nFalse\nREGULAR\nUSD\n\n\n29\nSPXW250820C06410000\n2025-07-25 15:48:10+00:00\n6410.0\n67.17\n88.4\n89.30\n0.0\n0.0\n1.0\n0\n0.152150\nFalse\nREGULAR\nUSD\n\n\n30\nSPXW250820C06420000\n2025-07-25 15:11:55+00:00\n6420.0\n62.95\n82.2\n83.10\n0.0\n0.0\n36.0\n0\n0.149537\nFalse\nREGULAR\nUSD\n\n\n31\nSPXW250820C06425000\n2025-07-25 16:09:42+00:00\n6425.0\n60.34\n79.2\n80.10\n0.0\n0.0\n11.0\n0\n0.148286\nFalse\nREGULAR\nUSD\n\n\n32\nSPXW250820C06430000\n2025-07-25 15:11:50+00:00\n6430.0\n57.88\n76.2\n77.10\n0.0\n0.0\n18.0\n0\n0.146964\nFalse\nREGULAR\nUSD\n\n\n33\nSPXW250820C06440000\n2025-07-25 16:22:59+00:00\n6440.0\n54.59\n70.5\n71.30\n0.0\n0.0\n4.0\n0\n0.144416\nFalse\nREGULAR\nUSD\n\n\n34\nSPXW250820C06450000\n2025-07-25 17:04:55+00:00\n6450.0\n52.55\n65.1\n65.90\n0.0\n0.0\n39.0\n0\n0.142198\nFalse\nREGULAR\nUSD\n\n\n35\nSPXW250820C06460000\n2025-07-25 19:52:19+00:00\n6460.0\n49.20\n59.8\n60.60\n0.0\n0.0\n3.0\n0\n0.139829\nFalse\nREGULAR\nUSD\n\n\n36\nSPXW250820C06470000\n2025-07-25 15:29:27+00:00\n6470.0\n40.74\n54.9\n55.70\n0.0\n0.0\n5.0\n0\n0.137780\nFalse\nREGULAR\nUSD\n\n\n37\nSPXW250820C06475000\n2025-07-25 18:47:39+00:00\n6475.0\n45.30\n52.4\n53.30\n0.0\n0.0\n71.0\n0\n0.136712\nFalse\nREGULAR\nUSD\n\n\n38\nSPXW250820C06480000\n2025-07-24 14:44:53+00:00\n6480.0\n37.38\n50.2\n51.00\n0.0\n0.0\nNaN\n0\n0.135726\nFalse\nREGULAR\nUSD\n\n\n39\nSPXW250820C06500000\n2025-07-25 17:56:19+00:00\n6500.0\n34.52\n41.7\n42.40\n0.0\n0.0\n7.0\n0\n0.131917\nFalse\nREGULAR\nUSD\n\n\n40\nSPXW250820C06525000\n2025-07-25 19:52:20+00:00\n6525.0\n26.10\n32.5\n33.10\n0.0\n0.0\n50.0\n0\n0.127639\nFalse\nREGULAR\nUSD\n\n\n41\nSPXW250820C06550000\n2025-07-25 19:52:20+00:00\n6550.0\n19.80\n24.9\n25.50\n0.0\n0.0\n14.0\n0\n0.124173\nFalse\nREGULAR\nUSD\n\n\n42\nSPXW250820C06575000\n2025-07-24 14:22:05+00:00\n6575.0\n13.00\n18.7\n19.30\n0.0\n0.0\nNaN\n0\n0.121156\nFalse\nREGULAR\nUSD\n\n\n43\nSPXW250820C06600000\n2025-07-25 13:30:56+00:00\n6600.0\n9.30\n13.9\n14.50\n0.0\n0.0\n1.0\n0\n0.118940\nFalse\nREGULAR\nUSD\n\n\n44\nSPXW250820C06625000\n2025-07-25 17:38:33+00:00\n6625.0\n8.40\n10.1\n10.70\n0.0\n0.0\n5.0\n0\n0.116964\nFalse\nREGULAR\nUSD\n\n\n45\nSPXW250820C06650000\n2025-07-25 14:10:48+00:00\n6650.0\n5.00\n7.3\n7.70\n0.0\n0.0\n4.0\n0\n0.114999\nFalse\nREGULAR\nUSD\n\n\n46\nSPXW250820C06675000\n2025-07-25 19:43:31+00:00\n6675.0\n4.20\n5.1\n5.60\n0.0\n0.0\n2.0\n0\n0.114015\nFalse\nREGULAR\nUSD\n\n\n47\nSPXW250820C06700000\n2025-07-25 14:40:39+00:00\n6700.0\n2.70\n3.6\n4.10\n0.0\n0.0\n5.0\n0\n0.113641\nFalse\nREGULAR\nUSD\n\n\n48\nSPXW250820C06725000\n2025-07-22 13:37:28+00:00\n6725.0\n1.97\n2.6\n2.95\n0.0\n0.0\nNaN\n0\n0.113229\nFalse\nREGULAR\nUSD\n\n\n49\nSPXW250820C06750000\n2025-07-23 15:22:01+00:00\n6750.0\n1.30\n1.9\n2.15\n0.0\n0.0\nNaN\n0\n0.113351\nFalse\nREGULAR\nUSD\n\n\n50\nSPXW250820C06800000\n2025-07-23 14:06:32+00:00\n6800.0\n0.82\n0.0\n1.30\n0.0\n0.0\n1.0\n0\n0.116311\nFalse\nREGULAR\nUSD\n\n\n51\nSPXW250820C06900000\n2025-07-23 15:47:26+00:00\n6900.0\n0.45\n0.0\n0.00\n0.0\n0.0\n6.0\n0\n0.062509\nFalse\nREGULAR\nUSD\n\n\n52\nSPXW250820C07000000\n2025-07-23 14:52:42+00:00\n7000.0\n0.25\n0.0\n0.00\n0.0\n0.0\nNaN\n0\n0.062509\nFalse\nREGULAR\nUSD\n\n\n53\nSPXW250820C07200000\n2025-07-24 13:48:48+00:00\n7200.0\n0.25\n0.0\n0.00\n0.0\n0.0\nNaN\n0\n0.062509\nFalse\nREGULAR\nUSD\n\n\n54\nSPXW250820C08000000\n2025-07-23 13:30:06+00:00\n8000.0\n0.05\n0.0\n0.00\n0.0\n0.0\nNaN\n0\n0.125009\nFalse\nREGULAR\nUSD\n\n\n\n\n\n\n\n\n# clean up data\n# remove NA's\nspx_calls = spx_calls.drop(['currency', 'contractSize'], axis=1).dropna()\nspx_puts = spx_puts.drop(['currency', 'contractSize'], axis=1).dropna()\nspx_calls.shape, spx_puts.shape\n\n((38, 12), (65, 12))\n\n\n\nspx_calls[spx_calls['lastTradeDate'] &gt; '2024-07']\n\n\n\n\n\n\n\n\ncontractSymbol\nlastTradeDate\nstrike\nlastPrice\nbid\nask\nchange\npercentChange\nvolume\nopenInterest\nimpliedVolatility\ninTheMoney\n\n\n\n\n4\nSPXW250820C06000000\n2025-07-25 19:40:13+00:00\n6000.0\n419.54\n438.2\n446.6\n0.0\n0.0\n1.0\n0\n0.305007\nTrue\n\n\n6\nSPXW250820C06150000\n2025-07-24 17:14:10+00:00\n6150.0\n267.38\n296.7\n305.4\n0.0\n0.0\n2.0\n0\n0.246815\nTrue\n\n\n8\nSPXW250820C06200000\n2025-07-25 19:53:07+00:00\n6200.0\n232.41\n251.6\n260.0\n0.0\n0.0\n33.0\n0\n0.227989\nTrue\n\n\n11\nSPXW250820C06250000\n2025-07-25 19:53:07+00:00\n6250.0\n189.71\n210.5\n213.4\n0.0\n0.0\n33.0\n0\n0.205288\nTrue\n\n\n14\nSPXW250820C06275000\n2025-07-23 19:48:30+00:00\n6275.0\n147.30\n189.2\n192.1\n0.0\n0.0\n6.0\n0\n0.196499\nTrue\n\n\n15\nSPXW250820C06280000\n2025-07-23 17:30:30+00:00\n6280.0\n135.77\n185.2\n187.9\n0.0\n0.0\n26.0\n0\n0.194756\nTrue\n\n\n16\nSPXW250820C06290000\n2025-07-24 13:43:32+00:00\n6290.0\n141.60\n176.7\n179.6\n0.0\n0.0\n1.0\n0\n0.191334\nTrue\n\n\n17\nSPXW250820C06300000\n2025-07-25 19:03:56+00:00\n6300.0\n151.55\n168.5\n171.4\n0.0\n0.0\n4.0\n0\n0.187943\nTrue\n\n\n18\nSPXW250820C06310000\n2025-07-25 19:03:56+00:00\n6310.0\n143.79\n160.4\n163.3\n0.0\n0.0\n1.0\n0\n0.184575\nTrue\n\n\n19\nSPXW250820C06320000\n2025-07-25 19:51:42+00:00\n6320.0\n134.47\n153.4\n154.2\n0.0\n0.0\n1.0\n0\n0.179478\nTrue\n\n\n20\nSPXW250820C06325000\n2025-07-25 19:51:42+00:00\n6325.0\n130.77\n149.4\n150.3\n0.0\n0.0\n5.0\n0\n0.177907\nTrue\n\n\n21\nSPXW250820C06330000\n2025-07-24 14:25:27+00:00\n6330.0\n114.00\n145.6\n146.4\n0.0\n0.0\n40.0\n0\n0.176297\nTrue\n\n\n22\nSPXW250820C06340000\n2025-07-25 19:22:20+00:00\n6340.0\n123.00\n137.8\n138.7\n0.0\n0.0\n40.0\n0\n0.173102\nTrue\n\n\n23\nSPXW250820C06350000\n2025-07-25 18:13:34+00:00\n6350.0\n114.81\n130.2\n131.1\n0.0\n0.0\n15.0\n0\n0.169888\nTrue\n\n\n24\nSPXW250820C06360000\n2025-07-23 16:41:48+00:00\n6360.0\n82.10\n122.8\n123.6\n0.0\n0.0\n2.0\n0\n0.166646\nTrue\n\n\n25\nSPXW250820C06370000\n2025-07-25 12:56:28+00:00\n6370.0\n89.09\n115.6\n116.4\n0.0\n0.0\n1.0\n0\n0.163667\nTrue\n\n\n26\nSPXW250820C06375000\n2025-07-25 14:56:57+00:00\n6375.0\n87.15\n112.0\n112.9\n0.0\n0.0\n4.0\n0\n0.162251\nTrue\n\n\n27\nSPXW250820C06380000\n2025-07-25 16:19:30+00:00\n6380.0\n87.71\n108.5\n109.4\n0.0\n0.0\n80.0\n0\n0.160785\nTrue\n\n\n28\nSPXW250820C06400000\n2025-07-25 19:59:21+00:00\n6400.0\n79.20\n94.9\n95.8\n0.0\n0.0\n2.0\n0\n0.154961\nFalse\n\n\n29\nSPXW250820C06410000\n2025-07-25 15:48:10+00:00\n6410.0\n67.17\n88.4\n89.3\n0.0\n0.0\n1.0\n0\n0.152150\nFalse\n\n\n30\nSPXW250820C06420000\n2025-07-25 15:11:55+00:00\n6420.0\n62.95\n82.2\n83.1\n0.0\n0.0\n36.0\n0\n0.149537\nFalse\n\n\n31\nSPXW250820C06425000\n2025-07-25 16:09:42+00:00\n6425.0\n60.34\n79.2\n80.1\n0.0\n0.0\n11.0\n0\n0.148286\nFalse\n\n\n32\nSPXW250820C06430000\n2025-07-25 15:11:50+00:00\n6430.0\n57.88\n76.2\n77.1\n0.0\n0.0\n18.0\n0\n0.146964\nFalse\n\n\n33\nSPXW250820C06440000\n2025-07-25 16:22:59+00:00\n6440.0\n54.59\n70.5\n71.3\n0.0\n0.0\n4.0\n0\n0.144416\nFalse\n\n\n34\nSPXW250820C06450000\n2025-07-25 17:04:55+00:00\n6450.0\n52.55\n65.1\n65.9\n0.0\n0.0\n39.0\n0\n0.142198\nFalse\n\n\n35\nSPXW250820C06460000\n2025-07-25 19:52:19+00:00\n6460.0\n49.20\n59.8\n60.6\n0.0\n0.0\n3.0\n0\n0.139829\nFalse\n\n\n36\nSPXW250820C06470000\n2025-07-25 15:29:27+00:00\n6470.0\n40.74\n54.9\n55.7\n0.0\n0.0\n5.0\n0\n0.137780\nFalse\n\n\n37\nSPXW250820C06475000\n2025-07-25 18:47:39+00:00\n6475.0\n45.30\n52.4\n53.3\n0.0\n0.0\n71.0\n0\n0.136712\nFalse\n\n\n39\nSPXW250820C06500000\n2025-07-25 17:56:19+00:00\n6500.0\n34.52\n41.7\n42.4\n0.0\n0.0\n7.0\n0\n0.131917\nFalse\n\n\n40\nSPXW250820C06525000\n2025-07-25 19:52:20+00:00\n6525.0\n26.10\n32.5\n33.1\n0.0\n0.0\n50.0\n0\n0.127639\nFalse\n\n\n41\nSPXW250820C06550000\n2025-07-25 19:52:20+00:00\n6550.0\n19.80\n24.9\n25.5\n0.0\n0.0\n14.0\n0\n0.124173\nFalse\n\n\n43\nSPXW250820C06600000\n2025-07-25 13:30:56+00:00\n6600.0\n9.30\n13.9\n14.5\n0.0\n0.0\n1.0\n0\n0.118940\nFalse\n\n\n44\nSPXW250820C06625000\n2025-07-25 17:38:33+00:00\n6625.0\n8.40\n10.1\n10.7\n0.0\n0.0\n5.0\n0\n0.116964\nFalse\n\n\n45\nSPXW250820C06650000\n2025-07-25 14:10:48+00:00\n6650.0\n5.00\n7.3\n7.7\n0.0\n0.0\n4.0\n0\n0.114999\nFalse\n\n\n46\nSPXW250820C06675000\n2025-07-25 19:43:31+00:00\n6675.0\n4.20\n5.1\n5.6\n0.0\n0.0\n2.0\n0\n0.114015\nFalse\n\n\n47\nSPXW250820C06700000\n2025-07-25 14:40:39+00:00\n6700.0\n2.70\n3.6\n4.1\n0.0\n0.0\n5.0\n0\n0.113641\nFalse\n\n\n50\nSPXW250820C06800000\n2025-07-23 14:06:32+00:00\n6800.0\n0.82\n0.0\n1.3\n0.0\n0.0\n1.0\n0\n0.116311\nFalse\n\n\n51\nSPXW250820C06900000\n2025-07-23 15:47:26+00:00\n6900.0\n0.45\n0.0\n0.0\n0.0\n0.0\n6.0\n0\n0.062509\nFalse\n\n\n\n\n\n\n\n\n# remove data point where either bid = 0 or ask = 0\n# remove data that that are not traded recently\nspx_calls = spx_calls[(spx_calls['bid'] &gt; 0) & (spx_calls['ask'] &gt; 0)]\n#spx_calls[spx_calls['lastTradeDate'] &gt; '2022-07']\nspx_calls\n\n\n\n\n\n\n\n\ncontractSymbol\nlastTradeDate\nstrike\nlastPrice\nbid\nask\nchange\npercentChange\nvolume\nopenInterest\nimpliedVolatility\ninTheMoney\n\n\n\n\n4\nSPXW250820C06000000\n2025-07-25 19:40:13+00:00\n6000.0\n419.54\n438.2\n446.6\n0.0\n0.0\n1.0\n0\n0.305007\nTrue\n\n\n6\nSPXW250820C06150000\n2025-07-24 17:14:10+00:00\n6150.0\n267.38\n296.7\n305.4\n0.0\n0.0\n2.0\n0\n0.246815\nTrue\n\n\n8\nSPXW250820C06200000\n2025-07-25 19:53:07+00:00\n6200.0\n232.41\n251.6\n260.0\n0.0\n0.0\n33.0\n0\n0.227989\nTrue\n\n\n11\nSPXW250820C06250000\n2025-07-25 19:53:07+00:00\n6250.0\n189.71\n210.5\n213.4\n0.0\n0.0\n33.0\n0\n0.205288\nTrue\n\n\n14\nSPXW250820C06275000\n2025-07-23 19:48:30+00:00\n6275.0\n147.30\n189.2\n192.1\n0.0\n0.0\n6.0\n0\n0.196499\nTrue\n\n\n15\nSPXW250820C06280000\n2025-07-23 17:30:30+00:00\n6280.0\n135.77\n185.2\n187.9\n0.0\n0.0\n26.0\n0\n0.194756\nTrue\n\n\n16\nSPXW250820C06290000\n2025-07-24 13:43:32+00:00\n6290.0\n141.60\n176.7\n179.6\n0.0\n0.0\n1.0\n0\n0.191334\nTrue\n\n\n17\nSPXW250820C06300000\n2025-07-25 19:03:56+00:00\n6300.0\n151.55\n168.5\n171.4\n0.0\n0.0\n4.0\n0\n0.187943\nTrue\n\n\n18\nSPXW250820C06310000\n2025-07-25 19:03:56+00:00\n6310.0\n143.79\n160.4\n163.3\n0.0\n0.0\n1.0\n0\n0.184575\nTrue\n\n\n19\nSPXW250820C06320000\n2025-07-25 19:51:42+00:00\n6320.0\n134.47\n153.4\n154.2\n0.0\n0.0\n1.0\n0\n0.179478\nTrue\n\n\n20\nSPXW250820C06325000\n2025-07-25 19:51:42+00:00\n6325.0\n130.77\n149.4\n150.3\n0.0\n0.0\n5.0\n0\n0.177907\nTrue\n\n\n21\nSPXW250820C06330000\n2025-07-24 14:25:27+00:00\n6330.0\n114.00\n145.6\n146.4\n0.0\n0.0\n40.0\n0\n0.176297\nTrue\n\n\n22\nSPXW250820C06340000\n2025-07-25 19:22:20+00:00\n6340.0\n123.00\n137.8\n138.7\n0.0\n0.0\n40.0\n0\n0.173102\nTrue\n\n\n23\nSPXW250820C06350000\n2025-07-25 18:13:34+00:00\n6350.0\n114.81\n130.2\n131.1\n0.0\n0.0\n15.0\n0\n0.169888\nTrue\n\n\n24\nSPXW250820C06360000\n2025-07-23 16:41:48+00:00\n6360.0\n82.10\n122.8\n123.6\n0.0\n0.0\n2.0\n0\n0.166646\nTrue\n\n\n25\nSPXW250820C06370000\n2025-07-25 12:56:28+00:00\n6370.0\n89.09\n115.6\n116.4\n0.0\n0.0\n1.0\n0\n0.163667\nTrue\n\n\n26\nSPXW250820C06375000\n2025-07-25 14:56:57+00:00\n6375.0\n87.15\n112.0\n112.9\n0.0\n0.0\n4.0\n0\n0.162251\nTrue\n\n\n27\nSPXW250820C06380000\n2025-07-25 16:19:30+00:00\n6380.0\n87.71\n108.5\n109.4\n0.0\n0.0\n80.0\n0\n0.160785\nTrue\n\n\n28\nSPXW250820C06400000\n2025-07-25 19:59:21+00:00\n6400.0\n79.20\n94.9\n95.8\n0.0\n0.0\n2.0\n0\n0.154961\nFalse\n\n\n29\nSPXW250820C06410000\n2025-07-25 15:48:10+00:00\n6410.0\n67.17\n88.4\n89.3\n0.0\n0.0\n1.0\n0\n0.152150\nFalse\n\n\n30\nSPXW250820C06420000\n2025-07-25 15:11:55+00:00\n6420.0\n62.95\n82.2\n83.1\n0.0\n0.0\n36.0\n0\n0.149537\nFalse\n\n\n31\nSPXW250820C06425000\n2025-07-25 16:09:42+00:00\n6425.0\n60.34\n79.2\n80.1\n0.0\n0.0\n11.0\n0\n0.148286\nFalse\n\n\n32\nSPXW250820C06430000\n2025-07-25 15:11:50+00:00\n6430.0\n57.88\n76.2\n77.1\n0.0\n0.0\n18.0\n0\n0.146964\nFalse\n\n\n33\nSPXW250820C06440000\n2025-07-25 16:22:59+00:00\n6440.0\n54.59\n70.5\n71.3\n0.0\n0.0\n4.0\n0\n0.144416\nFalse\n\n\n34\nSPXW250820C06450000\n2025-07-25 17:04:55+00:00\n6450.0\n52.55\n65.1\n65.9\n0.0\n0.0\n39.0\n0\n0.142198\nFalse\n\n\n35\nSPXW250820C06460000\n2025-07-25 19:52:19+00:00\n6460.0\n49.20\n59.8\n60.6\n0.0\n0.0\n3.0\n0\n0.139829\nFalse\n\n\n36\nSPXW250820C06470000\n2025-07-25 15:29:27+00:00\n6470.0\n40.74\n54.9\n55.7\n0.0\n0.0\n5.0\n0\n0.137780\nFalse\n\n\n37\nSPXW250820C06475000\n2025-07-25 18:47:39+00:00\n6475.0\n45.30\n52.4\n53.3\n0.0\n0.0\n71.0\n0\n0.136712\nFalse\n\n\n39\nSPXW250820C06500000\n2025-07-25 17:56:19+00:00\n6500.0\n34.52\n41.7\n42.4\n0.0\n0.0\n7.0\n0\n0.131917\nFalse\n\n\n40\nSPXW250820C06525000\n2025-07-25 19:52:20+00:00\n6525.0\n26.10\n32.5\n33.1\n0.0\n0.0\n50.0\n0\n0.127639\nFalse\n\n\n41\nSPXW250820C06550000\n2025-07-25 19:52:20+00:00\n6550.0\n19.80\n24.9\n25.5\n0.0\n0.0\n14.0\n0\n0.124173\nFalse\n\n\n43\nSPXW250820C06600000\n2025-07-25 13:30:56+00:00\n6600.0\n9.30\n13.9\n14.5\n0.0\n0.0\n1.0\n0\n0.118940\nFalse\n\n\n44\nSPXW250820C06625000\n2025-07-25 17:38:33+00:00\n6625.0\n8.40\n10.1\n10.7\n0.0\n0.0\n5.0\n0\n0.116964\nFalse\n\n\n45\nSPXW250820C06650000\n2025-07-25 14:10:48+00:00\n6650.0\n5.00\n7.3\n7.7\n0.0\n0.0\n4.0\n0\n0.114999\nFalse\n\n\n46\nSPXW250820C06675000\n2025-07-25 19:43:31+00:00\n6675.0\n4.20\n5.1\n5.6\n0.0\n0.0\n2.0\n0\n0.114015\nFalse\n\n\n47\nSPXW250820C06700000\n2025-07-25 14:40:39+00:00\n6700.0\n2.70\n3.6\n4.1\n0.0\n0.0\n5.0\n0\n0.113641\nFalse\n\n\n\n\n\n\n\n\nspx_puts = spx_puts[(spx_puts['bid'] &gt; 0) & (spx_puts['ask'] &gt; 0)]\n#spx_puts = spx_puts[spx_puts['lastTradeDate'] &gt; '2022-02']\nspx_puts\n\n\n\n\n\n\n\n\ncontractSymbol\nlastTradeDate\nstrike\nlastPrice\nbid\nask\nchange\npercentChange\nvolume\nopenInterest\nimpliedVolatility\ninTheMoney\n\n\n\n\n6\nSPXW250820P04800000\n2025-07-23 19:03:36+00:00\n4800.0\n1.55\n0.70\n0.90\n0.000000\n0.000000\n23.0\n0\n0.429327\nFalse\n\n\n11\nSPXW250820P05400000\n2025-07-25 19:37:03+00:00\n5400.0\n2.85\n2.20\n2.40\n0.000000\n0.000000\n1.0\n0\n0.301795\nFalse\n\n\n12\nSPXW250820P05425000\n2025-07-25 20:02:09+00:00\n5425.0\n2.80\n2.30\n2.50\n0.000000\n0.000000\n1590.0\n0\n0.296272\nFalse\n\n\n13\nSPXW250820P05450000\n2025-07-25 20:00:17+00:00\n5450.0\n3.00\n2.40\n2.60\n0.000000\n0.000000\n4.0\n0\n0.290657\nFalse\n\n\n14\nSPXW250820P05500000\n2025-07-25 20:00:51+00:00\n5500.0\n3.32\n2.65\n2.85\n0.000000\n0.000000\n100.0\n0\n0.279884\nFalse\n\n\n17\nSPXW250820P05575000\n2025-07-21 18:22:57+00:00\n5575.0\n6.30\n3.00\n3.30\n0.000000\n0.000000\n25.0\n0\n0.263801\nFalse\n\n\n19\nSPXW250820P05625000\n2025-07-25 19:45:59+00:00\n5625.0\n4.30\n3.30\n3.60\n0.000000\n0.000000\n61.0\n0\n0.252449\nFalse\n\n\n21\nSPXW250820P05675000\n2025-07-24 19:45:17+00:00\n5675.0\n5.10\n3.70\n4.00\n0.000000\n0.000000\n1.0\n0\n0.241646\nFalse\n\n\n22\nSPXW250820P05700000\n2025-07-24 20:08:32+00:00\n5700.0\n5.80\n3.90\n4.20\n0.000000\n0.000000\n23.0\n0\n0.236031\nFalse\n\n\n24\nSPXW250820P05750000\n2025-07-24 13:54:07+00:00\n5750.0\n6.00\n4.30\n4.70\n0.000000\n0.000000\n72.0\n0\n0.225182\nFalse\n\n\n25\nSPXW250820P05775000\n2025-07-23 18:05:17+00:00\n5775.0\n7.47\n4.60\n5.00\n0.000000\n0.000000\n67.0\n0\n0.219902\nFalse\n\n\n26\nSPXW250820P05800000\n2025-07-24 19:57:36+00:00\n5800.0\n7.25\n4.90\n5.30\n0.000000\n0.000000\n807.0\n0\n0.214394\nFalse\n\n\n27\nSPXW250820P05825000\n2025-07-23 19:59:30+00:00\n5825.0\n8.40\n5.20\n5.60\n0.000000\n0.000000\n20.0\n0\n0.208702\nFalse\n\n\n28\nSPXW250820P05850000\n2025-07-25 19:44:58+00:00\n5850.0\n7.30\n5.60\n6.00\n0.000000\n0.000000\n12.0\n0\n0.203469\nFalse\n\n\n29\nSPXW250820P05875000\n2025-07-25 20:03:13+00:00\n5875.0\n7.70\n6.10\n6.40\n0.000000\n0.000000\n41.0\n0\n0.197976\nFalse\n\n\n30\nSPXW250820P05900000\n2025-07-25 19:03:54+00:00\n5900.0\n8.20\n6.60\n6.90\n0.000000\n0.000000\n4.0\n0\n0.192833\nFalse\n\n\n31\nSPXW250820P05925000\n2025-07-25 15:01:11+00:00\n5925.0\n9.40\n7.10\n7.50\n0.000000\n0.000000\n6.0\n0\n0.187905\nFalse\n\n\n32\nSPXW250820P05950000\n2025-07-25 19:44:10+00:00\n5950.0\n9.90\n7.80\n8.10\n0.000000\n0.000000\n12.0\n0\n0.182625\nFalse\n\n\n33\nSPXW250820P05975000\n2025-07-25 15:29:05+00:00\n5975.0\n11.16\n8.50\n8.90\n0.000000\n0.000000\n1.0\n0\n0.177949\nFalse\n\n\n34\nSPXW250820P06000000\n2025-07-25 19:44:29+00:00\n6000.0\n12.10\n9.40\n9.70\n0.000000\n0.000000\n6.0\n0\n0.172814\nFalse\n\n\n35\nSPXW250820P06025000\n2025-07-23 20:06:00+00:00\n6025.0\n17.34\n10.40\n10.70\n0.000000\n0.000000\n2.0\n0\n0.168069\nFalse\n\n\n36\nSPXW250820P06050000\n2025-07-28 00:15:00+00:00\n6050.0\n12.18\n11.40\n11.80\n-2.320000\n-15.999998\n5.0\n0\n0.163186\nFalse\n\n\n37\nSPXW250820P06075000\n2025-07-28 00:15:00+00:00\n6075.0\n13.58\n12.60\n13.10\n-2.719999\n-16.687113\n5.0\n0\n0.158463\nFalse\n\n\n38\nSPXW250820P06100000\n2025-07-25 18:15:22+00:00\n6100.0\n18.15\n14.10\n14.70\n0.000000\n0.000000\n11.0\n0\n0.154084\nFalse\n\n\n39\nSPXW250820P06110000\n2025-07-25 19:35:59+00:00\n6110.0\n18.72\n14.70\n15.20\n0.000000\n0.000000\n4.0\n0\n0.151711\nFalse\n\n\n40\nSPXW250820P06125000\n2025-07-23 20:06:00+00:00\n6125.0\n26.39\n15.70\n16.20\n0.000000\n0.000000\n95.0\n0\n0.148728\nFalse\n\n\n42\nSPXW250820P06140000\n2025-07-23 14:37:25+00:00\n6140.0\n36.73\n16.80\n17.30\n0.000000\n0.000000\n5.0\n0\n0.145768\nFalse\n\n\n43\nSPXW250820P06150000\n2025-07-25 19:51:42+00:00\n6150.0\n22.40\n17.60\n18.10\n0.000000\n0.000000\n33.0\n0\n0.143830\nFalse\n\n\n45\nSPXW250820P06170000\n2025-07-23 15:57:02+00:00\n6170.0\n35.67\n19.20\n19.80\n0.000000\n0.000000\n2.0\n0\n0.139833\nFalse\n\n\n46\nSPXW250820P06175000\n2025-07-28 00:15:00+00:00\n6175.0\n20.83\n19.70\n20.20\n-9.469999\n-31.254124\n2.0\n0\n0.138692\nFalse\n\n\n48\nSPXW250820P06190000\n2025-07-25 14:54:57+00:00\n6190.0\n28.37\n21.10\n21.60\n0.000000\n0.000000\n5.0\n0\n0.135568\nFalse\n\n\n49\nSPXW250820P06200000\n2025-07-28 00:15:00+00:00\n6200.0\n23.43\n22.10\n22.60\n-4.570000\n-16.321428\n2.0\n0\n0.133466\nFalse\n\n\n52\nSPXW250820P06225000\n2025-07-25 19:52:19+00:00\n6225.0\n31.30\n24.80\n25.50\n0.000000\n0.000000\n3.0\n0\n0.128450\nFalse\n\n\n53\nSPXW250820P06230000\n2025-07-25 19:59:09+00:00\n6230.0\n32.20\n25.40\n26.10\n0.000000\n0.000000\n3.0\n0\n0.127370\nFalse\n\n\n55\nSPXW250820P06250000\n2025-07-25 19:59:02+00:00\n6250.0\n35.20\n27.90\n28.50\n0.000000\n0.000000\n12.0\n0\n0.122655\nFalse\n\n\n56\nSPXW250820P06260000\n2025-07-25 19:59:00+00:00\n6260.0\n36.80\n29.40\n29.90\n0.000000\n0.000000\n3.0\n0\n0.120439\nFalse\n\n\n58\nSPXW250820P06275000\n2025-07-25 18:25:43+00:00\n6275.0\n39.51\n31.60\n32.10\n0.000000\n0.000000\n14.0\n0\n0.116964\nFalse\n\n\n59\nSPXW250820P06280000\n2025-07-25 19:59:05+00:00\n6280.0\n40.70\n32.30\n32.90\n0.000000\n0.000000\n8.0\n0\n0.115834\nFalse\n\n\n60\nSPXW250820P06290000\n2025-07-25 19:59:16+00:00\n6290.0\n42.80\n34.00\n34.60\n0.000000\n0.000000\n3.0\n0\n0.113599\nFalse\n\n\n61\nSPXW250820P06300000\n2025-07-25 20:11:02+00:00\n6300.0\n44.80\n35.70\n36.40\n0.000000\n0.000000\n15.0\n0\n0.111326\nFalse\n\n\n62\nSPXW250820P06310000\n2025-07-25 19:59:42+00:00\n6310.0\n47.20\n37.60\n38.30\n0.000000\n0.000000\n4.0\n0\n0.108999\nFalse\n\n\n63\nSPXW250820P06320000\n2025-07-25 19:35:39+00:00\n6320.0\n48.85\n39.60\n40.20\n0.000000\n0.000000\n3.0\n0\n0.106435\nFalse\n\n\n64\nSPXW250820P06325000\n2025-07-25 13:47:22+00:00\n6325.0\n57.90\n40.60\n41.30\n0.000000\n0.000000\n4.0\n0\n0.105314\nFalse\n\n\n65\nSPXW250820P06330000\n2025-07-25 19:35:56+00:00\n6330.0\n51.45\n41.70\n42.30\n0.000000\n0.000000\n7.0\n0\n0.103959\nFalse\n\n\n66\nSPXW250820P06340000\n2025-07-25 13:37:46+00:00\n6340.0\n61.92\n43.90\n44.60\n0.000000\n0.000000\n4.0\n0\n0.101545\nFalse\n\n\n67\nSPXW250820P06350000\n2025-07-25 19:58:36+00:00\n6350.0\n57.50\n46.30\n47.00\n0.000000\n0.000000\n11.0\n0\n0.099000\nFalse\n\n\n68\nSPXW250820P06360000\n2025-07-25 14:30:50+00:00\n6360.0\n66.90\n48.70\n49.50\n0.000000\n0.000000\n1.0\n0\n0.096311\nFalse\n\n\n70\nSPXW250820P06375000\n2025-07-25 19:52:10+00:00\n6375.0\n66.77\n52.90\n53.70\n0.000000\n0.000000\n1.0\n0\n0.092359\nFalse\n\n\n71\nSPXW250820P06380000\n2025-07-25 19:52:19+00:00\n6380.0\n67.10\n54.40\n55.20\n0.000000\n0.000000\n2.0\n0\n0.091013\nFalse\n\n\n72\nSPXW250820P06390000\n2025-07-25 19:52:19+00:00\n6390.0\n70.80\n57.40\n58.20\n0.000000\n0.000000\n3.0\n0\n0.088033\nTrue\n\n\n73\nSPXW250820P06400000\n2025-07-25 19:52:19+00:00\n6400.0\n74.70\n60.70\n61.50\n0.000000\n0.000000\n2.0\n0\n0.085088\nTrue\n\n\n75\nSPXW250820P06420000\n2025-07-25 19:57:32+00:00\n6420.0\n83.10\n68.00\n68.90\n0.000000\n0.000000\n1.0\n0\n0.078977\nTrue\n\n\n76\nSPXW250820P06425000\n2025-07-25 19:58:28+00:00\n6425.0\n84.90\n69.90\n70.80\n0.000000\n0.000000\n1.0\n0\n0.077177\nTrue\n\n\n79\nSPXW250820P06450000\n2025-07-25 17:59:21+00:00\n6450.0\n98.02\n80.70\n81.60\n0.000000\n0.000000\n63.0\n0\n0.067556\nTrue\n\n\n81\nSPXW250820P06550000\n2025-07-25 19:36:12+00:00\n6550.0\n162.00\n139.50\n142.20\n0.000000\n0.000000\n1.0\n0\n0.000010\nTrue\n\n\n\n\n\n\n\n\n# save data as csv\n#spx_calls.to_csv('spxcall_07252022.csv', index=False)\n#spx_puts.to_csv('spxput_07252022.csv', index=False)\n\n\n\nYou may start from here\n\n# read saved spx option data\nspx_calls = pd.read_csv('spxcall_07252022.csv')\nspx_puts = pd.read_csv('spxput_07252022.csv')\n\n\n\nCreate python class OptionAnalytics\nWrap everything up in a python class.\n\nclass OptionAnalytics:\n    def __init__(self, option_chain, expiry, today):\n        self.expiry = expiry\n        self.today = today\n        if not type(today) == datetime.datetime:\n            self.today = dt.strptime(today, '%Y-%m-%d')\n        self.calls, self.puts = option_chain\n        self.ks_c = self.calls['strike']\n        self.cs = (self.calls['bid'] + self.calls['ask'])/2 \n        self.ks_p = self.puts['strike'] \n        self.ps = (self.puts['bid'] + self.puts['ask'])/2         \n        # strikes that are traded for both calls and puts\n        self.ks = np.array([])\n        for k in self.ks_c:\n            if k in np.array(self.ks_p):\n                self.ks = np.concatenate([self.ks, [k]])\n\n        self.mids_call = np.array([])\n        for k in self.ks:\n            self.calls[self.calls['strike'] == k]['bid']\n            bid = self.calls[self.calls['strike'] == k]['bid']\n            ask = self.calls[self.calls['strike'] == k]['ask']\n            self.mids_call = np.concatenate([self.mids_call, np.array((bid + ask)/2)])\n\n        self.mids_put = np.array([])\n        for k in self.ks:\n            bid = self.puts[self.puts['strike'] == k]['bid']\n            ask = self.puts[self.puts['strike'] == k]['ask']\n            self.mids_put = np.concatenate([self.mids_put, np.array((bid + ask)/2)])\n            \n        tmp = self.imp_vols()\n        self.ivs, self.s_adj = tmp['imp_vols'], tmp['s_adj']\n        \n    # put-call parity plot \n    def plot_parity(self):\n        plt.figure(figsize=(9, 5))\n        plt.plot(self.ks, self.mids_call - self.mids_put, 'r.--')\n        plt.ylabel(r'$C - P$', fontsize=12)\n        plt.xlabel(r'$K$', fontsize=12)\n        plt.title(f'Expiry: {self.expiry}', fontsize=15);\n        return None\n            \n    def plot_arb(self):\n        # monotonicity and convexity for option premia vs strikes\n        fig, axes = plt.subplots(1, 2, figsize=(12, 5), sharey=True)\n        axes[0].plot(self.ks_c, self.cs, 'bo--')\n        axes[0].set_ylabel('Option mid price', fontsize=12)\n        axes[0].set_xlabel('Strike', fontsize=12)\n        axes[1].plot(self.ks_p, self.ps, 'ro--')\n        axes[1].set_xlabel('Strike', fontsize=12);\n        return None\n        \n    # plot implied vol\n    def plot_imp_vols1(self):\n        ivs_c = self.calls['impliedVolatility']\n        ivs_p = self.puts['impliedVolatility']\n        # plot \n        plt.figure(figsize=(10, 6))\n        plt.plot(self.ks_p, ivs_p, 'ro--', label='implied vol from puts')\n        plt.plot(self.ks_c, ivs_c, 'bo--', label='implied vol from calls')\n        plt.title(f'Expiration date: {self.expiry}', fontsize=15)\n        plt.xlabel('Strikes', fontsize=12)\n        plt.ylabel('Impliied Volatilities', fontsize=12)\n        plt.legend();\n        return None\n        \n    # Black-Scholes formula for call\n    def bs_call(self, s, K, t, sigma, r=0):\n        d1 = (log(s/K) + r*t)/(sigma*sqrt(t)) + sigma*sqrt(t)/2\n        d2 = d1 - sigma*sqrt(t)\n        return s*norm.cdf(d1) - K*exp(-r*t)*norm.cdf(d2)\n    \n    # function calculating implied vol by the bisection method\n    def bs_impvol_call(self, s0, K, T, C, r=0):\n        K = np.array([K])\n        n = len(K)\n        sigmaL, sigmaH = 1e-10*np.ones(n), 10*np.ones(n)\n        CL, CH = self.bs_call(s0, K, T, sigmaL, r), self.bs_call(s0, K, T, sigmaH, r)\n        while np.mean(sigmaH - sigmaL) &gt; 1e-10:\n            sigma = (sigmaL + sigmaH)/2\n            CM = self.bs_call(s0, K, T, sigma, r)\n            CL = CL + (CM &lt; C)*(CM - CL)\n            sigmaL = sigmaL + (CM &lt; C)*(sigma - sigmaL)\n            CH = CH + (CM &gt;= C)*(CM - CH)\n            sigmaH = sigmaH + (CM &gt;= C)*(sigma - sigmaH)    \n        return sigma[0]\n    \n    # calculate implied vols\n    def imp_vols(self):\n        # regress call - put over strike K \n        # apply put-call parity \n        df = {'CP': self.mids_call - self.mids_put, 'Strike': self.ks}\n        result = sm.ols(formula='CP ~ Strike', data=df).fit()\n        s_adj, pv = result.params[0], -result.params[1]\n        ks_pv = self.ks*pv\n        days_to_expiry = (dt.strptime(self.expiry, '%Y-%m-%d') - self.today).days\n        imp_vols = self.bs_impvol_call(s_adj, ks_pv, days_to_expiry/365, self.mids_call, r=0)        \n        return {'imp_vols': imp_vols, 'pv': pv, 's_adj': s_adj}\n    \n    # plot implied vol\n    def plot_imp_vols2(self):\n        plt.figure(figsize=(10, 6))\n        y = self.ivs[self.ivs&gt;0.001]\n        x = self.ks[self.ivs&gt;0.001]\n        plt.plot(log(x/self.s_adj), y, 'b.--')\n        plt.plot(log(x/self.s_adj), y, 'r.')\n        plt.xlabel('logmoneyness', fontsize=12)\n        plt.ylabel('implied volatilities', fontsize=12)\n        plt.title('Implied volatilities vs Logmoneyness', fontsize=15);\n        return None\n    \n    def __call__(self):\n        pass\n\n\nexpiry = '2022-08-26'\ntoday = '2022-07-25'\n# today = dt.now()\nspx_opt = OptionAnalytics([spx_calls, spx_puts], expiry, today)\n#spx_opt = OptionAnalytics([spx_calls, spx_puts], spx_expiries[idx])\n\nC:\\Windows\\Temp\\ipykernel_3812\\903028481.py:94: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  s_adj, pv = result.params[0], -result.params[1]\n\n\n\nspx_opt.plot_arb()\n\n\n\n\n\n\n\n\n\nspx_opt.plot_parity()\n\n\n\n\n\n\n\n\n\nspx_opt.s_adj\n\n3956.9116921934447\n\n\n\nspx_opt.imp_vols()\n\nC:\\Windows\\Temp\\ipykernel_3812\\903028481.py:94: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  s_adj, pv = result.params[0], -result.params[1]\n\n\n{'imp_vols': array([0.30600045, 0.30595555, 0.2977905 , 0.29545201, 0.28072122,\n        0.28232929, 0.2760224 , 0.27571335, 0.26859412, 0.26908309,\n        0.27284159, 0.2708769 , 0.26853801, 0.26566743, 0.26527454,\n        0.26282943, 0.26242285, 0.2594965 , 0.25959885, 0.25941643,\n        0.25750019, 0.25653246, 0.25254566, 0.25387708, 0.25385611,\n        0.2507587 , 0.25183417, 0.24960497, 0.24816526, 0.24549749,\n        0.2473746 , 0.24511455, 0.24306506, 0.24344569, 0.24239335,\n        0.2381772 , 0.23923107, 0.23911993, 0.23822523, 0.23924822,\n        0.23345209, 0.23237829, 0.2344444 , 0.23344536, 0.22909791,\n        0.22899399, 0.23093383, 0.23010241, 0.22853441, 0.22734051,\n        0.22629503, 0.22473931, 0.22267772, 0.22467133, 0.22094489,\n        0.22158022, 0.22029972, 0.21894173, 0.22040126, 0.21866736,\n        0.21803138, 0.21752707, 0.21522827, 0.21498524, 0.21433691,\n        0.21338911, 0.21299896, 0.20983357, 0.21131474, 0.20839273,\n        0.20862321, 0.20877018, 0.20719259, 0.20584517, 0.20362794,\n        0.20224901, 0.20071144, 0.20063567, 0.19902292, 0.19711411,\n        0.19699863, 0.19436676, 0.1925327 , 0.18606077, 0.18129871,\n        0.1965902 , 0.22174679]),\n 'pv': 0.9978522732469026,\n 's_adj': 3956.9116921934447}\n\n\n\nspx_opt.plot_imp_vols2(), spx_opt.plot_imp_vols1();"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#a-shorter-time-to-expiry-option-on-spx",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#a-shorter-time-to-expiry-option-on-spx",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "A shorter time to expiry option on SPX",
    "text": "A shorter time to expiry option on SPX\n\nTips: You may skip this part if you encounter an error.\n\n# choose an expiry \nidx = 5\ntoday = dt.strftime(dt.now(), '%Y-%m-%d')\nday_count = (dt.strptime(spx_expiries[idx], '%Y-%m-%d') - dt.now()).days\nprint(f'option expiry = {spx_expiries[idx]}, today = {today}')\nprint(f'There are {day_count} days to expiry')\noption_chain = spx.option_chain(spx_expiries[idx])\nspx_calls1 = option_chain.calls\nspx_puts1 = option_chain.puts\n\noption expiry = 2025-08-04, today = 2025-07-28\nThere are 6 days to expiry\n\n\n\n# clean data\nspx_calls1 = spx_calls1.dropna()\nspx_calls1 = spx_calls1[(spx_calls1['bid'] &gt; 0) & (spx_calls1['ask'] &gt; 0)]\nspx_puts1 = spx_puts1.dropna()\nspx_puts1 = spx_puts1[(spx_puts1['bid'] &gt; 0) & (spx_puts1['ask'] &gt; 0)]\n\n\ntoday = dt.now()\nspx_opt1 = OptionAnalytics([spx_calls1, spx_puts1], spx_expiries[idx], today)\n\nC:\\Windows\\Temp\\ipykernel_3812\\903028481.py:94: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  s_adj, pv = result.params[0], -result.params[1]\n\n\n\nspx_opt1.plot_arb()\n\n\n\n\n\n\n\n\n\nspx_opt1.plot_parity()\n\n\n\n\n\n\n\n\n\nspx_opt.imp_vols()['pv']\n\nC:\\Windows\\Temp\\ipykernel_3812\\903028481.py:94: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  s_adj, pv = result.params[0], -result.params[1]\n\n\n0.9978522732469026\n\n\n\nspx_opt1.s_adj, spx_opt1.imp_vols()['pv']\n\nC:\\Windows\\Temp\\ipykernel_3812\\903028481.py:94: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  s_adj, pv = result.params[0], -result.params[1]\n\n\n(6384.272448907927, 0.9936040369548137)\n\n\n\nspx_opt1.plot_imp_vols2(), spx_opt1.plot_imp_vols1();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYou may start from here."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#gpr-fit-for-spx-implied-volatility-curve",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#gpr-fit-for-spx-implied-volatility-curve",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "GPR fit for SPX implied volatility curve",
    "text": "GPR fit for SPX implied volatility curve\n\n# The posterior mean function from GPR\n# inputs: \n# m: prior mean function \n# k: prior kernel\n# y: observations\n# x: indices\n# \n# output: the posterior mean function\n\ndef pos_mean(m, k, y, x, sigma=0.001):\n    n = len(x)\n    \n    # calculate the covariance matrices\n    tmp, _ = np.meshgrid(x, x)\n    Sigma_YY = k(tmp, _)\n    Sigma_YY = Sigma_YY + sigma**2*np.identity(n)\n    \n    # determine Sigma_YY_inv(Y - EY) by solving the linear system Sigma_YY x = Y - EY\n    Sigma_YY_inv_Y_EY = np.linalg.solve(Sigma_YY, y - m(x))\n    \n    # return the posterior mean function\n    return lambda xx: m(xx) + sum(k(xx, x)*Sigma_YY_inv_Y_EY)\n\n\n# The posterior kernel from GPR\n# inputs: \n# k: prior kernel\n# x: indices\n# \n# output: the posterior kernel\n\ndef pos_kernel(k, x, sigma=0.1):\n    n = len(x)\n    \n    # calculate the covariance matrices\n    tmp, _ = np.meshgrid(x, x)\n    Sigma_YY = k(tmp, _)\n    Sigma_YY = Sigma_YY + sigma**2*np.identity(n)\n    \n    # return the posterior kernel\n    def _(xx, xp):\n        # determine Sigma_YY_inv Sigma_Yxp by solving the linear system Sigma_YY x = Sigma_Yxp\n        Sigma_YY_inv_Yxp = np.linalg.solve(Sigma_YY, k(xp, x))\n        Sigma_xY = k(xx, x)\n        return k(xx, xp) - sum(Sigma_xY*Sigma_YY_inv_Yxp)\n        \n    return _ \n\n\nimp_vols = spx_opt.ivs\nlogmnyns = np.log(spx_opt.ks/spx_opt.s_adj)\n\n# set hyperparameters by guessing\nA, l, sigma = 0.1, 0.1, 0.01\n\n# prior mean function\n# set prior mean as sample mean of implied vols\niv_mean = imp_vols.mean()\nmpr = lambda x: iv_mean\n\n# prior kernel\nk = lambda x, y: A*np.exp(-np.abs(x-y)**2/2/l**2)\n\n# indices and observations\nx_is = logmnyns\nn = len(x_is)\ny_is = imp_vols\n\n# posterior mean function for implied vol\nmpo_iv = pos_mean(mpr, k, y_is, x_is, sigma=sigma)\nmpo_iv = np.vectorize(mpo_iv)\nmpo_iv(x_is)\n\n\n# fitted values\niv_hat = mpo_iv(x_is)\npd.DataFrame(y_is, iv_hat)\n\n\n\n\n\n\n\n\n0\n\n\n\n\n0.307461\n0.306000\n\n\n0.299448\n0.305956\n\n\n0.298590\n0.297790\n\n\n0.294401\n0.295452\n\n\n0.288030\n0.280721\n\n\n...\n...\n\n\n0.192479\n0.192533\n\n\n0.185995\n0.186061\n\n\n0.181538\n0.181299\n\n\n0.196908\n0.196590\n\n\n0.221521\n0.221747\n\n\n\n\n87 rows × 1 columns\n\n\n\n\n# plot \nplt.figure(figsize=(9, 6))\nplt.plot(x_is, y_is, 'bo', label='Market data')\nplt.xlabel('logmoneyness')\nplt.ylabel('implied vol')\nx = np.linspace(x_is.min(), x_is.max(), 200)\nplt.plot(x, mpo_iv(x), 'r--', label='GPR fit')\nplt.legend();\n\n\n\n\n\n\n\n\n\n# analysis on absolute errors \nabs_errs = np.abs(iv_hat - y_is)\nplt.plot(x_is, abs_errs, 'bo')\nplt.xlabel('logmoneyness', fontsize=12) \nplt.ylabel('errors', fontsize=12)\npd.DataFrame(abs_errs).describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\n0\n87.0\n0.001156\n0.001303\n0.000011\n0.000347\n0.000829\n0.001325\n0.007309\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFine tune hyperparameters by MLE\n\n# estimate the hyperparameters by MLE\n\n# objective function\ndef obj(x, y):\n    def _(params):\n        A, l, sigma = params\n        k = lambda u, v: A*np.exp(-np.abs(u-v)**2/2/l**2)\n        n = len(x)\n        # calculate the covariance matrices\n        tmp, _ = np.meshgrid(x, x)\n        Sigma_YY = k(tmp, _)\n        Sigma_YY = Sigma_YY + sigma**2*np.identity(n)\n        Sigma_YY_inv_y = np.linalg.solve(Sigma_YY, y)        \n        return np.log(np.linalg.det(Sigma_YY)) + sum(y*Sigma_YY_inv_y) #this is in fact negative log likelihood\n    return _\n\n\nfrom scipy.optimize import minimize\n\n\n%%time\n# minimize objective function\nprint(obj(x_is, y_is)([0.1, 0.1, 0.1]))\npars = [0.1, 0.1, 0.1]\nres = minimize(obj(x_is, y_is), pars, method='nelder-mead', \n               options={'xatol': 1e-8, 'disp': True}) \nhyparams = res.x\nhyparams\n\n-381.2423169273305\n\n\nC:\\Windows\\Temp\\ipykernel_3812\\1457444304.py:14: RuntimeWarning: divide by zero encountered in log\n  return np.log(np.linalg.det(Sigma_YY)) + sum(y*Sigma_YY_inv_y) #this is in fact negative log likelihood\nd:\\HuaweiMoveData\\Users\\平面向皮卡丘\\Desktop\\24-25-3\\量化金融专题\\slides\\.venv\\Lib\\site-packages\\scipy\\optimize\\_optimize.py:869: RuntimeWarning: invalid value encountered in subtract\n  np.max(np.abs(fsim[0] - fsim[1:])) &lt;= fatol):\n\n\nCPU times: total: 18.2 s\nWall time: 9.85 s\n\n\n&lt;timed exec&gt;:4: RuntimeWarning: Maximum number of function evaluations has been exceeded.\n\n\narray([ 0.13481481,  0.16574074, -0.00740741])\n\n\n\n# hyperparameters estimated from MLE\nA, l, sigma = hyparams\n\n# prior mean function\n# set prior mean as sample mean of implied vols\niv_mean = imp_vols.mean()\nmpr = lambda x: iv_mean\n\n# prior kernel\nk = lambda x, y: A*np.exp(-np.abs(x-y)**2/2/l**2)\n\n# indices and observations\nx_is = logmnyns\nn = len(x_is)\ny_is = imp_vols\n\n# posterior mean function for implied vol\nmpo_iv = pos_mean(mpr, k, y_is, x_is, sigma=sigma)\nmpo_iv = np.vectorize(mpo_iv)\n#mpo_iv(x_is)\n\n\n# plot \nplt.figure(figsize=(9, 6))\nplt.plot(x_is, y_is, 'bo', label='Market data')\nplt.xlabel('logmoneyness')\nplt.ylabel('implied vol')\nx = np.linspace(x_is.min(), x_is.max(), 200)\nplt.plot(x, mpo_iv(x), 'r--', label='GPR fit')\nplt.legend();\n\n\n\n\n\n\n\n\n\n# analysis on absolute errors \nabs_errs = np.abs(iv_hat - y_is)\nplt.plot(x_is, abs_errs, 'bo')\nplt.xlabel('logmoneyness', fontsize=12) \nplt.ylabel('errors', fontsize=12)\npd.DataFrame(abs_errs).describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\n0\n87.0\n0.001156\n0.001303\n0.000011\n0.000347\n0.000829\n0.001325\n0.007309"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#what-is-vix",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#what-is-vix",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "What is VIX?",
    "text": "What is VIX?\nQuote from this page in Investopedia:\n\nCreated by the Chicago Board Options Exchange (CBOE), the Volatility Index, or VIX, is a real-time market index that represents the market’s expectation of 30-day forward-looking volatility. Derived from the price inputs of the S&P 500 index options, it provides a measure of market risk and investors’ sentiments. It is also known by other names like “Fear Gauge” or “Fear Index.” Investors, research analysts and portfolio managers look to VIX values as a way to measure market risk, fear and stress before they take investment decisions.\n\n\nIntroduced in 1993, the Volatility Index (VIX) was initially a weighted measure of the implied volatility (IV) of eight S&P 100 at-the-money put and call options. Ten years later, in 2004, it expanded to use options based on a broader index, the S&P 500. This expansion allows for a more accurate view of investors’ expectations on future market volatility. VIX values higher than 30 are usually associated with a significant amount of volatility as a result of investor fear or uncertainty. Values below 15 ordinarily correspond to less stressful, or even complacent, times in the markets.\n\n\nOriginally, the VIX computation was designed to mimic the implied volatility of an at-the-money 1 month option on the OEX index. It did this by averaging volatilities from 8 options (puts and calls from the closest to ATM strikes in the nearest and next to nearest months).\nThe CBOE changed the VIX computation: “CBOE is changing VIX to provide a more precise and robust measure of expected market volatility and to create a viable underlying index for tradable volatility products.”\nCBOE listed futures on the VIX in 2004."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-indices-published-by-cboe",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-indices-published-by-cboe",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Volatility indices published by CBOE",
    "text": "Volatility indices published by CBOE\nIn addition to VIX, other volatility indices published by CBOE include\n\nVIX9D\nVIX3M\nVIX6M\nVOX\nVXD: Dow Jones index volatility\nRVX\nVXN\nVVIX: VIX of VIX.\n\n\n\n\n指数\n标的资产\n期限\n用途\n\n\n\n\nVIX9D\n标普 500\n9 天\n短期市场波动对冲\n\n\nVIX3M\n标普 500\n3 个月\n中长期波动管理\n\n\nVIX6M\n标普 500\n6 个月\n长期波动对冲\n\n\nVOX\n纳斯达克 100\n30 天\n科技股波动监测\n\n\nVXD\n道琼斯工业平均指数\n30 天\n蓝筹股波动监测\n\n\nRVX\n房地产投资信托 (REITs)\n30 天\n房地产市场波动监测\n\n\nVXN\n纳斯达克综合指数\n30 天\n科技股及小型股波动监测\n\n\nVVIX\nVIX 指数本身\n30 天\n波动率的波动性 (市场恐慌指标)\n\n\n\n\nNote\nMore volatility indices published by CBOE can be found in this link."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#formula-of-financial-engineering",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#formula-of-financial-engineering",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "“Formula of financial engineering”",
    "text": "“Formula of financial engineering”\nEngineering: “Build something new out of something that is not.”\nNotice that all payoffs we saw before can be expressed as a combination of payoffs from calls and puts, even the underlying itself since it can be regarded as a call struck at zero. A natural question to ask is, to what extent, can a given payoff function be represented as a combination of calls and puts?\nThe answer is surprisingly “all the payoffs”! The following formula shows how.\nLet \\(\\varphi\\) be a payoff function, we have\n\\[\n\\varphi(s) = \\varphi(f) + \\varphi'(f)(s - f) + \\int_f^\\infty (s - k)^+ \\varphi''(k) \\mathrm{d}k + \\int_0^f (k - s)^+ \\varphi''(k)\\mathrm{d}k.\n\\]\nLet \\(\\delta\\) denote the Dirac delta function and \\(\\theta\\) the Heaviside function. Note that heuristically \\(\\theta' = \\delta\\), i.e., the Dirac delta can be regarded as the derivative of the Heaviside function.\nThe payoff \\(\\varphi(s)\\) at time \\(T\\) can be written as\n\\[\\begin{aligned}\n\\varphi(s) &= \\int_0^\\infty \\varphi(k) \\delta(s - k)\\,\\mathrm{d}k \\\\\n&= \\int_0^f \\varphi(k) \\delta(s - k)\\,\\mathrm{d}k + \\int_f^\\infty \\varphi(k) \\delta(s - k)\\,\\mathrm{d}k \\\\\n&= \\varphi(f) - \\int_0^f \\varphi'(k) \\theta(k - s)\\,\\mathrm{d}k + \\int_f^\\infty \\varphi'(k) \\theta(s - k)\\,\\mathrm{d}k \\\\\n&= \\varphi(f) + \\varphi'(f) (s - f) + \\int_0^f \\varphi''(k) (k - s)^+\\,\\mathrm{d}k + \\int_f^\\infty \\varphi''(k) (s - k)^+\\,\\mathrm{d}k.\n\\end{aligned}\\]\nThus,\n\\[\n\\varphi(S_T) = \\varphi(f) + \\varphi'(f) (S_T - f) + \\int_0^f \\varphi''(k) (k - S_T)^+ \\mathrm{d}k + \\int_f^\\infty \\varphi''(k) (S_T - k)^+ \\mathrm{d}k.\n\\]\nWith \\(f = \\Eof{S_T}\\) and taking expectation on both sides, we end up\n\\[\\begin{aligned}\n\\E[\\varphi(S_T)] &= \\varphi(f) + \\int_0^f \\varphi''(k) P(k)\\, \\mathrm{d}k + \\int_f^\\infty \\varphi''(k) C(k)\\, \\mathrm{d}k.\n\\end{aligned}\\]\n\nThe price of any European style contingent claim can be expressed in terms of strips of out-of-money European options.\n\n\nRemark\nDirac delta function \\(\\delta\\) is a distribution, not a function. It is defined by the property that for any continuous function \\(f\\), we have \\[\n\\int_{-\\infty}^\\infty f(x) \\delta(x - a)\\,\\mathrm{d}x = f(a).\n\\]\n\n\n\nDirac delta function\n\n\nHeaviside function \\(\\theta\\) is defined as \\(\\theta(x) = 0\\) for \\(x &lt; 0\\) and \\(\\theta(x) = 1\\) for \\(x \\geq 0\\). It is the integral of the Dirac delta function, i.e., \\(\\theta'(x) = \\delta(x)\\).\n严格定义: 令 \\(\\delta_1(x), \\delta_2(x), ...\\) 为一个连续实函数的序列. 若 \\(\\delta_n(x)\\) 满足以下两个条件, 那么我们把该函数列称为狄拉克 \\(\\delta\\) 函数 (列):\n对所有性质良好 (例如在 \\(x=0\\) 连续) 的 \\(f(x)\\) , 都有 \\[\n\\lim_{n \\to \\infty} \\int_{-\\infty}^\\infty f(x) \\delta_n(x)\\,\\mathrm{d}x = f(0).\n\\]"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#example---log-contract",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#example---log-contract",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Example - log contract",
    "text": "Example - log contract\nConsider the log contract \\(\\displaystyle \\varphi(s) = \\log s\\). Since \\(\\displaystyle \\varphi'(s) = \\frac1s\\) and \\(\\displaystyle \\varphi''(s) = -\\frac1{s^2}\\), we obtain\n\\[\n\\log s = \\log f + \\frac{s - f}{f} - \\int_0^f \\frac{(k - s)^+}{k^2} \\mathrm{d}k - \\int_f^\\infty \\frac{(s - k)^+}{k^2} \\mathrm{d}k.\n\\]\nThus,\n\\[\n\\Eof{\\log S_T} = \\log f - \\int_0^f \\, \\frac{P(k)}{k^2} \\,\\mathrm{d}k - \\int_f^\\infty\\, \\frac{C(k)}{k^2} \\,\\mathrm{d}k.\n\\]\nOn the other hand, assume \\(S_t\\) satisfies the SDE under risk neutral probability with zero interest and dividend rates\n\\[\n\\frac{\\mathrm{d}S_t}{S_t} = \\sigma_t \\mathrm{d}W_t,\n\\]\nby applying Ito’s formula to \\(\\log S_t\\), we obtain\n\\[\n\\log S_T = \\log S_0 + \\int_0^T \\sigma_t \\, \\mathrm{d}W_t - \\frac{1}{2} \\int_0^T \\sigma_t^2 \\, \\mathrm{d}t.\n\\]\nIt follows by taking expectation on both sides that\n\\[\n\\Eof{\\log S_T} = \\log S_0 - \\frac12 \\Eof{\\int_0^T \\sigma_t^2 \\mathrm{d}t}\n\\]\nCompare the two identities we obtain\n\\[\n\\frac1T \\Eof{\\int_0^T \\sigma_t^2 \\mathrm{d}t} = \\frac2T \\int_0^f \\, \\frac{P(k)}{k^2} \\,\\mathrm{d}k + \\frac2T \\int_f^\\infty\\, \\frac{C(k)}{k^2} \\,\\mathrm{d}k.\n\\]\n注: 这个式子的左端就是 VIX 的新的定义. “The new VIX squared approximates the conditional risk-neutral expectation of the annualized return variance over the next 30 calendar days.” (Carr and Wu 2004)\n\nNote\n\nModulo the diffusion process assumption on the underlying, the last relationship is model-free.\n\nVIX is calculated based on this formula with \\(T\\) equal to a month.\n\n注: \\(\\Eof{(s-k)^+} = C(k)\\), \\(\\Eof{(k-s)^+} = P(k)\\). 这里的 \\(C(k)\\) 代表的是行权价为 \\(k\\) 的 call 期权的价格, 而 \\(P(k)\\) 代表的是行权价为 \\(k\\) 的 put 期权的价格.\nForward price \\(F\\) is defined as the price of a forward contract that delivers one unit of the underlying at time \\(T\\). It is given by \\[\nF = S e^{-(d-r)\\tau} = S e^{-r\\tau} e^{-d\\tau}.\n\\]\nHere, \\(S\\) represents the current price of the underlying, \\(d\\) is the dividend yield, \\(r\\) is the risk-free interest rate, and \\(\\tau\\) is the time to maturity in years."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#how-is-vix-calculated",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#how-is-vix-calculated",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "How is VIX calculated?",
    "text": "How is VIX calculated?\nVIX definition in the CBOE white paper:\n\\[\\text{VIX}^2=\\frac{2}{T}\\,\\sum_i\\,\\frac{\\Delta K_i}{K_i^2}\\,\nQ_i(K_i)\\,-\\,\\frac{1}{T}\\,\\left[\\frac{F}{K_0}-1\\right]^2\n\\]\nwhere \\(Q_i\\) is the price of the out-of-the-money option with strike \\(K_i\\) and \\(K_0\\) is the highest strike below the forward price \\(F\\). \\(T\\) is one month.\n注: 在理论上, 积分是从执行价 \\(k=0\\) 一直走到 \\(+\\infty\\), 以 \\(F\\) 作为“切点”来拼接看跌和看涨期权部分. 但实际操作中, 缺乏一个连续 \\(k\\) 的期权价格曲线, 必须离散化并使用最近的实际执行价 \\(K_0\\) 来近似 cutting price. 由于 \\(K_0\\) 不一定等于 \\(F\\), 就会产生一项偏差, 这项偏差正是: \\[\n\\frac{1}{T}\\,\\left(\\frac{F}{K_0}-1\\right)^2\n\\]\nSimple explanation of VIX formula is that it is a square root of weighted sum of out of the money SPX options.\nQuotes by 于鹏\n\n期权价格反应了当前市场的供需状况. 某个到日期的期权价格反应投资者对这段期间内市场波动的预期, 用真金白银报价出来的波动预期. 而与 in-the-money (实值) 期权比起来, 虚值期权没有内在价值, 只有时间价值. 也就是说虚值期权的价格“更纯粹”的反应了这种预期的价值. 那么用虚值期权来计算 VIX, 更契合其设计目的 (VIX is a measure of expected volatility calculated as ..) 还有一个地方也反应了这点, 没有 bid 报价的虚值期权也不会被列入计算之内, “Only SPX options quoted with non-zero bid prices are used in the VIX calculation”. 意味着没有市场需求的期权没有考虑进来的必要.\n\n\nDownload VIX data from yfinance\n\n\nYou may skip this part if you encounter an error.\n\nstart = '2007-01-01'\nend = '2022-07-29'\nvix = yf.download('^VIX', start=start, end=end)\nvix = vix.drop('Volume', axis=1)\nvix\n\nC:\\Windows\\Temp\\ipykernel_3812\\3558120957.py:3: FutureWarning: YF.download() has changed argument auto_adjust default to True\n  vix = yf.download('^VIX', start=start, end=end)\n[*********************100%***********************]  1 of 1 completed\n\n\n\n\n\n\n\n\nPrice\nClose\nHigh\nLow\nOpen\n\n\nTicker\n^VIX\n^VIX\n^VIX\n^VIX\n\n\nDate\n\n\n\n\n\n\n\n\n2007-01-03\n12.040000\n12.750000\n11.530000\n12.160000\n\n\n2007-01-04\n11.510000\n12.420000\n11.280000\n12.400000\n\n\n2007-01-05\n12.140000\n12.250000\n11.680000\n11.840000\n\n\n2007-01-08\n12.000000\n12.830000\n11.780000\n12.480000\n\n\n2007-01-09\n11.910000\n12.470000\n11.690000\n11.860000\n\n\n...\n...\n...\n...\n...\n\n\n2022-07-22\n23.030001\n23.809999\n22.410000\n23.299999\n\n\n2022-07-25\n23.360001\n24.570000\n23.190001\n24.330000\n\n\n2022-07-26\n24.690001\n25.309999\n23.820000\n23.950001\n\n\n2022-07-27\n23.240000\n24.410000\n23.020000\n24.270000\n\n\n2022-07-28\n22.330000\n23.540001\n22.219999\n23.330000\n\n\n\n\n3920 rows × 4 columns\n\n\n\n\nplt.figure(figsize=(9, 6))\nvix['Close'].plot(label='VIX')\n#plt.plot(spx_vol*100, 'r-.', label='Historical Volatility')\nplt.grid()\nplt.legend();\n\n&lt;Figure size 900x600 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n\n\n# plot log(vix)\nplt.figure(figsize=(9, 6))\nlog(vix)['Close'].plot(label='log ViX')\nplt.grid()\nplt.legend();\n\n&lt;Figure size 900x600 with 0 Axes&gt;"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-derivatives",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-derivatives",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Volatility derivatives",
    "text": "Volatility derivatives\n\nvariance swap\nvolatility swap\nVIX futures\nVIX options"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#variance-swap",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#variance-swap",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Variance swap",
    "text": "Variance swap\nQuote from the Wikipage:\n\nA variance swap is an over-the-counter financial derivative that allows one to speculate on or hedge risks associated with the magnitude of movement, i.e. volatility, of some underlying product, like an  exchange rate , interest rate, or stock index.\n\n\nOne leg of the swap will pay an amount based upon the realized variance of the price changes of the underlying product. Conventionally, these price changes will be daily log returns, based upon the most commonly used closing price. The other leg of the swap will pay a fixed amount, which is the strike, quoted at the deal’s inception. Thus the net payoff to the counterparties will be the difference between these two and will be settled in cash at the expiration of the deal, though some cash payments will likely be made along the way by one or the other counterparty to maintain agreed upon margin.\n\nIn summary, a variance swap is a forward contract on realized (annualized) variance whose payoff function ideally is given by\n\\[\nN \\times \\left(\\frac1T \\int_0^T \\sigma_t^2 \\mathrm{d}t - K \\right)\n\\]\nwhere \\(K\\) is the strike and \\(N\\) denotes the notional."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-swap",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-swap",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Volatility swap",
    "text": "Volatility swap\nQuote from the Wikipage:\n\nIn finance, a volatility swap is a forward contract on the future realised volatility of a given underlying asset. Volatility swaps allow investors to trade the volatility of an asset directly, much as they would trade a price index.\n\n\nThe underlying is usually a foreign exchange (FX) rate (very liquid market) but could be as well a single name equity or index. However, the variance swap is preferred in the equity market because it can be replicated with a linear combination of options and a dynamic position in futures.\n\n\nUnlike a stock option, whose volatility exposure is contaminated by its stock price dependence, these swaps provide pure exposure to volatility alone. This is truly the case only for forward starting volatility swaps. However, once the swap has its asset fixings its mark-to-market value also depends on the current asset price. One can use these instruments to speculate on future volatility levels, to trade the spread between realized and implied volatility, or to hedge the volatility exposure of other positions or businesses.\n\nIn summary, a volatility swap is a forward contract on realized (annualized) volatility whose payoff function ideally is given by\n\\[\nN \\times \\left(\\sqrt{\\frac1T \\int_0^T \\sigma_t^2 \\mathrm{d}t} - K \\right)\n\\]\nwhere \\(K\\) is the strike and \\(N\\) denotes the notional."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#calculating-volatility-swap-fair-strike-from-mgf",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#calculating-volatility-swap-fair-strike-from-mgf",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Calculating volatility swap fair strike from MGF",
    "text": "Calculating volatility swap fair strike from MGF\nBy applying the following formula\n\\[\n\\sqrt x = \\frac1{2\\sqrt\\pi}\\int_0^\\infty s^{-\\frac32}\\left(1 - e^{-xs}\\right) \\mathrm{d}s,\n\\]\nwe obtain\n\\[\n\\Eof{\\sqrt{\\frac1T \\int_0^T \\sigma_t^2 \\mathrm{d}t}} = \\frac1{2\\sqrt\\pi}\\int_0^\\infty s^{-\\frac32}\\left(1 - \\Eof{e^{-xs}}\\right) \\mathrm{d}s\n\\]\nwhere apparently,\n\\[\nx = \\frac1T \\int_0^T \\sigma_t^2 \\mathrm{d}t\n\\]\nand \\(\\Eof{e^{-xs}}\\) the moment generating function for realized variance."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#vix-futures",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#vix-futures",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "VIX futures",
    "text": "VIX futures\nAccording to the VIX page on CBOE,\n\nIntroduced in 2004 on Cboe Futures Exchange (CFE), VIX futures provide market participants with the ability to trade a liquid volatility product based on the VIX Index methodology. VIX futures reflect the market’s estimate of the value of the VIX Index on various expiration dates in the future. VIX futures provide market participants with a variety of opportunities to implement their view using volatility trading strategies, including risk management, alpha generation and portfolio diversification."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#vix-option",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#vix-option",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "VIX option",
    "text": "VIX option\nQuote from this page in Invstopeida\n\nA VIX option is a non-equity index option that uses the CBOE Volatility Index as its underlying asset. Call and put VIX options are both available. The call options hedge portfolios against a sudden market decline, and put options hedge against a rapid reversal of short positions on the S&P 500 index. These options thus allow traders and investors to speculate on future moves in volatility."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#a-look-at-the-vix-option-chain-from-yahoo-finance",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#a-look-at-the-vix-option-chain-from-yahoo-finance",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "A look at the VIX option chain from Yahoo Finance",
    "text": "A look at the VIX option chain from Yahoo Finance\nVisit this Yahoo Finance link for VIX option chain.\n\nYou may skip the next 5 cells if you encounter an error.\n\nvix = yf.Ticker('^VIX')\nvix_expiries = vix.options\nprint(vix_expiries)\n\n('2025-07-30', '2025-08-06', '2025-08-13', '2025-08-20', '2025-08-27', '2025-09-17', '2025-10-22', '2025-11-19', '2025-12-17', '2026-01-21', '2026-02-18', '2026-03-18', '2026-04-15')\n\n\n\n# choose an expiry \nidx = 4\ntoday = dt.strftime(dt.now(), '%Y-%m-%d')\nday_count = (dt.strptime(vix_expiries[idx], '%Y-%m-%d') - dt.now()).days\nprint(f'option expiry = {vix_expiries[idx]}, today = {today}')\nprint(f'There are {day_count} days to expiry')\noption_chain = vix.option_chain(vix_expiries[idx])\nvix_calls, vix_puts = option_chain.calls, option_chain.puts\n\noption expiry = 2025-08-27, today = 2025-07-28\nThere are 29 days to expiry\n\n\n\n# clean data\nvix_calls = vix_calls.drop(['currency', 'contractSize'], axis = 1).dropna()\nvix_calls = vix_calls[(vix_calls['bid'] &gt; 0) & (vix_calls['ask'] &gt; 0)]\nvix_calls\n\n\n\n\n\n\n\n\ncontractSymbol\nlastTradeDate\nstrike\nlastPrice\nbid\nask\nchange\npercentChange\nvolume\nopenInterest\nimpliedVolatility\ninTheMoney\n\n\n\n\n5\nVIXW250827C00018000\n2025-07-25 19:54:01+00:00\n18.0\n2.0\n0.9\n2.35\n0.0\n0.0\n103.0\n0\n1.535159\nFalse\n\n\n6\nVIXW250827C00019000\n2025-07-25 20:11:19+00:00\n19.0\n1.7\n0.7\n2.03\n0.0\n0.0\n88.0\n0\n1.523440\nFalse\n\n\n\n\n\n\n\n\nvix_puts = vix_puts.drop(['currency', 'contractSize'], axis = 1).dropna()\nvix_puts = vix_puts[(vix_puts['bid'] &gt; 0) & (vix_puts['ask'] &gt; 0)]\nvix_puts\n\n\n\n\n\n\n\n\ncontractSymbol\nlastTradeDate\nstrike\nlastPrice\nbid\nask\nchange\npercentChange\nvolume\nopenInterest\nimpliedVolatility\ninTheMoney\n\n\n\n\n7\nVIXW250827P00020000\n2025-07-25 13:46:04+00:00\n20.0\n2.63\n2.13\n3.9\n0.0\n0.0\n1.0\n0\n0.00001\nTrue\n\n\n\n\n\n\n\n\n# save data\n#vix_calls.to_csv('vixcall_07252022.csv', index=False)\n#vix_puts.to_csv('vixput_07252022.csv', index=False)\n\n\n\nYou may start from here.\n\n# read in saved data\nvix_calls = pd.read_csv('vixcall_07252022.csv')\nvix_puts = pd.read_csv('vixput_07252022.csv')\n\n\nexpiry, today = '2022-08-24', '2022-07-25'\nvix_opt = OptionAnalytics([vix_calls, vix_puts], expiry, today)\n#vix_opt = OptionAnalytics([vix_calls, vix_puts], vix_expiries[idx], dt.now())\n\nC:\\Windows\\Temp\\ipykernel_3812\\903028481.py:94: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`\n  s_adj, pv = result.params[0], -result.params[1]\n\n\n\nvix_opt.plot_arb()\n\n\n\n\n\n\n\n\n\nvix_opt.plot_parity()\n\n\n\n\n\n\n\n\n\nvix_opt.plot_imp_vols2(), vix_opt.plot_imp_vols1();"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#gpr-fit-for-vix-option-implied-volatility-curve",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#gpr-fit-for-vix-option-implied-volatility-curve",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "GPR fit for VIX option implied volatility curve",
    "text": "GPR fit for VIX option implied volatility curve\n\nimp_vols = vix_opt.ivs[1:]\n#imp_vols = vix_opt.ivs\nlogmnyns = np.log(vix_opt.ks[1:]/vix_opt.s_adj)\n\n# set hyperparameters by guessing\nsigma, A, l = 0.05, 0.1, 0.1\n\n# prior mean function\n# set prior mean as sample mean of implied vols\niv_mean = imp_vols.mean()\nmpr = lambda x: iv_mean\n\n# prior kernel\nk = lambda x, y: A*np.exp(-np.abs(x-y)**2/2/l**2)\n\n# indices and observations\nx_is = logmnyns\nn = len(x_is)\ny_is = imp_vols\n\n# posterior mean function for implied vol\nmpo_iv = pos_mean(mpr, k, y_is, x_is, sigma=sigma)\nmpo_iv = np.vectorize(mpo_iv)\nmpo_iv(x_is)\n\n\n# fitted values\niv_hat = mpo_iv(x_is)\npd.DataFrame(y_is, iv_hat)\n\n\n\n\n\n\n\n\n0\n\n\n\n\n0.794121\n0.823381\n\n\n0.612930\n0.562470\n\n\n0.561423\n0.581719\n\n\n0.612908\n0.626235\n\n\n0.685567\n0.651083\n\n\n0.736006\n0.768180\n\n\n0.767337\n0.752712\n\n\n0.796917\n0.795185\n\n\n0.833553\n0.833420\n\n\n0.874426\n0.875310\n\n\n0.912757\n0.919806\n\n\n0.945017\n0.938292\n\n\n1.010601\n1.014723\n\n\n1.074513\n1.072477\n\n\n1.127997\n1.134668\n\n\n1.184969\n1.182831\n\n\n1.275277\n1.285238\n\n\n\n\n\n\n\n\n# plot \nplt.figure(figsize=(9, 6))\nplt.plot(x_is, y_is, 'bo', label='Market data')\nplt.xlabel('logmoneyness')\nplt.ylabel('implied vol')\nx = np.linspace(x_is.min(), x_is.max(), 200)\nplt.plot(x, mpo_iv(x), 'r--', label='GPR fit')\nplt.legend();\n\n\n\n\n\n\n\n\n\n# analysis on absolute errors \nabs_errs = np.abs(iv_hat - y_is)\nplt.plot(x_is, abs_errs, 'bo')\nplt.xlabel('logmoneyness', fontsize=12) \nplt.ylabel('errors', fontsize=12)\npd.DataFrame(abs_errs).describe().transpose()\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\n\n\n0\n17.0\n0.013887\n0.01462\n0.000133\n0.002138\n0.007049\n0.020297\n0.05046"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#appendix-optional",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#appendix-optional",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Appendix (Optional)",
    "text": "Appendix (Optional)"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-estimation-using-high-frequency-data",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#volatility-estimation-using-high-frequency-data",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Volatility estimation using high frequency data",
    "text": "Volatility estimation using high frequency data\n\nMarket microstructure noise may contaminate the data in high frequency, resulting in inconsistency of estimators."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#realized-variance",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#realized-variance",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Realized variance",
    "text": "Realized variance\nThe following estimator is called the Realized Variance (RV) estimator\n\\[\n\\sum_{i=1}^n \\, \\left(Y_{t_i} - Y_{t_{i-1}} \\right)^2\n= \\sum_{i=1}^n \\, \\left( \\Delta Y_{t_i} \\right)^2,\n\\]\nwhere \\(Y_t = \\log S_t\\) and \\(S_t\\) is the price series of the asset under consideration.\n\nTechnical notes\n\nRealized variance and realized covariance  Given a partition \\(\\Pi = \\{0 = t_1 &lt; \\cdots &lt; t_n=T\\}\\) of the interval \\([0, T]\\), the realized variance \\([X]_T^\\Pi\\) of the process \\(X_t\\) sampled at \\(\\Pi\\) is defined by \\[\n[X]_T^\\Pi = \\sum_{i=1}^n |X_{t_i} - X_{t_{i-1}}|^2.\n\\]\n\nSimiliarly, the realized covariance between \\(X_t\\) and \\(Y_t\\) sampled at \\(\\Pi\\) is given by\n\\[\n[X, Y]_T^\\Pi = \\sum_{i=1}^n (X_{t_i} - X_{t_{i-1}})(Y_{t_i} - Y_{t_{i-1}})\n\\]\n\nQuadratic variation (integrated variance) and covariation  The quadratic variation of \\(X\\) is defined by the limit \\[\n  \\angl{X}_t = \\lim_{\\|\\Pi_n\\| \\to 0} [X]_T^{\\Pi_n}\n  \\] provided the limit exists. \\(\\Pi_n\\) denotes a sequence of partitions of the interval \\([0, T]\\) such that \\(\\|\\Pi_n\\| \\to 0\\) as \\(n \\to \\infty\\), where \\(\\|\\Pi_n\\|\\) denotes the mesh of the partition \\(\\Pi_n\\).\nLikewise, the covariation between and \\(X\\) and \\(Y\\) is defined by the limit \\[\n  \\angl{X, Y}_t = \\lim_{\\|\\Pi_n\\| \\to 0} [X, Y]_T^{\\Pi_n}.\n  \\]\n\n\n\nAssumption\nThe log price \\(X_t\\) follows the Ito process\n\\[\n\\mathrm{d}X_t = \\mu_t \\mathrm{d}t + \\sigma_t \\mathrm{d}W_t,\n\\] nd where \\(W_t\\) is a Brownian motion. Uer the assumption, \\(\\angl{X}_t = \\int_0^t \\sigma_\\tau^2 \\mathrm{d}\\tau\\)."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#integrated-variance-or-quadratic-variation",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#integrated-variance-or-quadratic-variation",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Integrated variance or quadratic variation",
    "text": "Integrated variance or quadratic variation\nGiven a set of tick data, how can we measure the, say daily, variance?  A possibility is to estimate the integrated variance, also known as the quadratic variation in the theory of semimartingale. We shall use both terms interchangeably hereafter.\nRecall that the quadratic variation \\(\\angl{X}_t\\) of the continuous stochastic process \\(X_t\\) is defined by\n\\[\n\\angl{X}_T:= \\lim_{\\|\\Pi_n\\| \\to 0} \\sum_{{t_i} \\in \\Pi_n} |\\Delta X_{t_i}|^2\n\\]\nprovided the limit exist (in probability).\nThus, the goal is to estimate the quadratic variation of the efficient log price from the transacted log price, i.e., tick data. However, the subtlety is that efficient is not directly observable and is contaminated by market microstructure noises.\n\nNote\n\nIf the process \\(X\\) has jumps, the quadratic variation \\(\\angl{X}\\) becomes price\n\\[\\begin{aligned}\n  \\langle X \\rangle_t &= \\langle X^c \\rangle_t + \\sum_{0 &lt; s \\leq t} |\\Delta X_s|^2,\n  \\end{aligned}\\]\nwhere \\(X^c\\) denotes the continuous part of \\(X\\) and \\(\\Delta X_s := X_s - X_{s^-}\\) is the jump size at time \\(s\\). In this case, the integrated variance usually refers to \\(\\langle X^c \\rangle\\), i.e., the quadratic variation of the continuous part.\nWe shall always assume \\(X\\) is a continuous process, thus no jumps, in the sequel.\n\n\n\nMicrostructure noise\nIn the limit of very high sampling frequency, RV picks up mainly the market microstructure noise. To see this, suppose that the observed price \\(Y_t\\) is given by\n\\[Y_t =X_t +\\epsilon_t,\\]\nwhere \\(X_t\\) is the value of the underlying (log-)price process of interest and \\(\\epsilon_t\\) is a random market microstructure-related noise term, assumed independent of \\(X_t\\). Suppose we sample the price series \\(n+1\\) times (so that there are \\(n\\) price changes) at \\(\\Pi=\\{0=t_0 &lt; \\cdots &lt; t_n = T\\}\\) in the time interval \\([0, T]\\).\nNote that, conditioned on \\(\\cF_T^X\\), the conditional expectation of the realized variance of transacted (log) price satisties\n\\[\\begin{aligned}\n\\E\\left([Y]_T^\\Pi \\mid \\mathcal{F}_T^X\\right) &:= \\sum_{i=1}^n \\E\\left((\\Delta Y_{t_i})^2 \\mid \\mathcal{F}_T^X\\right) \\\\\n&= \\sum_{i=1}^n (\\Delta X_{t_i})^2 + 2 \\sum_{i=1}^n \\Delta X_{t_i} \\E\\left(\\Delta \\epsilon_{t_i} \\mid \\mathcal{F}_T^X\\right) + \\sum_{i=1}^n \\E\\left((\\Delta \\epsilon_{t_i})^2 \\mid \\mathcal{F}_T^X\\right) \\\\\n&= [X]_T + 2 n \\, \\text{var}[\\epsilon] \\\\\n&\\approx \\langle X \\rangle_T + 2 n \\, \\text{var}[\\epsilon].\n\\end{aligned}\\]\n\nNote\nThe difference between \\([X]_T\\) and \\(\\angl{X}_T\\) is referred to as the discretization error, which is usually controled by the integrated quarticity \\(\\int_0^T \\sigma_t^4 \\mathrm{d}t\\).\n\n\n\nAsymptotic result\nA more detailed, but more technical, asymptotic analysis shown in [Zhang, Mykland and Aït-Sahalia][9] yields that as \\(n \\to \\infty\\)\n\\[\n[Y]^{\\Pi}_T \\mathop{\\approx}^{\\mathcal L} \\angl{X}_T + 2 \\, n \\, \\text{var}[\\epsilon] + \\sqrt{ 4 n \\Eof{\\epsilon^4} + \\frac{2T}{n} \\int_0^T \\sigma_t^4 \\mathrm{d}t} \\; Z,\n\\]\nwhere \\(Z \\sim N(0,1)\\).\n\nNote\n\nThe naive RV estimator \\([Y]_T^\\Pi\\) is biased by the variance of market microstructure noise \\(\\epsilon\\). The biasedness increases as the sampling frequency \\(n\\) increases.\n\nWe see that as \\(n\\to\\infty\\), the naive RV estimator \\([Y]_T^\\Pi\\) picks up mainly the microstructure noise.\n\n\n\n\nThe conventional solution\n\nThe conventional solution is to sample at most every five minutes or so.\n\nFor high frequency data, sampling only every 5 minutes usually corresponds to throwing out more than 99% of the points!\n\nTo quote [Zhang, Mykland and Aït-Sahalia][9], “It is difficult to accept that throwing away data, especially in such quantities, can be an optimal solution.”\nFrom a more practical perspective, if we believe that volatility is time-varying, it makes sense to try and measure it from recent data over the last few minutes rather than from a whole day of trading.\n\n\n\nSubsampling\nLet \\(\\Pi^{(k)} = \\{0 \\leq t_0^{(k)} &lt; \\cdots &lt; t_{n_k}^{(k)}\\leq T\\}\\), for \\(1 \\leq k \\leq K\\), be a collection of nonoverlapping subsampling times in \\(\\Pi\\). That is,\n\\[\n\\bigcup_{k=1}^K \\Pi^{(k)} = \\Pi \\quad \\text{ and } \\quad \\Pi^{(k)} \\cap \\Pi^{(\\ell)} = \\emptyset \\; \\text{for } k \\neq \\ell.\n\\]\nA typical example that we shall be using in the following is by sampling every \\(K\\) ticks from the \\(k\\)th tick on. That is,\n\\[\\begin{aligned}\n\\Pi^{(1)} &= \\{t_1 &lt; t_{1+K} &lt; t_{1 + 2K} &lt; \\cdots &lt; t_{1 + n_1 K} \\leq T \\}, \\\\\n\\Pi^{(2)} &= \\{t_2 &lt; t_{2+K} &lt; t_{2 + 2K}&lt; \\cdots &lt; t_{2 + n_2 K} \\leq T \\}, \\\\\n&\\quad \\vdots \\\\\n\\Pi^{(K)} &= \\{t_0 &lt; t_K &lt; t_{2K} &lt; \\cdots &lt; t_{n_K K} \\leq T \\}.\n\\end{aligned}\\]\nWe denote by \\([Y]_T^{\\Pi^{(k)}}\\) the RV estimate of \\(Y\\) using the subsamples that are sampled from the sampling times in \\(\\Pi^{(k)}\\), for \\(1 \\leq k \\leq K\\).\nBy the same token, we have the following asymptotics for each subsample \\(k \\in \\{1, \\cdots, K\\}\\)\n\\[\n[Y]^{\\Pi^{(k)}}_T \\mathop{\\approx}^{\\mathcal L} \\angl{X}_T + 2 \\, n_k \\, \\text{var}[\\epsilon] + \\sqrt{ 4 n_k \\Eof{\\epsilon^4} + \\frac{2T}{n_k} \\int_0^T \\sigma_t^4 \\mathrm{d}t} \\; Z_k\n\\]\nwhere \\(Z_k \\sim N(0,1)\\).\n\n\nBoosting RV estimator\nWe can boost the RV estimator by averaging over the “weak learners” \\([Y]_T^{\\Pi^{(k)}}\\)\n\\[\\begin{aligned}\n[Y]_T^{\\text{avg}} &= \\frac{1}{K} \\sum_{k=1}^K [Y]_T^{\\Pi^{(k)}} \\\\\n&\\approx \\langle X \\rangle_T + 2 \\, \\bar{n}_K \\, \\text{var}[\\epsilon] + \\sqrt{ 4 \\frac{\\bar{n}_K}{K} \\E[\\epsilon^4] + \\frac{4T}{3 \\bar{n}_K} \\int_0^T \\sigma_t^4 \\, \\mathrm{d}t} \\, Z.\n\\end{aligned}\\]\nwhere $n_K := 1K _k n_k $ is the average number of ticks in each subsample, roughly equal to \\(\\frac nK\\).\n\nNote\n\nBoosting reduces biasedness and variance by a factor of \\(K\\), but is unable to completely remove the biasedness.\nThe optimal average subsample size \\(\\bar n^*\\) is given by \\[\n\\bar n^* = \\sqrt[3]{\\frac T{6\\text{var}^2[\\epsilon]} \\int_0^T \\sigma_t^4 \\mathrm{d}t}.\n\\]\n\nThus, the whole sample set is splitted into roughly \\(K^* \\approx \\frac n{\\bar n^*}\\) sets of subsamples.\n\n\n\nThe ZMA estimator\nRecall that\n\\[\\begin{aligned}\n[Y]_T^\\Pi &\\approx \\langle X \\rangle_T + n \\, \\text{var}[\\epsilon], \\\\\n[Y]_T^{\\text{avg}} &\\approx \\langle X \\rangle_T + \\bar{n}_K \\, \\text{var}[\\epsilon].\n\\end{aligned}\\]\nWe can eliminate bias by forming\n\\[\\begin{aligned}\n\\frac{1}{\\bar{n}_K}[Y]_T^{\\text{avg}} - \\frac{1}{n} [Y]_T^\\Pi &\\approx \\left( \\frac{1}{\\bar{n}_K} - \\frac{1}{n} \\right) \\langle X \\rangle_T.\n\\end{aligned}\\]\nThus we obtain the [Zhang, Mykland and Aït-Sahalia][9] (ZMA) bias-corrected estimator of \\(\\angl{X}_T\\):\n\\[\n[Y]_T^{ZMA} := \\frac{1}{n - \\bar n_K} \\, \\left\\{n \\, [Y]_T^{avg} - \\bar n_K \\, [Y]^\\Pi_T \\right\\}.\n\\]\nMoreover, we have the asymptotic behavior for \\([Y]_T^{ZMA}\\) as\n\\[\n[Y]_T^{ZMA} \\approx \\angl{X}_T + \\frac1{\\sqrt[6]n}\\sqrt{\\frac8{c^2}\\text{var}^2[\\epsilon] + c \\frac{4T}3 \\int_0^T \\sigma_t^4 \\mathrm{d}t} \\; Z\n\\]\nwhere \\(Z \\sim N(0,1)\\). The optimal constant \\(c^*\\) is given by\n\\[\nc^* = \\left(\\frac T{12 \\, \\text{var}^2[\\epsilon]} \\int_0^T \\sigma_t^4 \\mathrm{d}t \\right)^{-\\frac13}.\n\\]\n\nNote\nIn the original paper [Zhang, Mykland and Aït-Sahalia][9], the authors suggested the estimator as \\([Y]_T^{avg} - \\frac{\\bar n_K}{n}[Y]_T^\\Pi\\), whereas the estimator \\([Y]_T^{ZMA}\\) obtained above is referred to as the small-sample adjustment in the paper.\n\n\n\nThe Zhou estimator\nDefine\n\\[\\begin{align}\n[Y]_T^{\\Pi, Z} &: = \\sum_{i=1}^n (\\Delta Y_{t_i})^2 + \\sum_{i=2}^n \\Delta Y_{t_i} \\Delta Y_{t_{i-1}} + \\sum_{i=1}^{n-1} \\Delta Y_{t_i} \\Delta Y_{t_{i+1}} \\\\\n&= \\sum_{i=1}^n (Y_{t_i} - Y_{t_{i-1}})(Y_{t_{i+1}} - Y_{t_{i-2}}).\n\\end{align}\\]\nThus, under the assumption \\(Y = X + \\epsilon\\) of serially uncorrelated noise independent of returns \\(X\\), we obtain \\(\\mathbb{E}\\left[[Y]^{\\Pi, Z}\\right] = \\Eof{[X]_T}\\).\nBy further assume \\(X_t = \\sigma W_{\\tau(t)}\\) (a time-changed Brownian motion) for some Brownian motion \\(W\\) and deterministic increasing function \\(\\tau(\\cdot)\\), since\n\\[\n\\Eof{(\\Delta X_{t_i})^2} = \\sigma^2 \\Eof{\\left\\{ W_{\\tau(t_i)} - W_{\\tau(t_{i-1})} \\right\\}^2} = \\sigma^2 \\{\\tau(t_i) - \\tau(t_{i-1})\\},\n\\]\nwe have\n\\[\n\\mathbb{E}\\left[[Y]^{\\Pi, Z}\\right] = \\sigma^2 \\{\\tau(T) - \\tau(0) \\} = \\angl{X}_T.\n\\]\nIn other words, in this case \\([Y]^{\\Pi, Z}\\) is an unbiased estimator of \\(\\angl{X}_T\\)."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#realized-library",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#realized-library",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Realized library",
    "text": "Realized library\nRealized Library at Oxford-Man Institute of Quantitative Finance publishes daily realized variances/volatilities for various indices.\nhttps://realized.oxford-man.ox.ac.uk/\n\nNote\nUnfortunately, the Realized Library has ceased providing the service."
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#spx-realized-variance",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#spx-realized-variance",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "SPX realized variance",
    "text": "SPX realized variance\n\nfrom datetime import datetime as dt\n\n\ndf = pd.read_csv('OxfordManRealizedVolatilityIndices.csv', index_col=0, header=2)\nrv1 = pd.DataFrame(index=df.index)\nfor col in df.columns:\n    if col[-3:] == '.rk':\n        rv1[col] = df[col]\n\n# convert index into datetime\nrv1.index = [dt.strptime(str(date), \"%Y%m%d\") for date in rv1.index.values]\n\n\ndf\n\n\n\n\n\n\n\n\nSPX2.rv\nSPX2.rk\nSPX2.r\nSPX2.rv5ss\nSPX2.rv10\nSPX2.rv10ss\nSPX2.bv5\nSPX2.bv5ss\nSPX2.medrv\nSPX2.rs\n...\nFTSEMIB.rs\nFTSEMIB.rs5ss\nFTSEMIB.nobs\nFTSEMIB.timespan\nFTSEMIB.rcto\nFTSEMIB.open\nFTSEMIB.highlow\nFTSEMIB.highopen\nFTSEMIB.openprice\nFTSEMIB.closeprice\n\n\nDateID\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n20000103\n0.000157\n0.000161\n-0.010104\n0.000144\n0.000175\n0.000170\n0.000157\n0.000142\n0.000084\n0.000099\n...\n0.000323\n0.000314\n496.0\n29752.752\nNaN\n34152.212\n0.061739\n0.002525\n43900.00\n41477.00\n\n\n20000104\n0.000298\n0.000264\n-0.039292\n0.000219\n0.000400\n0.000247\n0.000206\n0.000206\n0.000092\n0.000254\n...\n0.000144\n0.000173\n471.0\n28319.096\nNaN\n35524.926\n0.020667\n0.001046\n41072.00\n40468.00\n\n\n20000105\n0.000307\n0.000305\n0.001749\n0.000298\n0.000258\n0.000307\n0.000292\n0.000279\n0.000111\n0.000138\n...\n0.000144\n0.000153\n497.0\n29751.621\nNaN\n34154.433\n-0.029584\n0.029584\n39000.00\n39449.00\n\n\n20000106\n0.000136\n0.000149\n0.001062\n0.000136\n0.000108\n0.000133\n0.000127\n0.000127\n0.000086\n0.000062\n...\n0.000196\n0.000216\n496.0\n29691.265\nNaN\n34154.335\n0.032678\n0.000276\n39834.00\n38736.00\n\n\n20000107\n0.000093\n0.000123\n0.026022\n0.000112\n0.000121\n0.000114\n0.000083\n0.000095\n0.000049\n0.000024\n...\n0.000072\n0.000081\n497.0\n29751.482\nNaN\n34153.093\n-0.027410\n0.026694\n39144.00\n40199.00\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n20171129\n0.000016\n0.000017\n-0.000693\n0.000017\n0.000016\n0.000016\n0.000012\n0.000013\n0.000019\n0.000009\n...\n0.000030\n0.000025\n19553.0\n27358.791\nNaN\n32401.219\n0.010438\n0.005222\n22391.37\n22325.94\n\n\n20171130\n0.000028\n0.000020\n0.004886\n0.000023\n0.000035\n0.000025\n0.000024\n0.000024\n0.000018\n0.000010\n...\n0.000021\n0.000024\n23672.0\n27357.591\nNaN\n32402.862\n0.008467\n0.004035\n22467.64\n22368.29\n\n\n20171201\n0.000088\n0.000130\n-0.001256\n0.000117\n0.000120\n0.000124\n0.000093\n0.000126\n0.000138\n0.000061\n...\n0.000047\n0.000054\n25521.0\n27359.230\nNaN\n32400.969\n-0.013862\n0.008983\n22168.37\n22106.10\n\n\n20171204\n0.000023\n0.000023\n-0.006854\n0.000021\n0.000022\n0.000020\n0.000024\n0.000022\n0.000020\n0.000014\n...\n0.000015\n0.000015\n21585.0\n27359.204\nNaN\n32400.856\n0.006576\n0.003166\n22350.63\n22362.11\n\n\n20171205\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n...\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n\n\n\n\n4683 rows × 399 columns\n\n\n\n\nrv1\n\n\n\n\n\n\n\n\nSPX2.rk\nFTSE2.rk\nN2252.rk\nGDAXI2.rk\nRUT2.rk\nAORD2.rk\nDJI2.rk\nIXIC2.rk\nFCHI2.rk\nHSI2.rk\n...\nAEX.rk\nSSMI.rk\nIBEX2.rk\nNSEI.rk\nMXX.rk\nBVSP.rk\nGSPTSE.rk\nSTOXX50E.rk\nFTSTI.rk\nFTSEMIB.rk\n\n\n\n\n2000-01-03\n0.000161\nNaN\nNaN\n0.000702\n0.000264\nNaN\n0.000135\n0.000574\n0.000262\n0.000261\n...\n0.000124\nNaN\n0.000168\nNaN\n0.000088\n0.000404\nNaN\n0.000272\n0.000158\n0.000520\n\n\n2000-01-04\n0.000264\n0.000249\n0.000162\n0.000591\n0.000232\n0.000045\n0.000159\n0.000575\n0.000372\n0.000207\n...\n0.000233\n0.000102\n0.000215\nNaN\n0.000214\n0.000617\nNaN\n0.000252\n0.000123\n0.000336\n\n\n2000-01-05\n0.000305\n0.000198\n0.000245\n0.001081\n0.000145\n0.000256\n0.000196\n0.000941\n0.000334\n0.001597\n...\n0.000448\n0.000123\n0.000292\nNaN\n0.000173\n0.000982\nNaN\n0.000506\n0.000394\n0.000422\n\n\n2000-01-06\n0.000149\n0.000148\n0.000198\n0.000306\n0.000056\n0.000031\n0.000124\n0.000580\n0.000248\n0.000870\n...\n0.000224\n0.000087\nNaN\n0.000030\n0.000056\n0.000501\nNaN\n0.000110\n0.000586\n0.000339\n\n\n2000-01-07\n0.000123\n0.000126\n0.000157\n0.000301\n0.000031\n0.000043\n0.000096\n0.000396\n0.000257\n0.000508\n...\n0.000107\n0.000066\n0.000155\n0.000039\n0.000082\n0.000258\nNaN\n0.000149\n0.000159\n0.000160\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n2017-11-29\n0.000017\n0.000018\n0.000025\n0.000047\n0.000037\n0.000016\n0.000012\n0.000066\n0.000030\n0.000039\n...\n0.000034\n0.000021\n0.000056\n0.000009\n0.000035\n0.000123\n0.000019\n0.000040\nNaN\n0.000029\n\n\n2017-11-30\n0.000020\n0.000020\n0.000038\n0.000058\n0.000035\n0.000031\n0.000026\n0.000039\n0.000040\n0.000040\n...\n0.000036\n0.000033\n0.000066\n0.000025\n0.000042\n0.000114\n0.000016\n0.000044\nNaN\n0.000033\n\n\n2017-12-01\n0.000130\n0.000041\n0.000066\n0.000142\n0.000208\n0.000017\n0.000153\n0.000126\n0.000110\n0.000066\n...\n0.000092\n0.000056\n0.000090\n0.000026\n0.000061\n0.000151\n0.000034\n0.000117\nNaN\n0.000073\n\n\n2017-12-04\n0.000023\n0.000027\n0.000039\n0.000050\n0.000104\n0.000009\n0.000024\n0.000060\n0.000028\n0.000082\n...\n0.000028\n0.000026\n0.000048\n0.000031\n0.000050\n0.000092\n0.000012\n0.000064\nNaN\n0.000029\n\n\n2017-12-05\nNaN\n0.000019\n0.000027\n0.000059\n0.000025\n0.000018\n0.000023\n0.000046\n0.000037\n0.000044\n...\n0.000026\n0.000028\n0.000043\n0.000026\n0.000045\n0.000139\n0.000009\n0.000039\nNaN\nNaN\n\n\n\n\n4683 rows × 21 columns\n\n\n\n\n# plot spx realized variance\n# spx2.rk contains the rv calcuated by the realized kernel within 5-min bins\nspx_rv = pd.DataFrame(rv1['SPX2.rk'])\nspx_rv.plot(color='red', grid=True, title='SPX realized variance',\n         figsize=(12, 6), ylim=(0,0.003));"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#the-corsi-har-rv-forecast",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#the-corsi-har-rv-forecast",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "The Corsi HAR-RV forecast",
    "text": "The Corsi HAR-RV forecast\n\nThe Corsi HAR-RV model implements a regression to fit the parameters.\nThis model can be regarded as a poor man’s version of a long memory model such as ARFIMA.\n\nTrue long-memory models such as ARFIMA are notoriously hard to fit.\n\nHAR-RV can also be considered an intelligent alternative to GARCH.\nThe model boils down to the regression\n\\[RV_{t,t+h} = \\beta_0 + \\beta_D\\,RV_t + \\beta_W\\,RV_{t-5,t} + \\beta_M\\,RV_{t-22,t} + \\epsilon_{t,t+h}.\\]\nIn words, the RV forecast for \\(h\\) days from now is a linear combination of the current realized variance and (aggregate) RV estimates for the last week and the last month.\n\n\nNote\n\n\\(RV\\) denotes the logarithm of realized variance.\n\n\nimport statsmodels.formula.api as sm\n\n\n# take h = 1 in the HAR-RV model\n# y = RV_{t+h}\n# rv1 = RV_t\n# rv5 = RV_{t-5}\n# rv22 = RV_{t-22}\nspx_rv = spx_rv.dropna()\nspx1 = np.array(spx_rv)\ny = spx1[22:]\nrv1 = spx1[21:-1]\nrv5 = np.array(pd.DataFrame(spx1[17:]).rolling(5).mean()[5-1:-1])\nrv22 = np.array(pd.DataFrame(spx1[:]).rolling(22).mean()[22-1:-1])\n\n\n# regress y over rv1 + rv5 + rv22\ndata = {'y': y, 'rv1': rv1, 'rv5': rv5, 'rv22': rv22}\nfit_har = sm.ols('y ~ rv1 + rv5 + rv22', data=data).fit()\n\n\nprint(fit_har.summary())\n\n                            OLS Regression Results                            \n==============================================================================\nDep. Variable:                      y   R-squared:                       0.506\nModel:                            OLS   Adj. R-squared:                  0.506\nMethod:                 Least Squares   F-statistic:                     1523.\nDate:                Mon, 28 Jul 2025   Prob (F-statistic):               0.00\nTime:                        13:34:19   Log-Likelihood:                 32207.\nNo. Observations:                4459   AIC:                        -6.441e+04\nDf Residuals:                    4455   BIC:                        -6.438e+04\nDf Model:                           3                                         \nCovariance Type:            nonrobust                                         \n==============================================================================\n                 coef    std err          t      P&gt;|t|      [0.025      0.975]\n------------------------------------------------------------------------------\nIntercept   1.046e-05   3.07e-06      3.403      0.001    4.43e-06    1.65e-05\nrv1            0.2250      0.018     12.458      0.000       0.190       0.260\nrv5            0.4543      0.031     14.870      0.000       0.394       0.514\nrv22           0.2221      0.027      8.078      0.000       0.168       0.276\n==============================================================================\nOmnibus:                    10266.653   Durbin-Watson:                   2.045\nProb(Omnibus):                  0.000   Jarque-Bera (JB):        167121903.379\nSkew:                          21.714   Prob(JB):                         0.00\nKurtosis:                     950.431   Cond. No.                     1.47e+04\n==============================================================================\n\nNotes:\n[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n[2] The condition number is large, 1.47e+04. This might indicate that there are\nstrong multicollinearity or other numerical problems.\n\n\n\nfit_har.params\n\nIntercept    0.000010\nrv1          0.225020\nrv5          0.454300\nrv22         0.222093\ndtype: float64\n\n\n\n# convert fitted values into pd.DataFrame\nfitted = pd.DataFrame({'fitted': np.array(fit_har.fittedvalues)}, index=spx_rv[22:].index)\nfitted.head()\n\n\n\n\n\n\n\n\nfitted\n\n\n\n\n2000-02-03\n0.000159\n\n\n2000-02-04\n0.000166\n\n\n2000-02-07\n0.000124\n\n\n2000-02-08\n0.000105\n\n\n2000-02-09\n0.000108\n\n\n\n\n\n\n\n\n# log plot\nplt.figure(figsize=(12, 6))\nplt.plot(spx_rv, color='red', ls='dotted', label='Observed RV')\nplt.plot(fitted, 'b', label='Forecasted RV')\nplt.title('Observed and forecasted RV based on HAR model', fontsize=20, fontweight='bold')\nplt.grid()\nplt.legend();\n\n\n\n\n\n\n\n\n\n\nReferences\n\n\n\n\n^Fulvio Corsi, A simple approximate long-memory model of realized volatility, Journal of Financial Econometrics 7(2) 174–196 (2009).\n\n\n^Lan Zhang, Per A. Mykland and Yacine Aït-Sahalia, A tale of two time scales: Determining intergrated volatility with noise high-frequency data, Journal of the American Statistical Association, 100(472), 1394–1411 (2005).\n\n\n^Bin Zhou, High-frequency data and volatility in foreign-exchange rates, Journal of Business & Economic Statistics, 14(1), 45–52 (1996).\n\n\n\nLecture Notes\nMoneyness: Moneyness (在值程度) 是金融衍生品中用于描述期权状态的核心概念, 它反映了期权的行权价 (Strike Price) 与标的资产当前价格 (Underlying Asset Price) 之间的关系.根据这种关系, 期权可以分为: 实值期权 (In-the-Money, ITM)、平值期权 (At-the-Money, ATM) 和虚值期权 (Out-of-the-Money, OTM).\n\nIn-the-Money: 行权后能活力获利.\nAt-the-Money: 行权后无利可图.\nOut-of-the-Money: 行权后会亏损.\n\n公式:\n\\[\n\\text{Moneyness} = \\frac{K e^{-r \\tau}}{S e^{-d\\tau}}.\n\\]"
  },
  {
    "objectID": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#lecture-notes",
    "href": "NSD_Lec05_Summer2025/NSD_Lec05-Volatility_Summer2025.html#lecture-notes",
    "title": "Topics in Quantitative Finance, Summer 2025",
    "section": "Lecture Notes",
    "text": "Lecture Notes\nMoneyness: Moneyness (在值程度) 是金融衍生品中用于描述期权状态的核心概念, 它反映了期权的行权价 (Strike Price) 与标的资产当前价格 (Underlying Asset Price) 之间的关系.根据这种关系, 期权可以分为: 实值期权 (In-the-Money, ITM)、平值期权 (At-the-Money, ATM) 和虚值期权 (Out-of-the-Money, OTM).\n\nIn-the-Money: 行权后能活力获利.\nAt-the-Money: 行权后无利可图.\nOut-of-the-Money: 行权后会亏损.\n\n公式:\n\\[\n\\text{Moneyness} = \\frac{K e^{-r \\tau}}{S e^{-d\\tau}}.\n\\]"
  }
]